var res = {'data':'HTTP/1.1 200 Partial Content\x0aX-Powered-By: Express\x0aAccess-Control-Allow-Origin: *\x0aAccept-Ranges: bytes\x0aContent-Range: bytes 0-399999/3104604\x0aContent-Type: application/octet-stream; charset=UTF-8\x0aContent-Length: 400000\x0aETag: W/\x2261a80-RUj5ccv+69Q+ovvUnSQq+JBx5pM\x22\x0aDate: Sun, 26 Nov 2017 10:41:16 GMT\x0aConnection: keep-alive\x0a\x0awebpackJsonp([\x22vendor\x22],{\x0a\x0a/***/ \x22../../../../ansi-html/index.js\x22:\x0a/***/ (function(module, exports, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a\x0a\x0amodule.exports = ansiHTML\x0a\x0a// Reference to https://github.com/sindresorhus/ansi-regex\x0avar _regANSI = /(?:(?:\x5cu001b\x5c[)|\x5cu009b)(?:(?:[0-9]{1,3})?(?:(?:;[0-9]{0,3})*)?[A-M|f-m])|\x5cu001b[A-M]/\x0a\x0avar _defColors = {\x0a  reset: [\x27fff\x27, \x27000\x27], // [FOREGROUD_COLOR, BACKGROUND_COLOR]\x0a  black: \x27000\x27,\x0a  red: \x27ff0000\x27,\x0a  green: \x27209805\x27,\x0a  yellow: \x27e8bf03\x27,\x0a  blue: \x270000ff\x27,\x0a  magenta: \x27ff00ff\x27,\x0a  cyan: \x2700ffee\x27,\x0a  lightgrey: \x27f0f0f0\x27,\x0a  darkgrey: \x27888\x27\x0a}\x0avar _styles = {\x0a  30: \x27black\x27,\x0a  31: \x27red\x27,\x0a  32: \x27green\x27,\x0a  33: \x27yellow\x27,\x0a  34: \x27blue\x27,\x0a  35: \x27magenta\x27,\x0a  36: \x27cyan\x27,\x0a  37: \x27lightgrey\x27\x0a}\x0avar _openTags = {\x0a  \x271\x27: \x27font-weight:bold\x27, // bold\x0a  \x272\x27: \x27opacity:0.5\x27, // dim\x0a  \x273\x27: \x27\x3ci\x3e\x27, // italic\x0a  \x274\x27: \x27\x3cu\x3e\x27, // underscore\x0a  \x278\x27: \x27display:none\x27, // hidden\x0a  \x279\x27: \x27\x3cdel\x3e\x27 // delete\x0a}\x0avar _closeTags = {\x0a  \x2723\x27: \x27\x3c/i\x3e\x27, // reset italic\x0a  \x2724\x27: \x27\x3c/u\x3e\x27, // reset underscore\x0a  \x2729\x27: \x27\x3c/del\x3e\x27 // reset delete\x0a}\x0a\x0a;[0, 21, 22, 27, 28, 39, 49].forEach(function (n) {\x0a  _closeTags[n] = \x27\x3c/span\x3e\x27\x0a})\x0a\x0a/**\x0a * Converts text with ANSI color codes to HTML markup.\x0a * @param {String} text\x0a * @returns {*}\x0a */\x0afunction ansiHTML (text) {\x0a  // Returns the text if the string has no ANSI escape code.\x0a  if (!_regANSI.test(text)) {\x0a    return text\x0a  }\x0a\x0a  // Cache opened sequence.\x0a  var ansiCodes = []\x0a  // Replace with markup.\x0a  var ret = text.replace(/\x5c033\x5c[(\x5cd+)*m/g, function (match, seq) {\x0a    var ot = _openTags[seq]\x0a    if (ot) {\x0a      // If current sequence has been opened, close it.\x0a      if (!!~ansiCodes.indexOf(seq)) { // eslint-disable-line no-extra-boolean-cast\x0a        ansiCodes.pop()\x0a        return \x27\x3c/span\x3e\x27\x0a      }\x0a      // Open tag.\x0a      ansiCodes.push(seq)\x0a      return ot[0] === \x27\x3c\x27 ? ot : \x27\x3cspan style=\x22\x27 + ot + \x27;\x22\x3e\x27\x0a    }\x0a\x0a    var ct = _closeTags[seq]\x0a    if (ct) {\x0a      // Pop sequence\x0a      ansiCodes.pop()\x0a      return ct\x0a    }\x0a    return \x27\x27\x0a  })\x0a\x0a  // Make sure tags are closed.\x0a  var l = ansiCodes.length\x0a  ;(l \x3e 0) && (ret += Array(l + 1).join(\x27\x3c/span\x3e\x27))\x0a\x0a  return ret\x0a}\x0a\x0a/**\x0a * Customize colors.\x0a * @param {Object} colors reference to _defColors\x0a */\x0aansiHTML.setColors = function (colors) {\x0a  if (typeof colors !== \x27object\x27) {\x0a    throw new Error(\x27`colors` parameter must be an Object.\x27)\x0a  }\x0a\x0a  var _finalColors = {}\x0a  for (var key in _defColors) {\x0a    var hex = colors.hasOwnProperty(key) ? colors[key] : null\x0a    if (!hex) {\x0a      _finalColors[key] = _defColors[key]\x0a      continue\x0a    }\x0a    if (\x27reset\x27 === key) {\x0a      if (typeof hex === \x27string\x27) {\x0a        hex = [hex]\x0a      }\x0a      if (!Array.isArray(hex) || hex.length === 0 || hex.some(function (h) {\x0a        return typeof h !== \x27string\x27\x0a      })) {\x0a        throw new Error(\x27The value of `\x27 + key + \x27` property must be an Array and each item could only be a hex string, e.g.: FF0000\x27)\x0a      }\x0a      var defHexColor = _defColors[key]\x0a      if (!hex[0]) {\x0a        hex[0] = defHexColor[0]\x0a      }\x0a      if (hex.length === 1 || !hex[1]) {\x0a        hex = [hex[0]]\x0a        hex.push(defHexColor[1])\x0a      }\x0a\x0a      hex = hex.slice(0, 2)\x0a    } else if (typeof hex !== \x27string\x27) {\x0a      throw new Error(\x27The value of `\x27 + key + \x27` property must be a hex string, e.g.: FF0000\x27)\x0a    }\x0a    _finalColors[key] = hex\x0a  }\x0a  _setTags(_finalColors)\x0a}\x0a\x0a/**\x0a * Reset colors.\x0a */\x0aansiHTML.reset = function () {\x0a  _setTags(_defColors)\x0a}\x0a\x0a/**\x0a * Expose tags, including open and close.\x0a * @type {Object}\x0a */\x0aansiHTML.tags = {}\x0a\x0aif (Object.defineProperty) {\x0a  Object.defineProperty(ansiHTML.tags, \x27open\x27, {\x0a    get: function () { return _openTags }\x0a  })\x0a  Object.defineProperty(ansiHTML.tags, \x27close\x27, {\x0a    get: function () { return _closeTags }\x0a  })\x0a} else {\x0a  ansiHTML.tags.open = _openTags\x0a  ansiHTML.tags.close = _closeTags\x0a}\x0a\x0afunction _setTags (colors) {\x0a  // reset all\x0a  _openTags[\x270\x27] = \x27font-weight:normal;opacity:1;color:#\x27 + colors.reset[0] + \x27;background:#\x27 + colors.reset[1]\x0a  // inverse\x0a  _openTags[\x277\x27] = \x27color:#\x27 + colors.reset[1] + \x27;background:#\x27 + colors.reset[0]\x0a  // dark grey\x0a  _openTags[\x2790\x27] = \x27color:#\x27 + colors.darkgrey\x0a\x0a  for (var code in _styles) {\x0a    var color = _styles[code]\x0a    var oriColor = colors[color] || \x27000\x27\x0a    _openTags[code] = \x27color:#\x27 + oriColor\x0a    code = parseInt(code)\x0a    _openTags[(code + 10).toString()] = \x27background:#\x27 + oriColor\x0a  }\x0a}\x0a\x0aansiHTML.reset()\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../ansi-regex/index.js\x22:\x0a/***/ (function(module, exports, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a\x0amodule.exports = function () {\x0a\x09return /[\x5cu001b\x5cu009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-PRZcf-nqry=\x3e\x3c]/g;\x0a};\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../css-loader/lib/css-base.js\x22:\x0a/***/ (function(module, exports) {\x0a\x0a/*\x0a\x09MIT License http://www.opensource.org/licenses/mit-license.php\x0a\x09Author Tobias Koppers @sokra\x0a*/\x0a// css base code, injected by the css-loader\x0amodule.exports = function(useSourceMap) {\x0a\x09var list = [];\x0a\x0a\x09// return the list of modules as css string\x0a\x09list.toString = function toString() {\x0a\x09\x09return this.map(function (item) {\x0a\x09\x09\x09var content = cssWithMappingToString(item, useSourceMap);\x0a\x09\x09\x09if(item[2]) {\x0a\x09\x09\x09\x09return \x22@media \x22 + item[2] + \x22{\x22 + content + \x22}\x22;\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09return content;\x0a\x09\x09\x09}\x0a\x09\x09}).join(\x22\x22);\x0a\x09};\x0a\x0a\x09// import a list of modules into the list\x0a\x09list.i = function(modules, mediaQuery) {\x0a\x09\x09if(typeof modules === \x22string\x22)\x0a\x09\x09\x09modules = [[null, modules, \x22\x22]];\x0a\x09\x09var alreadyImportedModules = {};\x0a\x09\x09for(var i = 0; i \x3c this.length; i++) {\x0a\x09\x09\x09var id = this[i][0];\x0a\x09\x09\x09if(typeof id === \x22number\x22)\x0a\x09\x09\x09\x09alreadyImportedModules[id] = true;\x0a\x09\x09}\x0a\x09\x09for(i = 0; i \x3c modules.length; i++) {\x0a\x09\x09\x09var item = modules[i];\x0a\x09\x09\x09// skip already imported module\x0a\x09\x09\x09// this implementation is not 100% perfect for weird media query combinations\x0a\x09\x09\x09//  when a module is imported multiple times with different media queries.\x0a\x09\x09\x09//  I hope this will never occur (Hey this way we have smaller bundles)\x0a\x09\x09\x09if(typeof item[0] !== \x22number\x22 || !alreadyImportedModules[item[0]]) {\x0a\x09\x09\x09\x09if(mediaQuery && !item[2]) {\x0a\x09\x09\x09\x09\x09item[2] = mediaQuery;\x0a\x09\x09\x09\x09} else if(mediaQuery) {\x0a\x09\x09\x09\x09\x09item[2] = \x22(\x22 + item[2] + \x22) and (\x22 + mediaQuery + \x22)\x22;\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09\x09list.push(item);\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x09};\x0a\x09return list;\x0a};\x0a\x0afunction cssWithMappingToString(item, useSourceMap) {\x0a\x09var content = item[1] || \x27\x27;\x0a\x09var cssMapping = item[3];\x0a\x09if (!cssMapping) {\x0a\x09\x09return content;\x0a\x09}\x0a\x0a\x09if (useSourceMap && typeof btoa === \x27function\x27) {\x0a\x09\x09var sourceMapping = toComment(cssMapping);\x0a\x09\x09var sourceURLs = cssMapping.sources.map(function (source) {\x0a\x09\x09\x09return \x27/*# sourceURL=\x27 + cssMapping.sourceRoot + source + \x27 */\x27\x0a\x09\x09});\x0a\x0a\x09\x09return [content].concat(sourceURLs).concat([sourceMapping]).join(\x27\x5cn\x27);\x0a\x09}\x0a\x0a\x09return [content].join(\x27\x5cn\x27);\x0a}\x0a\x0a// Adapted from convert-source-map (MIT)\x0afunction toComment(sourceMap) {\x0a\x09// eslint-disable-next-line no-undef\x0a\x09var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\x0a\x09var data = \x27sourceMappingURL=data:application/json;charset=utf-8;base64,\x27 + base64;\x0a\x0a\x09return \x27/*# \x27 + data + \x27 */\x27;\x0a}\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../debug/src/browser.js\x22:\x0a/***/ (function(module, exports, __webpack_require__) {\x0a\x0a/* WEBPACK VAR INJECTION */(function(process) {/**\x0a * This is the web browser implementation of `debug()`.\x0a *\x0a * Expose `debug()` as the module.\x0a */\x0a\x0aexports = module.exports = __webpack_require__(\x22../../../../debug/src/debug.js\x22);\x0aexports.log = log;\x0aexports.formatArgs = formatArgs;\x0aexports.save = save;\x0aexports.load = load;\x0aexports.useColors = useColors;\x0aexports.storage = \x27undefined\x27 != typeof chrome\x0a               && \x27undefined\x27 != typeof chrome.storage\x0a                  ? chrome.storage.local\x0a                  : localstorage();\x0a\x0a/**\x0a * Colors.\x0a */\x0a\x0aexports.colors = [\x0a  \x27lightseagreen\x27,\x0a  \x27forestgreen\x27,\x0a  \x27goldenrod\x27,\x0a  \x27dodgerblue\x27,\x0a  \x27darkorchid\x27,\x0a  \x27crimson\x27\x0a];\x0a\x0a/**\x0a * Currently only WebKit-based Web Inspectors, Firefox \x3e= v31,\x0a * and the Firebug extension (any Firefox version) are known\x0a * to support \x22%c\x22 CSS customizations.\x0a *\x0a * TODO: add a `localStorage` variable to explicitly enable/disable colors\x0a */\x0a\x0afunction useColors() {\x0a  // NB: In an Electron preload script, document will be defined but not fully\x0a  // initialized. Since we know we\x27re in Chrome, we\x27ll just detect this case\x0a  // explicitly\x0a  if (typeof window !== \x27undefined\x27 && window.process && window.process.type === \x27renderer\x27) {\x0a    return true;\x0a  }\x0a\x0a  // is webkit? http://stackoverflow.com/a/16459606/376773\x0a  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\x0a  return (typeof document !== \x27undefined\x27 && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\x0a    // is firebug? http://stackoverflow.com/a/398120/376773\x0a    (typeof window !== \x27undefined\x27 && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\x0a    // is firefox \x3e= v31?\x0a    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\x0a    (typeof navigator !== \x27undefined\x27 && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\x5c/(\x5cd+)/) && parseInt(RegExp.$1, 10) \x3e= 31) ||\x0a    // double check webkit in userAgent just in case we are in a worker\x0a    (typeof navigator !== \x27undefined\x27 && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\x5c/(\x5cd+)/));\x0a}\x0a\x0a/**\x0a * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\x0a */\x0a\x0aexports.formatters.j = function(v) {\x0a  try {\x0a    return JSON.stringify(v);\x0a  } catch (err) {\x0a    return \x27[UnexpectedJSONParseError]: \x27 + err.message;\x0a  }\x0a};\x0a\x0a\x0a/**\x0a * Colorize log arguments if enabled.\x0a *\x0a * @api public\x0a */\x0a\x0afunction formatArgs(args) {\x0a  var useColors = this.useColors;\x0a\x0a  args[0] = (useColors ? \x27%c\x27 : \x27\x27)\x0a    + this.namespace\x0a    + (useColors ? \x27 %c\x27 : \x27 \x27)\x0a    + args[0]\x0a    + (useColors ? \x27%c \x27 : \x27 \x27)\x0a    + \x27+\x27 + exports.humanize(this.diff);\x0a\x0a  if (!useColors) return;\x0a\x0a  var c = \x27color: \x27 + this.color;\x0a  args.splice(1, 0, c, \x27color: inherit\x27)\x0a\x0a  // the final \x22%c\x22 is somewhat tricky, because there could be other\x0a  // arguments passed either before or after the %c, so we need to\x0a  // figure out the correct index to insert the CSS into\x0a  var index = 0;\x0a  var lastC = 0;\x0a  args[0].replace(/%[a-zA-Z%]/g, function(match) {\x0a    if (\x27%%\x27 === match) return;\x0a    index++;\x0a    if (\x27%c\x27 === match) {\x0a      // we only are interested in the *last* %c\x0a      // (the user may have provided their own)\x0a      lastC = index;\x0a    }\x0a  });\x0a\x0a  args.splice(lastC, 0, c);\x0a}\x0a\x0a/**\x0a * Invokes `console.log()` when available.\x0a * No-op when `console.log` is not a \x22function\x22.\x0a *\x0a * @api public\x0a */\x0a\x0afunction log() {\x0a  // this hackery is required for IE8/9, where\x0a  // the `console.log` function doesn\x27t have \x27apply\x27\x0a  return \x27object\x27 === typeof console\x0a    && console.log\x0a    && Function.prototype.apply.call(console.log, console, arguments);\x0a}\x0a\x0a/**\x0a * Save `namespaces`.\x0a *\x0a * @param {String} namespaces\x0a * @api private\x0a */\x0a\x0afunction save(namespaces) {\x0a  try {\x0a    if (null == namespaces) {\x0a      exports.storage.removeItem(\x27debug\x27);\x0a    } else {\x0a      exports.storage.debug = namespaces;\x0a    }\x0a  } catch(e) {}\x0a}\x0a\x0a/**\x0a * Load `namespaces`.\x0a *\x0a * @return {String} returns the previously persisted debug modes\x0a * @api private\x0a */\x0a\x0afunction load() {\x0a  var r;\x0a  try {\x0a    r = exports.storage.debug;\x0a  } catch(e) {}\x0a\x0a  // If debug isn\x27t set in LS, and we\x27re in Electron, try to load $DEBUG\x0a  if (!r && typeof process !== \x27undefined\x27 && \x27env\x27 in process) {\x0a    r = process.env.DEBUG;\x0a  }\x0a\x0a  return r;\x0a}\x0a\x0a/**\x0a * Enable namespaces listed in `localStorage.debug` initially.\x0a */\x0a\x0aexports.enable(load());\x0a\x0a/**\x0a * Localstorage attempts to return the localstorage.\x0a *\x0a * This is necessary because safari throws\x0a * when a user disables cookies/localstorage\x0a * and you attempt to access it.\x0a *\x0a * @return {LocalStorage}\x0a * @api private\x0a */\x0a\x0afunction localstorage() {\x0a  try {\x0a    return window.localStorage;\x0a  } catch (e) {}\x0a}\x0a\x0a/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\x22../../../../process/browser.js\x22)))\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../debug/src/debug.js\x22:\x0a/***/ (function(module, exports, __webpack_require__) {\x0a\x0a\x0a/**\x0a * This is the common logic for both the Node.js and web browser\x0a * implementations of `debug()`.\x0a *\x0a * Expose `debug()` as the module.\x0a */\x0a\x0aexports = module.exports = createDebug.debug = createDebug[\x27default\x27] = createDebug;\x0aexports.coerce = coerce;\x0aexports.disable = disable;\x0aexports.enable = enable;\x0aexports.enabled = enabled;\x0aexports.humanize = __webpack_require__(\x22../../../../ms/index.js\x22);\x0a\x0a/**\x0a * The currently active debug mode names, and names to skip.\x0a */\x0a\x0aexports.names = [];\x0aexports.skips = [];\x0a\x0a/**\x0a * Map of special \x22%n\x22 handling functions, for the debug \x22format\x22 argument.\x0a *\x0a * Valid key names are a single, lower or upper-case letter, i.e. \x22n\x22 and \x22N\x22.\x0a */\x0a\x0aexports.formatters = {};\x0a\x0a/**\x0a * Previous log timestamp.\x0a */\x0a\x0avar prevTime;\x0a\x0a/**\x0a * Select a color.\x0a * @param {String} namespace\x0a * @return {Number}\x0a * @api private\x0a */\x0a\x0afunction selectColor(namespace) {\x0a  var hash = 0, i;\x0a\x0a  for (i in namespace) {\x0a    hash  = ((hash \x3c\x3c 5) - hash) + namespace.charCodeAt(i);\x0a    hash |= 0; // Convert to 32bit integer\x0a  }\x0a\x0a  return exports.colors[Math.abs(hash) % exports.colors.length];\x0a}\x0a\x0a/**\x0a * Create a debugger with the given `namespace`.\x0a *\x0a * @param {String} namespace\x0a * @return {Function}\x0a * @api public\x0a */\x0a\x0afunction createDebug(namespace) {\x0a\x0a  function debug() {\x0a    // disabled?\x0a    if (!debug.enabled) return;\x0a\x0a    var self = debug;\x0a\x0a    // set `diff` timestamp\x0a    var curr = +new Date();\x0a    var ms = curr - (prevTime || curr);\x0a    self.diff = ms;\x0a    self.prev = prevTime;\x0a    self.curr = curr;\x0a    prevTime = curr;\x0a\x0a    // turn the `arguments` into a proper Array\x0a    var args = new Array(arguments.length);\x0a    for (var i = 0; i \x3c args.length; i++) {\x0a      args[i] = arguments[i];\x0a    }\x0a\x0a    args[0] = exports.coerce(args[0]);\x0a\x0a    if (\x27string\x27 !== typeof args[0]) {\x0a      // anything else let\x27s inspect with %O\x0a      args.unshift(\x27%O\x27);\x0a    }\x0a\x0a    // apply any `formatters` transformations\x0a    var index = 0;\x0a    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\x0a      // if we encounter an escaped % then don\x27t increase the array index\x0a      if (match === \x27%%\x27) return match;\x0a      index++;\x0a      var formatter = exports.formatters[format];\x0a      if (\x27function\x27 === typeof formatter) {\x0a        var val = args[index];\x0a        match = formatter.call(self, val);\x0a\x0a        // now we need to remove `args[index]` since it\x27s inlined in the `format`\x0a        args.splice(index, 1);\x0a        index--;\x0a      }\x0a      return match;\x0a    });\x0a\x0a    // apply env-specific formatting (colors, etc.)\x0a    exports.formatArgs.call(self, args);\x0a\x0a    var logFn = debug.log || exports.log || console.log.bind(console);\x0a    logFn.apply(self, args);\x0a  }\x0a\x0a  debug.namespace = namespace;\x0a  debug.enabled = exports.enabled(namespace);\x0a  debug.useColors = exports.useColors();\x0a  debug.color = selectColor(namespace);\x0a\x0a  // env-specific initialization logic for debug instances\x0a  if (\x27function\x27 === typeof exports.init) {\x0a    exports.init(debug);\x0a  }\x0a\x0a  return debug;\x0a}\x0a\x0a/**\x0a * Enables a debug mode by namespaces. This can include modes\x0a * separated by a colon and wildcards.\x0a *\x0a * @param {String} namespaces\x0a * @api public\x0a */\x0a\x0afunction enable(namespaces) {\x0a  exports.save(namespaces);\x0a\x0a  exports.names = [];\x0a  exports.skips = [];\x0a\x0a  var split = (typeof namespaces === \x27string\x27 ? namespaces : \x27\x27).split(/[\x5cs,]+/);\x0a  var len = split.length;\x0a\x0a  for (var i = 0; i \x3c len; i++) {\x0a    if (!split[i]) continue; // ignore empty strings\x0a    namespaces = split[i].replace(/\x5c*/g, \x27.*?\x27);\x0a    if (namespaces[0] === \x27-\x27) {\x0a      exports.skips.push(new RegExp(\x27^\x27 + namespaces.substr(1) + \x27$\x27));\x0a    } else {\x0a      exports.names.push(new RegExp(\x27^\x27 + namespaces + \x27$\x27));\x0a    }\x0a  }\x0a}\x0a\x0a/**\x0a * Disable debug output.\x0a *\x0a * @api public\x0a */\x0a\x0afunction disable() {\x0a  exports.enable(\x27\x27);\x0a}\x0a\x0a/**\x0a * Returns true if the given mode name is enabled, false otherwise.\x0a *\x0a * @param {String} name\x0a * @return {Boolean}\x0a * @api public\x0a */\x0a\x0afunction enabled(name) {\x0a  var i, len;\x0a  for (i = 0, len = exports.skips.length; i \x3c len; i++) {\x0a    if (exports.skips[i].test(name)) {\x0a      return false;\x0a    }\x0a  }\x0a  for (i = 0, len = exports.names.length; i \x3c len; i++) {\x0a    if (exports.names[i].test(name)) {\x0a      return true;\x0a    }\x0a  }\x0a  return false;\x0a}\x0a\x0a/**\x0a * Coerce `val`.\x0a *\x0a * @param {Mixed} val\x0a * @return {Mixed}\x0a * @api private\x0a */\x0a\x0afunction coerce(val) {\x0a  if (val instanceof Error) return val.stack || val.message;\x0a  return val;\x0a}\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../events/events.js\x22:\x0a/***/ (function(module, exports) {\x0a\x0a// Copyright Joyent, Inc. and other Node contributors.\x0a//\x0a// Permission is hereby granted, free of charge, to any person obtaining a\x0a// copy of this software and associated documentation files (the\x0a// \x22Software\x22), to deal in the Software without restriction, including\x0a// without limitation the rights to use, copy, modify, merge, publish,\x0a// distribute, sublicense, and/or sell copies of the Software, and to permit\x0a// persons to whom the Software is furnished to do so, subject to the\x0a// following conditions:\x0a//\x0a// The above copyright notice and this permission notice shall be included\x0a// in all copies or substantial portions of the Software.\x0a//\x0a// THE SOFTWARE IS PROVIDED \x22AS IS\x22, WITHOUT WARRANTY OF ANY KIND, EXPRESS\x0a// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0a// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0a// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\x0a// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\x0a// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0a// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0a\x0afunction EventEmitter() {\x0a  this._events = this._events || {};\x0a  this._maxListeners = this._maxListeners || undefined;\x0a}\x0amodule.exports = EventEmitter;\x0a\x0a// Backwards-compat with node 0.10.x\x0aEventEmitter.EventEmitter = EventEmitter;\x0a\x0aEventEmitter.prototype._events = undefined;\x0aEventEmitter.prototype._maxListeners = undefined;\x0a\x0a// By default EventEmitters will print a warning if more than 10 listeners are\x0a// added to it. This is a useful default which helps finding memory leaks.\x0aEventEmitter.defaultMaxListeners = 10;\x0a\x0a// Obviously not all Emitters should be limited to 10. This function allows\x0a// that to be increased. Set to zero for unlimited.\x0aEventEmitter.prototype.setMaxListeners = function(n) {\x0a  if (!isNumber(n) || n \x3c 0 || isNaN(n))\x0a    throw TypeError(\x27n must be a positive number\x27);\x0a  this._maxListeners = n;\x0a  return this;\x0a};\x0a\x0aEventEmitter.prototype.emit = function(type) {\x0a  var er, handler, len, args, i, listeners;\x0a\x0a  if (!this._events)\x0a    this._events = {};\x0a\x0a  // If there is no \x27error\x27 event listener then throw.\x0a  if (type === \x27error\x27) {\x0a    if (!this._events.error ||\x0a        (isObject(this._events.error) && !this._events.error.length)) {\x0a      er = arguments[1];\x0a      if (er instanceof Error) {\x0a        throw er; // Unhandled \x27error\x27 event\x0a      } else {\x0a        // At least give some kind of context to the user\x0a        var err = new Error(\x27Uncaught, unspecified \x22error\x22 event. (\x27 + er + \x27)\x27);\x0a        err.context = er;\x0a        throw err;\x0a      }\x0a    }\x0a  }\x0a\x0a  handler = this._events[type];\x0a\x0a  if (isUndefined(handler))\x0a    return false;\x0a\x0a  if (isFunction(handler)) {\x0a    switch (arguments.length) {\x0a      // fast cases\x0a      case 1:\x0a        handler.call(this);\x0a        break;\x0a      case 2:\x0a        handler.call(this, arguments[1]);\x0a        break;\x0a      case 3:\x0a        handler.call(this, arguments[1], arguments[2]);\x0a        break;\x0a      // slower\x0a      default:\x0a        args = Array.prototype.slice.call(arguments, 1);\x0a        handler.apply(this, args);\x0a    }\x0a  } else if (isObject(handler)) {\x0a    args = Array.prototype.slice.call(arguments, 1);\x0a    listeners = handler.slice();\x0a    len = listeners.length;\x0a    for (i = 0; i \x3c len; i++)\x0a      listeners[i].apply(this, args);\x0a  }\x0a\x0a  return true;\x0a};\x0a\x0aEventEmitter.prototype.addListener = function(type, listener) {\x0a  var m;\x0a\x0a  if (!isFunction(listener))\x0a    throw TypeError(\x27listener must be a function\x27);\x0a\x0a  if (!this._events)\x0a    this._events = {};\x0a\x0a  // To avoid recursion in the case that type === \x22newListener\x22! Before\x0a  // adding it to the listeners, first emit \x22newListener\x22.\x0a  if (this._events.newListener)\x0a    this.emit(\x27newListener\x27, type,\x0a              isFunction(listener.listener) ?\x0a              listener.listener : listener);\x0a\x0a  if (!this._events[type])\x0a    // Optimize the case of one listener. Don\x27t need the extra array object.\x0a    this._events[type] = listener;\x0a  else if (isObject(this._events[type]))\x0a    // If we\x27ve already got an array, just append.\x0a    this._events[type].push(listener);\x0a  else\x0a    // Adding the second element, need to change to array.\x0a    this._events[type] = [this._events[type], listener];\x0a\x0a  // Check for listener leak\x0a  if (isObject(this._events[type]) && !this._events[type].warned) {\x0a    if (!isUndefined(this._maxListeners)) {\x0a      m = this._maxListeners;\x0a    } else {\x0a      m = EventEmitter.defaultMaxListeners;\x0a    }\x0a\x0a    if (m && m \x3e 0 && this._events[type].length \x3e m) {\x0a      this._events[type].warned = true;\x0a      console.error(\x27(node) warning: possible EventEmitter memory \x27 +\x0a                    \x27leak detected. %d listeners added. \x27 +\x0a                    \x27Use emitter.setMaxListeners() to increase limit.\x27,\x0a                    this._events[type].length);\x0a      if (typeof console.trace === \x27function\x27) {\x0a        // not supported in IE 10\x0a        console.trace();\x0a      }\x0a    }\x0a  }\x0a\x0a  return this;\x0a};\x0a\x0aEventEmitter.prototype.on = EventEmitter.prototype.addListener;\x0a\x0aEventEmitter.prototype.once = function(type, listener) {\x0a  if (!isFunction(listener))\x0a    throw TypeError(\x27listener must be a function\x27);\x0a\x0a  var fired = false;\x0a\x0a  function g() {\x0a    this.removeListener(type, g);\x0a\x0a    if (!fired) {\x0a      fired = true;\x0a      listener.apply(this, arguments);\x0a    }\x0a  }\x0a\x0a  g.listener = listener;\x0a  this.on(type, g);\x0a\x0a  return this;\x0a};\x0a\x0a// emits a \x27removeListener\x27 event iff the listener was removed\x0aEventEmitter.prototype.removeListener = function(type, listener) {\x0a  var list, position, length, i;\x0a\x0a  if (!isFunction(listener))\x0a    throw TypeError(\x27listener must be a function\x27);\x0a\x0a  if (!this._events || !this._events[type])\x0a    return this;\x0a\x0a  list = this._events[type];\x0a  length = list.length;\x0a  position = -1;\x0a\x0a  if (list === listener ||\x0a      (isFunction(list.listener) && list.listener === listener)) {\x0a    delete this._events[type];\x0a    if (this._events.removeListener)\x0a      this.emit(\x27removeListener\x27, type, listener);\x0a\x0a  } else if (isObject(list)) {\x0a    for (i = length; i-- \x3e 0;) {\x0a      if (list[i] === listener ||\x0a          (list[i].listener && list[i].listener === listener)) {\x0a        position = i;\x0a        break;\x0a      }\x0a    }\x0a\x0a    if (position \x3c 0)\x0a      return this;\x0a\x0a    if (list.length === 1) {\x0a      list.length = 0;\x0a      delete this._events[type];\x0a    } else {\x0a      list.splice(position, 1);\x0a    }\x0a\x0a    if (this._events.removeListener)\x0a      this.emit(\x27removeListener\x27, type, listener);\x0a  }\x0a\x0a  return this;\x0a};\x0a\x0aEventEmitter.prototype.removeAllListeners = function(type) {\x0a  var key, listeners;\x0a\x0a  if (!this._events)\x0a    return this;\x0a\x0a  // not listening for removeListener, no need to emit\x0a  if (!this._events.removeListener) {\x0a    if (arguments.length === 0)\x0a      this._events = {};\x0a    else if (this._events[type])\x0a      delete this._events[type];\x0a    return this;\x0a  }\x0a\x0a  // emit removeListener for all listeners on all events\x0a  if (arguments.length === 0) {\x0a    for (key in this._events) {\x0a      if (key === \x27removeListener\x27) continue;\x0a      this.removeAllListeners(key);\x0a    }\x0a    this.removeAllListeners(\x27removeListener\x27);\x0a    this._events = {};\x0a    return this;\x0a  }\x0a\x0a  listeners = this._events[type];\x0a\x0a  if (isFunction(listeners)) {\x0a    this.removeListener(type, listeners);\x0a  } else if (listeners) {\x0a    // LIFO order\x0a    while (listeners.length)\x0a      this.removeListener(type, listeners[listeners.length - 1]);\x0a  }\x0a  delete this._events[type];\x0a\x0a  return this;\x0a};\x0a\x0aEventEmitter.prototype.listeners = function(type) {\x0a  var ret;\x0a  if (!this._events || !this._events[type])\x0a    ret = [];\x0a  else if (isFunction(this._events[type]))\x0a    ret = [this._events[type]];\x0a  else\x0a    ret = this._events[type].slice();\x0a  return ret;\x0a};\x0a\x0aEventEmitter.prototype.listenerCount = function(type) {\x0a  if (this._events) {\x0a    var evlistener = this._events[type];\x0a\x0a    if (isFunction(evlistener))\x0a      return 1;\x0a    else if (evlistener)\x0a      return evlistener.length;\x0a  }\x0a  return 0;\x0a};\x0a\x0aEventEmitter.listenerCount = function(emitter, type) {\x0a  return emitter.listenerCount(type);\x0a};\x0a\x0afunction isFunction(arg) {\x0a  return typeof arg === \x27function\x27;\x0a}\x0a\x0afunction isNumber(arg) {\x0a  return typeof arg === \x27number\x27;\x0a}\x0a\x0afunction isObject(arg) {\x0a  return typeof arg === \x27object\x27 && arg !== null;\x0a}\x0a\x0afunction isUndefined(arg) {\x0a  return arg === void 0;\x0a}\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../html-entities/index.js\x22:\x0a/***/ (function(module, exports, __webpack_require__) {\x0a\x0amodule.exports = {\x0a  XmlEntities: __webpack_require__(\x22../../../../html-entities/lib/xml-entities.js\x22),\x0a  Html4Entities: __webpack_require__(\x22../../../../html-entities/lib/html4-entities.js\x22),\x0a  Html5Entities: __webpack_require__(\x22../../../../html-entities/lib/html5-entities.js\x22),\x0a  AllHtmlEntities: __webpack_require__(\x22../../../../html-entities/lib/html5-entities.js\x22)\x0a};\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../html-entities/lib/html4-entities.js\x22:\x0a/***/ (function(module, exports) {\x0a\x0avar HTML_ALPHA = [\x27apos\x27, \x27nbsp\x27, \x27iexcl\x27, \x27cent\x27, \x27pound\x27, \x27curren\x27, \x27yen\x27, \x27brvbar\x27, \x27sect\x27, \x27uml\x27, \x27copy\x27, \x27ordf\x27, \x27laquo\x27, \x27not\x27, \x27shy\x27, \x27reg\x27, \x27macr\x27, \x27deg\x27, \x27plusmn\x27, \x27sup2\x27, \x27sup3\x27, \x27acute\x27, \x27micro\x27, \x27para\x27, \x27middot\x27, \x27cedil\x27, \x27sup1\x27, \x27ordm\x27, \x27raquo\x27, \x27frac14\x27, \x27frac12\x27, \x27frac34\x27, \x27iquest\x27, \x27Agrave\x27, \x27Aacute\x27, \x27Acirc\x27, \x27Atilde\x27, \x27Auml\x27, \x27Aring\x27, \x27Aelig\x27, \x27Ccedil\x27, \x27Egrave\x27, \x27Eacute\x27, \x27Ecirc\x27, \x27Euml\x27, \x27Igrave\x27, \x27Iacute\x27, \x27Icirc\x27, \x27Iuml\x27, \x27ETH\x27, \x27Ntilde\x27, \x27Ograve\x27, \x27Oacute\x27, \x27Ocirc\x27, \x27Otilde\x27, \x27Ouml\x27, \x27times\x27, \x27Oslash\x27, \x27Ugrave\x27, \x27Uacute\x27, \x27Ucirc\x27, \x27Uuml\x27, \x27Yacute\x27, \x27THORN\x27, \x27szlig\x27, \x27agrave\x27, \x27aacute\x27, \x27acirc\x27, \x27atilde\x27, \x27auml\x27, \x27aring\x27, \x27aelig\x27, \x27ccedil\x27, \x27egrave\x27, \x27eacute\x27, \x27ecirc\x27, \x27euml\x27, \x27igrave\x27, \x27iacute\x27, \x27icirc\x27, \x27iuml\x27, \x27eth\x27, \x27ntilde\x27, \x27ograve\x27, \x27oacute\x27, \x27ocirc\x27, \x27otilde\x27, \x27ouml\x27, \x27divide\x27, \x27oslash\x27, \x27ugrave\x27, \x27uacute\x27, \x27ucirc\x27, \x27uuml\x27, \x27yacute\x27, \x27thorn\x27, \x27yuml\x27, \x27quot\x27, \x27amp\x27, \x27lt\x27, \x27gt\x27, \x27OElig\x27, \x27oelig\x27, \x27Scaron\x27, \x27scaron\x27, \x27Yuml\x27, \x27circ\x27, \x27tilde\x27, \x27ensp\x27, \x27emsp\x27, \x27thinsp\x27, \x27zwnj\x27, \x27zwj\x27, \x27lrm\x27, \x27rlm\x27, \x27ndash\x27, \x27mdash\x27, \x27lsquo\x27, \x27rsquo\x27, \x27sbquo\x27, \x27ldquo\x27, \x27rdquo\x27, \x27bdquo\x27, \x27dagger\x27, \x27Dagger\x27, \x27permil\x27, \x27lsaquo\x27, \x27rsaquo\x27, \x27euro\x27, \x27fnof\x27, \x27Alpha\x27, \x27Beta\x27, \x27Gamma\x27, \x27Delta\x27, \x27Epsilon\x27, \x27Zeta\x27, \x27Eta\x27, \x27Theta\x27, \x27Iota\x27, \x27Kappa\x27, \x27Lambda\x27, \x27Mu\x27, \x27Nu\x27, \x27Xi\x27, \x27Omicron\x27, \x27Pi\x27, \x27Rho\x27, \x27Sigma\x27, \x27Tau\x27, \x27Upsilon\x27, \x27Phi\x27, \x27Chi\x27, \x27Psi\x27, \x27Omega\x27, \x27alpha\x27, \x27beta\x27, \x27gamma\x27, \x27delta\x27, \x27epsilon\x27, \x27zeta\x27, \x27eta\x27, \x27theta\x27, \x27iota\x27, \x27kappa\x27, \x27lambda\x27, \x27mu\x27, \x27nu\x27, \x27xi\x27, \x27omicron\x27, \x27pi\x27, \x27rho\x27, \x27sigmaf\x27, \x27sigma\x27, \x27tau\x27, \x27upsilon\x27, \x27phi\x27, \x27chi\x27, \x27psi\x27, \x27omega\x27, \x27thetasym\x27, \x27upsih\x27, \x27piv\x27, \x27bull\x27, \x27hellip\x27, \x27prime\x27, \x27Prime\x27, \x27oline\x27, \x27frasl\x27, \x27weierp\x27, \x27image\x27, \x27real\x27, \x27trade\x27, \x27alefsym\x27, \x27larr\x27, \x27uarr\x27, \x27rarr\x27, \x27darr\x27, \x27harr\x27, \x27crarr\x27, \x27lArr\x27, \x27uArr\x27, \x27rArr\x27, \x27dArr\x27, \x27hArr\x27, \x27forall\x27, \x27part\x27, \x27exist\x27, \x27empty\x27, \x27nabla\x27, \x27isin\x27, \x27notin\x27, \x27ni\x27, \x27prod\x27, \x27sum\x27, \x27minus\x27, \x27lowast\x27, \x27radic\x27, \x27prop\x27, \x27infin\x27, \x27ang\x27, \x27and\x27, \x27or\x27, \x27cap\x27, \x27cup\x27, \x27int\x27, \x27there4\x27, \x27sim\x27, \x27cong\x27, \x27asymp\x27, \x27ne\x27, \x27equiv\x27, \x27le\x27, \x27ge\x27, \x27sub\x27, \x27sup\x27, \x27nsub\x27, \x27sube\x27, \x27supe\x27, \x27oplus\x27, \x27otimes\x27, \x27perp\x27, \x27sdot\x27, \x27lceil\x27, \x27rceil\x27, \x27lfloor\x27, \x27rfloor\x27, \x27lang\x27, \x27rang\x27, \x27loz\x27, \x27spades\x27, \x27clubs\x27, \x27hearts\x27, \x27diams\x27];\x0avar HTML_CODES = [39, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 34, 38, 60, 62, 338, 339, 352, 353, 376, 710, 732, 8194, 8195, 8201, 8204, 8205, 8206, 8207, 8211, 8212, 8216, 8217, 8218, 8220, 8221, 8222, 8224, 8225, 8240, 8249, 8250, 8364, 402, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 977, 978, 982, 8226, 8230, 8242, 8243, 8254, 8260, 8472, 8465, 8476, 8482, 8501, 8592, 8593, 8594, 8595, 8596, 8629, 8656, 8657, 8658, 8659, 8660, 8704, 8706, 8707, 8709, 8711, 8712, 8713, 8715, 8719, 8721, 8722, 8727, 8730, 8733, 8734, 8736, 8743, 8744, 8745, 8746, 8747, 8756, 8764, 8773, 8776, 8800, 8801, 8804, 8805, 8834, 8835, 8836, 8838, 8839, 8853, 8855, 8869, 8901, 8968, 8969, 8970, 8971, 9001, 9002, 9674, 9824, 9827, 9829, 9830];\x0a\x0avar alphaIndex = {};\x0avar numIndex = {};\x0a\x0avar i = 0;\x0avar length = HTML_ALPHA.length;\x0awhile (i \x3c length) {\x0a    var a = HTML_ALPHA[i];\x0a    var c = HTML_CODES[i];\x0a    alphaIndex[a] = String.fromCharCode(c);\x0a    numIndex[c] = a;\x0a    i++;\x0a}\x0a\x0a/**\x0a * @constructor\x0a */\x0afunction Html4Entities() {}\x0a\x0a/**\x0a * @param {String} str\x0a * @returns {String}\x0a */\x0aHtml4Entities.prototype.decode = function(str) {\x0a    if (!str || !str.length) {\x0a        return \x27\x27;\x0a    }\x0a    return str.replace(/&(#?[\x5cw\x5cd]+);?/g, function(s, entity) {\x0a        var chr;\x0a        if (entity.charAt(0) === \x22#\x22) {\x0a            var code = entity.charAt(1).toLowerCase() === \x27x\x27 ?\x0a                parseInt(entity.substr(2), 16) :\x0a                parseInt(entity.substr(1));\x0a\x0a            if (!(isNaN(code) || code \x3c -32768 || code \x3e 65535)) {\x0a                chr = String.fromCharCode(code);\x0a            }\x0a        } else {\x0a            chr = alphaIndex[entity];\x0a        }\x0a        return chr || s;\x0a    });\x0a};\x0a\x0a/**\x0a * @param {String} str\x0a * @returns {String}\x0a */\x0aHtml4Entities.decode = function(str) {\x0a    return new Html4Entities().decode(str);\x0a};\x0a\x0a/**\x0a * @param {String} str\x0a * @returns {String}\x0a */\x0aHtml4Entities.prototype.encode = function(str) {\x0a    if (!str || !str.length) {\x0a        return \x27\x27;\x0a    }\x0a    var strLength = str.length;\x0a    var result = \x27\x27;\x0a    var i = 0;\x0a    while (i \x3c strLength) {\x0a        var alpha = numIndex[str.charCodeAt(i)];\x0a        result += alpha ? \x22&\x22 + alpha + \x22;\x22 : str.charAt(i);\x0a        i++;\x0a    }\x0a    return result;\x0a};\x0a\x0a/**\x0a * @param {String} str\x0a * @returns {String}\x0a */\x0aHtml4Entities.encode = function(str) {\x0a    return new Html4Entities().encode(str);\x0a};\x0a\x0a/**\x0a * @param {String} str\x0a * @returns {String}\x0a */\x0aHtml4Entities.prototype.encodeNonUTF = function(str) {\x0a    if (!str || !str.length) {\x0a        return \x27\x27;\x0a    }\x0a    var strLength = str.length;\x0a    var result = \x27\x27;\x0a    var i = 0;\x0a    while (i \x3c strLength) {\x0a        var cc = str.charCodeAt(i);\x0a        var alpha = numIndex[cc];\x0a        if (alpha) {\x0a            result += \x22&\x22 + alpha + \x22;\x22;\x0a        } else if (cc \x3c 32 || cc \x3e 126) {\x0a            result += \x22&#\x22 + cc + \x22;\x22;\x0a        } else {\x0a            result += str.charAt(i);\x0a        }\x0a        i++;\x0a    }\x0a    return result;\x0a};\x0a\x0a/**\x0a * @param {String} str\x0a * @returns {String}\x0a */\x0aHtml4Entities.encodeNonUTF = function(str) {\x0a    return new Html4Entities().encodeNonUTF(str);\x0a};\x0a\x0a/**\x0a * @param {String} str\x0a * @returns {String}\x0a */\x0aHtml4Entities.prototype.encodeNonASCII = function(str) {\x0a    if (!str || !str.length) {\x0a        return \x27\x27;\x0a    }\x0a    var strLength = str.length;\x0a    var result = \x27\x27;\x0a    var i = 0;\x0a    while (i \x3c strLength) {\x0a        var c = str.charCodeAt(i);\x0a        if (c \x3c= 255) {\x0a            result += str[i++];\x0a            continue;\x0a        }\x0a        result += \x27&#\x27 + c + \x27;\x27;\x0a        i++;\x0a    }\x0a    return result;\x0a};\x0a\x0a/**\x0a * @param {String} str\x0a * @returns {String}\x0a */\x0aHtml4Entities.encodeNonASCII = function(str) {\x0a    return new Html4Entities().encodeNonASCII(str);\x0a};\x0a\x0amodule.exports = Html4Entities;\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../html-entities/lib/html5-entities.js\x22:\x0a/***/ (function(module, exports) {\x0a\x0avar ENTITIES = [[\x27Aacute\x27, [193]], [\x27aacute\x27, [225]], [\x27Abreve\x27, [258]], [\x27abreve\x27, [259]], [\x27ac\x27, [8766]], [\x27acd\x27, [8767]], [\x27acE\x27, [8766, 819]], [\x27Acirc\x27, [194]], [\x27acirc\x27, [226]], [\x27acute\x27, [180]], [\x27Acy\x27, [1040]], [\x27acy\x27, [1072]], [\x27AElig\x27, [198]], [\x27aelig\x27, [230]], [\x27af\x27, [8289]], [\x27Afr\x27, [120068]], [\x27afr\x27, [120094]], [\x27Agrave\x27, [192]], [\x27agrave\x27, [224]], [\x27alefsym\x27, [8501]], [\x27aleph\x27, [8501]], [\x27Alpha\x27, [913]], [\x27alpha\x27, [945]], [\x27Amacr\x27, [256]], [\x27amacr\x27, [257]], [\x27amalg\x27, [10815]], [\x27amp\x27, [38]], [\x27AMP\x27, [38]], [\x27andand\x27, [10837]], [\x27And\x27, [10835]], [\x27and\x27, [8743]], [\x27andd\x27, [10844]], [\x27andslope\x27, [10840]], [\x27andv\x27, [10842]], [\x27ang\x27, [8736]], [\x27ange\x27, [10660]], [\x27angle\x27, [8736]], [\x27angmsdaa\x27, [10664]], [\x27angmsdab\x27, [10665]], [\x27angmsdac\x27, [10666]], [\x27angmsdad\x27, [10667]], [\x27angmsdae\x27, [10668]], [\x27angmsdaf\x27, [10669]], [\x27angmsdag\x27, [10670]], [\x27angmsdah\x27, [10671]], [\x27angmsd\x27, [8737]], [\x27angrt\x27, [8735]], [\x27angrtvb\x27, [8894]], [\x27angrtvbd\x27, [10653]], [\x27angsph\x27, [8738]], [\x27angst\x27, [197]], [\x27angzarr\x27, [9084]], [\x27Aogon\x27, [260]], [\x27aogon\x27, [261]], [\x27Aopf\x27, [120120]], [\x27aopf\x27, [120146]], [\x27apacir\x27, [10863]], [\x27ap\x27, [8776]], [\x27apE\x27, [10864]], [\x27ape\x27, [8778]], [\x27apid\x27, [8779]], [\x27apos\x27, [39]], [\x27ApplyFunction\x27, [8289]], [\x27approx\x27, [8776]], [\x27approxeq\x27, [8778]], [\x27Aring\x27, [197]], [\x27aring\x27, [229]], [\x27Ascr\x27, [119964]], [\x27ascr\x27, [119990]], [\x27Assign\x27, [8788]], [\x27ast\x27, [42]], [\x27asymp\x27, [8776]], [\x27asympeq\x27, [8781]], [\x27Atilde\x27, [195]], [\x27atilde\x27, [227]], [\x27Auml\x27, [196]], [\x27auml\x27, [228]], [\x27awconint\x27, [8755]], [\x27awint\x27, [10769]], [\x27backcong\x27, [8780]], [\x27backepsilon\x27, [1014]], [\x27backprime\x27, [8245]], [\x27backsim\x27, [8765]], [\x27backsimeq\x27, [8909]], [\x27Backslash\x27, [8726]], [\x27Barv\x27, [10983]], [\x27barvee\x27, [8893]], [\x27barwed\x27, [8965]], [\x27Barwed\x27, [8966]], [\x27barwedge\x27, [8965]], [\x27bbrk\x27, [9141]], [\x27bbrktbrk\x27, [9142]], [\x27bcong\x27, [8780]], [\x27Bcy\x27, [1041]], [\x27bcy\x27, [1073]], [\x27bdquo\x27, [8222]], [\x27becaus\x27, [8757]], [\x27because\x27, [8757]], [\x27Because\x27, [8757]], [\x27bemptyv\x27, [10672]], [\x27bepsi\x27, [1014]], [\x27bernou\x27, [8492]], [\x27Bernoullis\x27, [8492]], [\x27Beta\x27, [914]], [\x27beta\x27, [946]], [\x27beth\x27, [8502]], [\x27between\x27, [8812]], [\x27Bfr\x27, [120069]], [\x27bfr\x27, [120095]], [\x27bigcap\x27, [8898]], [\x27bigcirc\x27, [9711]], [\x27bigcup\x27, [8899]], [\x27bigodot\x27, [10752]], [\x27bigoplus\x27, [10753]], [\x27bigotimes\x27, [10754]], [\x27bigsqcup\x27, [10758]], [\x27bigstar\x27, [9733]], [\x27bigtriangledown\x27, [9661]], [\x27bigtriangleup\x27, [9651]], [\x27biguplus\x27, [10756]], [\x27bigvee\x27, [8897]], [\x27bigwedge\x27, [8896]], [\x27bkarow\x27, [10509]], [\x27blacklozenge\x27, [10731]], [\x27blacksquare\x27, [9642]], [\x27blacktriangle\x27, [9652]], [\x27blacktriangledown\x27, [9662]], [\x27blacktriangleleft\x27, [9666]], [\x27blacktriangleright\x27, [9656]], [\x27blank\x27, [9251]], [\x27blk12\x27, [9618]], [\x27blk14\x27, [9617]], [\x27blk34\x27, [9619]], [\x27block\x27, [9608]], [\x27bne\x27, [61, 8421]], [\x27bnequiv\x27, [8801, 8421]], [\x27bNot\x27, [10989]], [\x27bnot\x27, [8976]], [\x27Bopf\x27, [120121]], [\x27bopf\x27, [120147]], [\x27bot\x27, [8869]], [\x27bottom\x27, [8869]], [\x27bowtie\x27, [8904]], [\x27boxbox\x27, [10697]], [\x27boxdl\x27, [9488]], [\x27boxdL\x27, [9557]], [\x27boxDl\x27, [9558]], [\x27boxDL\x27, [9559]], [\x27boxdr\x27, [9484]], [\x27boxdR\x27, [9554]], [\x27boxDr\x27, [9555]], [\x27boxDR\x27, [9556]], [\x27boxh\x27, [9472]], [\x27boxH\x27, [9552]], [\x27boxhd\x27, [9516]], [\x27boxHd\x27, [9572]], [\x27boxhD\x27, [9573]], [\x27boxHD\x27, [9574]], [\x27boxhu\x27, [9524]], [\x27boxHu\x27, [9575]], [\x27boxhU\x27, [9576]], [\x27boxHU\x27, [9577]], [\x27boxminus\x27, [8863]], [\x27boxplus\x27, [8862]], [\x27boxtimes\x27, [8864]], [\x27boxul\x27, [9496]], [\x27boxuL\x27, [9563]], [\x27boxUl\x27, [9564]], [\x27boxUL\x27, [9565]], [\x27boxur\x27, [9492]], [\x27boxuR\x27, [9560]], [\x27boxUr\x27, [9561]], [\x27boxUR\x27, [9562]], [\x27boxv\x27, [9474]], [\x27boxV\x27, [9553]], [\x27boxvh\x27, [9532]], [\x27boxvH\x27, [9578]], [\x27boxVh\x27, [9579]], [\x27boxVH\x27, [9580]], [\x27boxvl\x27, [9508]], [\x27boxvL\x27, [9569]], [\x27boxVl\x27, [9570]], [\x27boxVL\x27, [9571]], [\x27boxvr\x27, [9500]], [\x27boxvR\x27, [9566]], [\x27boxVr\x27, [9567]], [\x27boxVR\x27, [9568]], [\x27bprime\x27, [8245]], [\x27breve\x27, [728]], [\x27Breve\x27, [728]], [\x27brvbar\x27, [166]], [\x27bscr\x27, [119991]], [\x27Bscr\x27, [8492]], [\x27bsemi\x27, [8271]], [\x27bsim\x27, [8765]], [\x27bsime\x27, [8909]], [\x27bsolb\x27, [10693]], [\x27bsol\x27, [92]], [\x27bsolhsub\x27, [10184]], [\x27bull\x27, [8226]], [\x27bullet\x27, [8226]], [\x27bump\x27, [8782]], [\x27bumpE\x27, [10926]], [\x27bumpe\x27, [8783]], [\x27Bumpeq\x27, [8782]], [\x27bumpeq\x27, [8783]], [\x27Cacute\x27, [262]], [\x27cacute\x27, [263]], [\x27capand\x27, [10820]], [\x27capbrcup\x27, [10825]], [\x27capcap\x27, [10827]], [\x27cap\x27, [8745]], [\x27Cap\x27, [8914]], [\x27capcup\x27, [10823]], [\x27capdot\x27, [10816]], [\x27CapitalDifferentialD\x27, [8517]], [\x27caps\x27, [8745, 65024]], [\x27caret\x27, [8257]], [\x27caron\x27, [711]], [\x27Cayleys\x27, [8493]], [\x27ccaps\x27, [10829]], [\x27Ccaron\x27, [268]], [\x27ccaron\x27, [269]], [\x27Ccedil\x27, [199]], [\x27ccedil\x27, [231]], [\x27Ccirc\x27, [264]], [\x27ccirc\x27, [265]], [\x27Cconint\x27, [8752]], [\x27ccups\x27, [10828]], [\x27ccupssm\x27, [10832]], [\x27Cdot\x27, [266]], [\x27cdot\x27, [267]], [\x27cedil\x27, [184]], [\x27Cedilla\x27, [184]], [\x27cemptyv\x27, [10674]], [\x27cent\x27, [162]], [\x27centerdot\x27, [183]], [\x27CenterDot\x27, [183]], [\x27cfr\x27, [120096]], [\x27Cfr\x27, [8493]], [\x27CHcy\x27, [1063]], [\x27chcy\x27, [1095]], [\x27check\x27, [10003]], [\x27checkmark\x27, [10003]], [\x27Chi\x27, [935]], [\x27chi\x27, [967]], [\x27circ\x27, [710]], [\x27circeq\x27, [8791]], [\x27circlearrowleft\x27, [8634]], [\x27circlearrowright\x27, [8635]], [\x27circledast\x27, [8859]], [\x27circledcirc\x27, [8858]], [\x27circleddash\x27, [8861]], [\x27CircleDot\x27, [8857]], [\x27circledR\x27, [174]], [\x27circledS\x27, [9416]], [\x27CircleMinus\x27, [8854]], [\x27CirclePlus\x27, [8853]], [\x27CircleTimes\x27, [8855]], [\x27cir\x27, [9675]], [\x27cirE\x27, [10691]], [\x27cire\x27, [8791]], [\x27cirfnint\x27, [10768]], [\x27cirmid\x27, [10991]], [\x27cirscir\x27, [10690]], [\x27ClockwiseContourIntegral\x27, [8754]], [\x27clubs\x27, [9827]], [\x27clubsuit\x27, [9827]], [\x27colon\x27, [58]], [\x27Colon\x27, [8759]], [\x27Colone\x27, [10868]], [\x27colone\x27, [8788]], [\x27coloneq\x27, [8788]], [\x27comma\x27, [44]], [\x27commat\x27, [64]], [\x27comp\x27, [8705]], [\x27compfn\x27, [8728]], [\x27complement\x27, [8705]], [\x27complexes\x27, [8450]], [\x27cong\x27, [8773]], [\x27congdot\x27, [10861]], [\x27Congruent\x27, [8801]], [\x27conint\x27, [8750]], [\x27Conint\x27, [8751]], [\x27ContourIntegral\x27, [8750]], [\x27copf\x27, [120148]], [\x27Copf\x27, [8450]], [\x27coprod\x27, [8720]], [\x27Coproduct\x27, [8720]], [\x27copy\x27, [169]], [\x27COPY\x27, [169]], [\x27copysr\x27, [8471]], [\x27CounterClockwiseContourIntegral\x27, [8755]], [\x27crarr\x27, [8629]], [\x27cross\x27, [10007]], [\x27Cross\x27, [10799]], [\x27Cscr\x27, [119966]], [\x27cscr\x27, [119992]], [\x27csub\x27, [10959]], [\x27csube\x27, [10961]], [\x27csup\x27, [10960]], [\x27csupe\x27, [10962]], [\x27ctdot\x27, [8943]], [\x27cudarrl\x27, [10552]], [\x27cudarrr\x27, [10549]], [\x27cuepr\x27, [8926]], [\x27cuesc\x27, [8927]], [\x27cularr\x27, [8630]], [\x27cularrp\x27, [10557]], [\x27cupbrcap\x27, [10824]], [\x27cupcap\x27, [10822]], [\x27CupCap\x27, [8781]], [\x27cup\x27, [8746]], [\x27Cup\x27, [8915]], [\x27cupcup\x27, [10826]], [\x27cupdot\x27, [8845]], [\x27cupor\x27, [10821]], [\x27cups\x27, [8746, 65024]], [\x27curarr\x27, [8631]], [\x27curarrm\x27, [10556]], [\x27curlyeqprec\x27, [8926]], [\x27curlyeqsucc\x27, [8927]], [\x27curlyvee\x27, [8910]], [\x27curlywedge\x27, [8911]], [\x27curren\x27, [164]], [\x27curvearrowleft\x27, [8630]], [\x27curvearrowright\x27, [8631]], [\x27cuvee\x27, [8910]], [\x27cuwed\x27, [8911]], [\x27cwconint\x27, [8754]], [\x27cwint\x27, [8753]], [\x27cylcty\x27, [9005]], [\x27dagger\x27, [8224]], [\x27Dagger\x27, [8225]], [\x27daleth\x27, [8504]], [\x27darr\x27, [8595]], [\x27Darr\x27, [8609]], [\x27dArr\x27, [8659]], [\x27dash\x27, [8208]], [\x27Dashv\x27, [10980]], [\x27dashv\x27, [8867]], [\x27dbkarow\x27, [10511]], [\x27dblac\x27, [733]], [\x27Dcaron\x27, [270]], [\x27dcaron\x27, [271]], [\x27Dcy\x27, [1044]], [\x27dcy\x27, [1076]], [\x27ddagger\x27, [8225]], [\x27ddarr\x27, [8650]], [\x27DD\x27, [8517]], [\x27dd\x27, [8518]], [\x27DDotrahd\x27, [10513]], [\x27ddotseq\x27, [10871]], [\x27deg\x27, [176]], [\x27Del\x27, [8711]], [\x27Delta\x27, [916]], [\x27delta\x27, [948]], [\x27demptyv\x27, [10673]], [\x27dfisht\x27, [10623]], [\x27Dfr\x27, [120071]], [\x27dfr\x27, [120097]], [\x27dHar\x27, [10597]], [\x27dharl\x27, [8643]], [\x27dharr\x27, [8642]], [\x27DiacriticalAcute\x27, [180]], [\x27DiacriticalDot\x27, [729]], [\x27DiacriticalDoubleAcute\x27, [733]], [\x27DiacriticalGrave\x27, [96]], [\x27DiacriticalTilde\x27, [732]], [\x27diam\x27, [8900]], [\x27diamond\x27, [8900]], [\x27Diamond\x27, [8900]], [\x27diamondsuit\x27, [9830]], [\x27diams\x27, [9830]], [\x27die\x27, [168]], [\x27DifferentialD\x27, [8518]], [\x27digamma\x27, [989]], [\x27disin\x27, [8946]], [\x27div\x27, [247]], [\x27divide\x27, [247]], [\x27divideontimes\x27, [8903]], [\x27divonx\x27, [8903]], [\x27DJcy\x27, [1026]], [\x27djcy\x27, [1106]], [\x27dlcorn\x27, [8990]], [\x27dlcrop\x27, [8973]], [\x27dollar\x27, [36]], [\x27Dopf\x27, [120123]], [\x27dopf\x27, [120149]], [\x27Dot\x27, [168]], [\x27dot\x27, [729]], [\x27DotDot\x27, [8412]], [\x27doteq\x27, [8784]], [\x27doteqdot\x27, [8785]], [\x27DotEqual\x27, [8784]], [\x27dotminus\x27, [8760]], [\x27dotplus\x27, [8724]], [\x27dotsquare\x27, [8865]], [\x27doublebarwedge\x27, [8966]], [\x27DoubleContourIntegral\x27, [8751]], [\x27DoubleDot\x27, [168]], [\x27DoubleDownArrow\x27, [8659]], [\x27DoubleLeftArrow\x27, [8656]], [\x27DoubleLeftRightArrow\x27, [8660]], [\x27DoubleLeftTee\x27, [10980]], [\x27DoubleLongLeftArrow\x27, [10232]], [\x27DoubleLongLeftRightArrow\x27, [10234]], [\x27DoubleLongRightArrow\x27, [10233]], [\x27DoubleRightArrow\x27, [8658]], [\x27DoubleRightTee\x27, [8872]], [\x27DoubleUpArrow\x27, [8657]], [\x27DoubleUpDownArrow\x27, [8661]], [\x27DoubleVerticalBar\x27, [8741]], [\x27DownArrowBar\x27, [10515]], [\x27downarrow\x27, [8595]], [\x27DownArrow\x27, [8595]], [\x27Downarrow\x27, [8659]], [\x27DownArrowUpArrow\x27, [8693]], [\x27DownBreve\x27, [785]], [\x27downdownarrows\x27, [8650]], [\x27downharpoonleft\x27, [8643]], [\x27downharpoonright\x27, [8642]], [\x27DownLeftRightVector\x27, [10576]], [\x27DownLeftTeeVector\x27, [10590]], [\x27DownLeftVectorBar\x27, [10582]], [\x27DownLeftVector\x27, [8637]], [\x27DownRightTeeVector\x27, [10591]], [\x27DownRightVectorBar\x27, [10583]], [\x27DownRightVector\x27, [8641]], [\x27DownTeeArrow\x27, [8615]], [\x27DownTee\x27, [8868]], [\x27drbkarow\x27, [10512]], [\x27drcorn\x27, [8991]], [\x27drcrop\x27, [8972]], [\x27Dscr\x27, [119967]], [\x27dscr\x27, [119993]], [\x27DScy\x27, [1029]], [\x27dscy\x27, [1109]], [\x27dsol\x27, [10742]], [\x27Dstrok\x27, [272]], [\x27dstrok\x27, [273]], [\x27dtdot\x27, [8945]], [\x27dtri\x27, [9663]], [\x27dtrif\x27, [9662]], [\x27duarr\x27, [8693]], [\x27duhar\x27, [10607]], [\x27dwangle\x27, [10662]], [\x27DZcy\x27, [1039]], [\x27dzcy\x27, [1119]], [\x27dzigrarr\x27, [10239]], [\x27Eacute\x27, [201]], [\x27eacute\x27, [233]], [\x27easter\x27, [10862]], [\x27Ecaron\x27, [282]], [\x27ecaron\x27, [283]], [\x27Ecirc\x27, [202]], [\x27ecirc\x27, [234]], [\x27ecir\x27, [8790]], [\x27ecolon\x27, [8789]], [\x27Ecy\x27, [1069]], [\x27ecy\x27, [1101]], [\x27eDDot\x27, [10871]], [\x27Edot\x27, [278]], [\x27edot\x27, [279]], [\x27eDot\x27, [8785]], [\x27ee\x27, [8519]], [\x27efDot\x27, [8786]], [\x27Efr\x27, [120072]], [\x27efr\x27, [120098]], [\x27eg\x27, [10906]], [\x27Egrave\x27, [200]], [\x27egrave\x27, [232]], [\x27egs\x27, [10902]], [\x27egsdot\x27, [10904]], [\x27el\x27, [10905]], [\x27Element\x27, [8712]], [\x27elinters\x27, [9191]], [\x27ell\x27, [8467]], [\x27els\x27, [10901]], [\x27elsdot\x27, [10903]], [\x27Emacr\x27, [274]], [\x27emacr\x27, [275]], [\x27empty\x27, [8709]], [\x27emptyset\x27, [8709]], [\x27EmptySmallSquare\x27, [9723]], [\x27emptyv\x27, [8709]], [\x27EmptyVerySmallSquare\x27, [9643]], [\x27emsp13\x27, [8196]], [\x27emsp14\x27, [8197]], [\x27emsp\x27, [8195]], [\x27ENG\x27, [330]], [\x27eng\x27, [331]], [\x27ensp\x27, [8194]], [\x27Eogon\x27, [280]], [\x27eogon\x27, [281]], [\x27Eopf\x27, [120124]], [\x27eopf\x27, [120150]], [\x27epar\x27, [8917]], [\x27eparsl\x27, [10723]], [\x27eplus\x27, [10865]], [\x27epsi\x27, [949]], [\x27Epsilon\x27, [917]], [\x27epsilon\x27, [949]], [\x27epsiv\x27, [1013]], [\x27eqcirc\x27, [8790]], [\x27eqcolon\x27, [8789]], [\x27eqsim\x27, [8770]], [\x27eqslantgtr\x27, [10902]], [\x27eqslantless\x27, [10901]], [\x27Equal\x27, [10869]], [\x27equals\x27, [61]], [\x27EqualTilde\x27, [8770]], [\x27equest\x27, [8799]], [\x27Equilibrium\x27, [8652]], [\x27equiv\x27, [8801]], [\x27equivDD\x27, [10872]], [\x27eqvparsl\x27, [10725]], [\x27erarr\x27, [10609]], [\x27erDot\x27, [8787]], [\x27escr\x27, [8495]], [\x27Escr\x27, [8496]], [\x27esdot\x27, [8784]], [\x27Esim\x27, [10867]], [\x27esim\x27, [8770]], [\x27Eta\x27, [919]], [\x27eta\x27, [951]], [\x27ETH\x27, [208]], [\x27eth\x27, [240]], [\x27Euml\x27, [203]], [\x27euml\x27, [235]], [\x27euro\x27, [8364]], [\x27excl\x27, [33]], [\x27exist\x27, [8707]], [\x27Exists\x27, [8707]], [\x27expectation\x27, [8496]], [\x27exponentiale\x27, [8519]], [\x27ExponentialE\x27, [8519]], [\x27fallingdotseq\x27, [8786]], [\x27Fcy\x27, [1060]], [\x27fcy\x27, [1092]], [\x27female\x27, [9792]], [\x27ffilig\x27, [64259]], [\x27fflig\x27, [64256]], [\x27ffllig\x27, [64260]], [\x27Ffr\x27, [120073]], [\x27ffr\x27, [120099]], [\x27filig\x27, [64257]], [\x27FilledSmallSquare\x27, [9724]], [\x27FilledVerySmallSquare\x27, [9642]], [\x27fjlig\x27, [102, 106]], [\x27flat\x27, [9837]], [\x27fllig\x27, [64258]], [\x27fltns\x27, [9649]], [\x27fnof\x27, [402]], [\x27Fopf\x27, [120125]], [\x27fopf\x27, [120151]], [\x27forall\x27, [8704]], [\x27ForAll\x27, [8704]], [\x27fork\x27, [8916]], [\x27forkv\x27, [10969]], [\x27Fouriertrf\x27, [8497]], [\x27fpartint\x27, [10765]], [\x27frac12\x27, [189]], [\x27frac13\x27, [8531]], [\x27frac14\x27, [188]], [\x27frac15\x27, [8533]], [\x27frac16\x27, [8537]], [\x27frac18\x27, [8539]], [\x27frac23\x27, [8532]], [\x27frac25\x27, [8534]], [\x27frac34\x27, [190]], [\x27frac35\x27, [8535]], [\x27frac38\x27, [8540]], [\x27frac45\x27, [8536]], [\x27frac56\x27, [8538]], [\x27frac58\x27, [8541]], [\x27frac78\x27, [8542]], [\x27frasl\x27, [8260]], [\x27frown\x27, [8994]], [\x27fscr\x27, [119995]], [\x27Fscr\x27, [8497]], [\x27gacute\x27, [501]], [\x27Gamma\x27, [915]], [\x27gamma\x27, [947]], [\x27Gammad\x27, [988]], [\x27gammad\x27, [989]], [\x27gap\x27, [10886]], [\x27Gbreve\x27, [286]], [\x27gbreve\x27, [287]], [\x27Gcedil\x27, [290]], [\x27Gcirc\x27, [284]], [\x27gcirc\x27, [285]], [\x27Gcy\x27, [1043]], [\x27gcy\x27, [1075]], [\x27Gdot\x27, [288]], [\x27gdot\x27, [289]], [\x27ge\x27, [8805]], [\x27gE\x27, [8807]], [\x27gEl\x27, [10892]], [\x27gel\x27, [8923]], [\x27geq\x27, [8805]], [\x27geqq\x27, [8807]], [\x27geqslant\x27, [10878]], [\x27gescc\x27, [10921]], [\x27ges\x27, [10878]], [\x27gesdot\x27, [10880]], [\x27gesdoto\x27, [10882]], [\x27gesdotol\x27, [10884]], [\x27gesl\x27, [8923, 65024]], [\x27gesles\x27, [10900]], [\x27Gfr\x27, [120074]], [\x27gfr\x27, [120100]], [\x27gg\x27, [8811]], [\x27Gg\x27, [8921]], [\x27ggg\x27, [8921]], [\x27gimel\x27, [8503]], [\x27GJcy\x27, [1027]], [\x27gjcy\x27, [1107]], [\x27gla\x27, [10917]], [\x27gl\x27, [8823]], [\x27glE\x27, [10898]], [\x27glj\x27, [10916]], [\x27gnap\x27, [10890]], [\x27gnapprox\x27, [10890]], [\x27gne\x27, [10888]], [\x27gnE\x27, [8809]], [\x27gneq\x27, [10888]], [\x27gneqq\x27, [8809]], [\x27gnsim\x27, [8935]], [\x27Gopf\x27, [120126]], [\x27gopf\x27, [120152]], [\x27grave\x27, [96]], [\x27GreaterEqual\x27, [8805]], [\x27GreaterEqualLess\x27, [8923]], [\x27GreaterFullEqual\x27, [8807]], [\x27GreaterGreater\x27, [10914]], [\x27GreaterLess\x27, [8823]], [\x27GreaterSlantEqual\x27, [10878]], [\x27GreaterTilde\x27, [8819]], [\x27Gscr\x27, [119970]], [\x27gscr\x27, [8458]], [\x27gsim\x27, [8819]], [\x27gsime\x27, [10894]], [\x27gsiml\x27, [10896]], [\x27gtcc\x27, [10919]], [\x27gtcir\x27, [10874]], [\x27gt\x27, [62]], [\x27GT\x27, [62]], [\x27Gt\x27, [8811]], [\x27gtdot\x27, [8919]], [\x27gtlPar\x27, [10645]], [\x27gtquest\x27, [10876]], [\x27gtrapprox\x27, [10886]], [\x27gtrarr\x27, [10616]], [\x27gtrdot\x27, [8919]], [\x27gtreqless\x27, [8923]], [\x27gtreqqless\x27, [10892]], [\x27gtrless\x27, [8823]], [\x27gtrsim\x27, [8819]], [\x27gvertneqq\x27, [8809, 65024]], [\x27gvnE\x27, [8809, 65024]], [\x27Hacek\x27, [711]], [\x27hairsp\x27, [8202]], [\x27half\x27, [189]], [\x27hamilt\x27, [8459]], [\x27HARDcy\x27, [1066]], [\x27hardcy\x27, [1098]], [\x27harrcir\x27, [10568]], [\x27harr\x27, [8596]], [\x27hArr\x27, [8660]], [\x27harrw\x27, [8621]], [\x27Hat\x27, [94]], [\x27hbar\x27, [8463]], [\x27Hcirc\x27, [292]], [\x27hcirc\x27, [293]], [\x27hearts\x27, [9829]], [\x27heartsuit\x27, [9829]], [\x27hellip\x27, [8230]], [\x27hercon\x27, [8889]], [\x27hfr\x27, [120101]], [\x27Hfr\x27, [8460]], [\x27HilbertSpace\x27, [8459]], [\x27hksearow\x27, [10533]], [\x27hkswarow\x27, [10534]], [\x27hoarr\x27, [8703]], [\x27homtht\x27, [8763]], [\x27hookleftarrow\x27, [8617]], [\x27hookrightarrow\x27, [8618]], [\x27hopf\x27, [120153]], [\x27Hopf\x27, [8461]], [\x27horbar\x27, [8213]], [\x27HorizontalLine\x27, [9472]], [\x27hscr\x27, [119997]], [\x27Hscr\x27, [8459]], [\x27hslash\x27, [8463]], [\x27Hstrok\x27, [294]], [\x27hstrok\x27, [295]], [\x27HumpDownHump\x27, [8782]], [\x27HumpEqual\x27, [8783]], [\x27hybull\x27, [8259]], [\x27hyphen\x27, [8208]], [\x27Iacute\x27, [205]], [\x27iacute\x27, [237]], [\x27ic\x27, [8291]], [\x27Icirc\x27, [206]], [\x27icirc\x27, [238]], [\x27Icy\x27, [1048]], [\x27icy\x27, [1080]], [\x27Idot\x27, [304]], [\x27IEcy\x27, [1045]], [\x27iecy\x27, [1077]], [\x27iexcl\x27, [161]], [\x27iff\x27, [8660]], [\x27ifr\x27, [120102]], [\x27Ifr\x27, [8465]], [\x27Igrave\x27, [204]], [\x27igrave\x27, [236]], [\x27ii\x27, [8520]], [\x27iiiint\x27, [10764]], [\x27iiint\x27, [8749]], [\x27iinfin\x27, [10716]], [\x27iiota\x27, [8489]], [\x27IJlig\x27, [306]], [\x27ijlig\x27, [307]], [\x27Imacr\x27, [298]], [\x27imacr\x27, [299]], [\x27image\x27, [8465]], [\x27ImaginaryI\x27, [8520]], [\x27imagline\x27, [8464]], [\x27imagpart\x27, [8465]], [\x27imath\x27, [305]], [\x27Im\x27, [8465]], [\x27imof\x27, [8887]], [\x27imped\x27, [437]], [\x27Implies\x27, [8658]], [\x27incare\x27, [8453]], [\x27in\x27, [8712]], [\x27infin\x27, [8734]], [\x27infintie\x27, [10717]], [\x27inodot\x27, [305]], [\x27intcal\x27, [8890]], [\x27int\x27, [8747]], [\x27Int\x27, [8748]], [\x27integers\x27, [8484]], [\x27Integral\x27, [8747]], [\x27intercal\x27, [8890]], [\x27Intersection\x27, [8898]], [\x27intlarhk\x27, [10775]], [\x27intprod\x27, [10812]], [\x27InvisibleComma\x27, [8291]], [\x27InvisibleTimes\x27, [8290]], [\x27IOcy\x27, [1025]], [\x27iocy\x27, [1105]], [\x27Iogon\x27, [302]], [\x27iogon\x27, [303]], [\x27Iopf\x27, [120128]], [\x27iopf\x27, [120154]], [\x27Iota\x27, [921]], [\x27iota\x27, [953]], [\x27iprod\x27, [10812]], [\x27iquest\x27, [191]], [\x27iscr\x27, [119998]], [\x27Iscr\x27, [8464]], [\x27isin\x27, [8712]], [\x27isindot\x27, [8949]], [\x27isinE\x27, [8953]], [\x27isins\x27, [8948]], [\x27isinsv\x27, [8947]], [\x27isinv\x27, [8712]], [\x27it\x27, [8290]], [\x27Itilde\x27, [296]], [\x27itilde\x27, [297]], [\x27Iukcy\x27, [1030]], [\x27iukcy\x27, [1110]], [\x27Iuml\x27, [207]], [\x27iuml\x27, [239]], [\x27Jcirc\x27, [308]], [\x27jcirc\x27, [309]], [\x27Jcy\x27, [1049]], [\x27jcy\x27, [1081]], [\x27Jfr\x27, [120077]], [\x27jfr\x27, [120103]], [\x27jmath\x27, [567]], [\x27Jopf\x27, [120129]], [\x27jopf\x27, [120155]], [\x27Jscr\x27, [119973]], [\x27jscr\x27, [119999]], [\x27Jsercy\x27, [1032]], [\x27jsercy\x27, [1112]], [\x27Jukcy\x27, [1028]], [\x27jukcy\x27, [1108]], [\x27Kappa\x27, [922]], [\x27kappa\x27, [954]], [\x27kappav\x27, [1008]], [\x27Kcedil\x27, [310]], [\x27kcedil\x27, [311]], [\x27Kcy\x27, [1050]], [\x27kcy\x27, [1082]], [\x27Kfr\x27, [120078]], [\x27kfr\x27, [120104]], [\x27kgreen\x27, [312]], [\x27KHcy\x27, [1061]], [\x27khcy\x27, [1093]], [\x27KJcy\x27, [1036]], [\x27kjcy\x27, [1116]], [\x27Kopf\x27, [120130]], [\x27kopf\x27, [120156]], [\x27Kscr\x27, [119974]], [\x27kscr\x27, [120000]], [\x27lAarr\x27, [8666]], [\x27Lacute\x27, [313]], [\x27lacute\x27, [314]], [\x27laemptyv\x27, [10676]], [\x27lagran\x27, [8466]], [\x27Lambda\x27, [923]], [\x27lambda\x27, [955]], [\x27lang\x27, [10216]], [\x27Lang\x27, [10218]], [\x27langd\x27, [10641]], [\x27langle\x27, [10216]], [\x27lap\x27, [10885]], [\x27Laplacetrf\x27, [8466]], [\x27laquo\x27, [171]], [\x27larrb\x27, [8676]], [\x27larrbfs\x27, [10527]], [\x27larr\x27, [8592]], [\x27Larr\x27, [8606]], [\x27lArr\x27, [8656]], [\x27larrfs\x27, [10525]], [\x27larrhk\x27, [8617]], [\x27larrlp\x27, [8619]], [\x27larrpl\x27, [10553]], [\x27larrsim\x27, [10611]], [\x27larrtl\x27, [8610]], [\x27latail\x27, [10521]], [\x27lAtail\x27, [10523]], [\x27lat\x27, [10923]], [\x27late\x27, [10925]], [\x27lates\x27, [10925, 65024]], [\x27lbarr\x27, [10508]], [\x27lBarr\x27, [10510]], [\x27lbbrk\x27, [10098]], [\x27lbrace\x27, [123]], [\x27lbrack\x27, [91]], [\x27lbrke\x27, [10635]], [\x27lbrksld\x27, [10639]], [\x27lbrkslu\x27, [10637]], [\x27Lcaron\x27, [317]], [\x27lcaron\x27, [318]], [\x27Lcedil\x27, [315]], [\x27lcedil\x27, [316]], [\x27lceil\x27, [8968]], [\x27lcub\x27, [123]], [\x27Lcy\x27, [1051]], [\x27lcy\x27, [1083]], [\x27ldca\x27, [10550]], [\x27ldquo\x27, [8220]], [\x27ldquor\x27, [8222]], [\x27ldrdhar\x27, [10599]], [\x27ldrushar\x27, [10571]], [\x27ldsh\x27, [8626]], [\x27le\x27, [8804]], [\x27lE\x27, [8806]], [\x27LeftAngleBracket\x27, [10216]], [\x27LeftArrowBar\x27, [8676]], [\x27leftarrow\x27, [8592]], [\x27LeftArrow\x27, [8592]], [\x27Leftarrow\x27, [8656]], [\x27LeftArrowRightArrow\x27, [8646]], [\x27leftarrowtail\x27, [8610]], [\x27LeftCeiling\x27, [8968]], [\x27LeftDoubleBracket\x27, [10214]], [\x27LeftDownTeeVector\x27, [10593]], [\x27LeftDownVectorBar\x27, [10585]], [\x27LeftDownVector\x27, [8643]], [\x27LeftFloor\x27, [8970]], [\x27leftharpoondown\x27, [8637]], [\x27leftharpoonup\x27, [8636]], [\x27leftleftarrows\x27, [8647]], [\x27leftrightarrow\x27, [8596]], [\x27LeftRightArrow\x27, [8596]], [\x27Leftrightarrow\x27, [8660]], [\x27leftrightarrows\x27, [8646]], [\x27leftrightharpoons\x27, [8651]], [\x27leftrightsquigarrow\x27, [8621]], [\x27LeftRightVector\x27, [10574]], [\x27LeftTeeArrow\x27, [8612]], [\x27LeftTee\x27, [8867]], [\x27LeftTeeVector\x27, [10586]], [\x27leftthreetimes\x27, [8907]], [\x27LeftTriangleBar\x27, [10703]], [\x27LeftTriangle\x27, [8882]], [\x27LeftTriangleEqual\x27, [8884]], [\x27LeftUpDownVector\x27, [10577]], [\x27LeftUpTeeVector\x27, [10592]], [\x27LeftUpVectorBar\x27, [10584]], [\x27LeftUpVector\x27, [8639]], [\x27LeftVectorBar\x27, [10578]], [\x27LeftVector\x27, [8636]], [\x27lEg\x27, [10891]], [\x27leg\x27, [8922]], [\x27leq\x27, [8804]], [\x27leqq\x27, [8806]], [\x27leqslant\x27, [10877]], [\x27lescc\x27, [10920]], [\x27les\x27, [10877]], [\x27lesdot\x27, [10879]], [\x27lesdoto\x27, [10881]], [\x27lesdotor\x27, [10883]], [\x27lesg\x27, [8922, 65024]], [\x27lesges\x27, [10899]], [\x27lessapprox\x27, [10885]], [\x27lessdot\x27, [8918]], [\x27lesseqgtr\x27, [8922]], [\x27lesseqqgtr\x27, [10891]], [\x27LessEqualGreater\x27, [8922]], [\x27LessFullEqual\x27, [8806]], [\x27LessGreater\x27, [8822]], [\x27lessgtr\x27, [8822]], [\x27LessLess\x27, [10913]], [\x27lesssim\x27, [8818]], [\x27LessSlantEqual\x27, [10877]], [\x27LessTilde\x27, [8818]], [\x27lfisht\x27, [10620]], [\x27lfloor\x27, [8970]], [\x27Lfr\x27, [120079]], [\x27lfr\x27, [120105]], [\x27lg\x27, [8822]], [\x27lgE\x27, [10897]], [\x27lHar\x27, [10594]], [\x27lhard\x27, [8637]], [\x27lharu\x27, [8636]], [\x27lharul\x27, [10602]], [\x27lhblk\x27, [9604]], [\x27LJcy\x27, [1033]], [\x27ljcy\x27, [1113]], [\x27llarr\x27, [8647]], [\x27ll\x27, [8810]], [\x27Ll\x27, [8920]], [\x27llcorner\x27, [8990]], [\x27Lleftarrow\x27, [8666]], [\x27llhard\x27, [10603]], [\x27lltri\x27, [9722]], [\x27Lmidot\x27, [319]], [\x27lmidot\x27, [320]], [\x27lmoustache\x27, [9136]], [\x27lmoust\x27, [9136]], [\x27lnap\x27, [10889]], [\x27lnapprox\x27, [10889]], [\x27lne\x27, [10887]], [\x27lnE\x27, [8808]], [\x27lneq\x27, [10887]], [\x27lneqq\x27, [8808]], [\x27lnsim\x27, [8934]], [\x27loang\x27, [10220]], [\x27loarr\x27, [8701]], [\x27lobrk\x27, [10214]], [\x27longleftarrow\x27, [10229]], [\x27LongLeftArrow\x27, [10229]], [\x27Longleftarrow\x27, [10232]], [\x27longleftrightarrow\x27, [10231]], [\x27LongLeftRightArrow\x27, [10231]], [\x27Longleftrightarrow\x27, [10234]], [\x27longmapsto\x27, [10236]], [\x27longrightarrow\x27, [10230]], [\x27LongRightArrow\x27, [10230]], [\x27Longrightarrow\x27, [10233]], [\x27looparrowleft\x27, [8619]], [\x27looparrowright\x27, [8620]], [\x27lopar\x27, [10629]], [\x27Lopf\x27, [120131]], [\x27lopf\x27, [120157]], [\x27loplus\x27, [10797]], [\x27lotimes\x27, [10804]], [\x27lowast\x27, [8727]], [\x27lowbar\x27, [95]], [\x27LowerLeftArrow\x27, [8601]], [\x27LowerRightArrow\x27, [8600]], [\x27loz\x27, [9674]], [\x27lozenge\x27, [9674]], [\x27lozf\x27, [10731]], [\x27lpar\x27, [40]], [\x27lparlt\x27, [10643]], [\x27lrarr\x27, [8646]], [\x27lrcorner\x27, [8991]], [\x27lrhar\x27, [8651]], [\x27lrhard\x27, [10605]], [\x27lrm\x27, [8206]], [\x27lrtri\x27, [8895]], [\x27lsaquo\x27, [8249]], [\x27lscr\x27, [120001]], [\x27Lscr\x27, [8466]], [\x27lsh\x27, [8624]], [\x27Lsh\x27, [8624]], [\x27lsim\x27, [8818]], [\x27lsime\x27, [10893]], [\x27lsimg\x27, [10895]], [\x27lsqb\x27, [91]], [\x27lsquo\x27, [8216]], [\x27lsquor\x27, [8218]], [\x27Lstrok\x27, [321]], [\x27lstrok\x27, [322]], [\x27ltcc\x27, [10918]], [\x27ltcir\x27, [10873]], [\x27lt\x27, [60]], [\x27LT\x27, [60]], [\x27Lt\x27, [8810]], [\x27ltdot\x27, [8918]], [\x27lthree\x27, [8907]], [\x27ltimes\x27, [8905]], [\x27ltlarr\x27, [10614]], [\x27ltquest\x27, [10875]], [\x27ltri\x27, [9667]], [\x27ltrie\x27, [8884]], [\x27ltrif\x27, [9666]], [\x27ltrPar\x27, [10646]], [\x27lurdshar\x27, [10570]], [\x27luruhar\x27, [10598]], [\x27lvertneqq\x27, [8808, 65024]], [\x27lvnE\x27, [8808, 65024]], [\x27macr\x27, [175]], [\x27male\x27, [9794]], [\x27malt\x27, [10016]], [\x27maltese\x27, [10016]], [\x27Map\x27, [10501]], [\x27map\x27, [8614]], [\x27mapsto\x27, [8614]], [\x27mapstodown\x27, [8615]], [\x27mapstoleft\x27, [8612]], [\x27mapstoup\x27, [8613]], [\x27marker\x27, [9646]], [\x27mcomma\x27, [10793]], [\x27Mcy\x27, [1052]], [\x27mcy\x27, [1084]], [\x27mdash\x27, [8212]], [\x27mDDot\x27, [8762]], [\x27measuredangle\x27, [8737]], [\x27MediumSpace\x27, [8287]], [\x27Mellintrf\x27, [8499]], [\x27Mfr\x27, [120080]], [\x27mfr\x27, [120106]], [\x27mho\x27, [8487]], [\x27micro\x27, [181]], [\x27midast\x27, [42]], [\x27midcir\x27, [10992]], [\x27mid\x27, [8739]], [\x27middot\x27, [183]], [\x27minusb\x27, [8863]], [\x27minus\x27, [8722]], [\x27minusd\x27, [8760]], [\x27minusdu\x27, [10794]], [\x27MinusPlus\x27, [8723]], [\x27mlcp\x27, [10971]], [\x27mldr\x27, [8230]], [\x27mnplus\x27, [8723]], [\x27models\x27, [8871]], [\x27Mopf\x27, [120132]], [\x27mopf\x27, [120158]], [\x27mp\x27, [8723]], [\x27mscr\x27, [120002]], [\x27Mscr\x27, [8499]], [\x27mstpos\x27, [8766]], [\x27Mu\x27, [924]], [\x27mu\x27, [956]], [\x27multimap\x27, [8888]], [\x27mumap\x27, [8888]], [\x27nabla\x27, [8711]], [\x27Nacute\x27, [323]], [\x27nacute\x27, [324]], [\x27nang\x27, [8736, 8402]], [\x27nap\x27, [8777]], [\x27napE\x27, [10864, 824]], [\x27napid\x27, [8779, 824]], [\x27napos\x27, [329]], [\x27napprox\x27, [8777]], [\x27natural\x27, [9838]], [\x27naturals\x27, [8469]], [\x27natur\x27, [9838]], [\x27nbsp\x27, [160]], [\x27nbump\x27, [8782, 824]], [\x27nbumpe\x27, [8783, 824]], [\x27ncap\x27, [10819]], [\x27Ncaron\x27, [327]], [\x27ncaron\x27, [328]], [\x27Ncedil\x27, [325]], [\x27ncedil\x27, [326]], [\x27ncong\x27, [8775]], [\x27ncongdot\x27, [10861, 824]], [\x27ncup\x27, [10818]], [\x27Ncy\x27, [1053]], [\x27ncy\x27, [1085]], [\x27ndash\x27, [8211]], [\x27nearhk\x27, [10532]], [\x27nearr\x27, [8599]], [\x27neArr\x27, [8663]], [\x27nearrow\x27, [8599]], [\x27ne\x27, [8800]], [\x27nedot\x27, [8784, 824]], [\x27NegativeMediumSpace\x27, [8203]], [\x27NegativeThickSpace\x27, [8203]], [\x27NegativeThinSpace\x27, [8203]], [\x27NegativeVeryThinSpace\x27, [8203]], [\x27nequiv\x27, [8802]], [\x27nesear\x27, [10536]], [\x27nesim\x27, [8770, 824]], [\x27NestedGreaterGreater\x27, [8811]], [\x27NestedLessLess\x27, [8810]], [\x27nexist\x27, [8708]], [\x27nexists\x27, [8708]], [\x27Nfr\x27, [120081]], [\x27nfr\x27, [120107]], [\x27ngE\x27, [8807, 824]], [\x27nge\x27, [8817]], [\x27ngeq\x27, [8817]], [\x27ngeqq\x27, [8807, 824]], [\x27ngeqslant\x27, [10878, 824]], [\x27nges\x27, [10878, 824]], [\x27nGg\x27, [8921, 824]], [\x27ngsim\x27, [8821]], [\x27nGt\x27, [8811, 8402]], [\x27ngt\x27, [8815]], [\x27ngtr\x27, [8815]], [\x27nGtv\x27, [8811, 824]], [\x27nharr\x27, [8622]], [\x27nhArr\x27, [8654]], [\x27nhpar\x27, [10994]], [\x27ni\x27, [8715]], [\x27nis\x27, [8956]], [\x27nisd\x27, [8954]], [\x27niv\x27, [8715]], [\x27NJcy\x27, [1034]], [\x27njcy\x27, [1114]], [\x27nlarr\x27, [8602]], [\x27nlArr\x27, [8653]], [\x27nldr\x27, [8229]], [\x27nlE\x27, [8806, 824]], [\x27nle\x27, [8816]], [\x27nleftarrow\x27, [8602]], [\x27nLeftarrow\x27, [8653]], [\x27nleftrightarrow\x27, [8622]], [\x27nLeftrightarrow\x27, [8654]], [\x27nleq\x27, [8816]], [\x27nleqq\x27, [8806, 824]], [\x27nleqslant\x27, [10877, 824]], [\x27nles\x27, [10877, 824]], [\x27nless\x27, [8814]], [\x27nLl\x27, [8920, 824]], [\x27nlsim\x27, [8820]], [\x27nLt\x27, [8810, 8402]], [\x27nlt\x27, [8814]], [\x27nltri\x27, [8938]], [\x27nltrie\x27, [8940]], [\x27nLtv\x27, [8810, 824]], [\x27nmid\x27, [8740]], [\x27NoBreak\x27, [8288]], [\x27NonBreakingSpace\x27, [160]], [\x27nopf\x27, [120159]], [\x27Nopf\x27, [8469]], [\x27Not\x27, [10988]], [\x27not\x27, [172]], [\x27NotCongruent\x27, [8802]], [\x27NotCupCap\x27, [8813]], [\x27NotDoubleVerticalBar\x27, [8742]], [\x27NotElement\x27, [8713]], [\x27NotEqual\x27, [8800]], [\x27NotEqualTilde\x27, [8770, 824]], [\x27NotExists\x27, [8708]], [\x27NotGreater\x27, [8815]], [\x27NotGreaterEqual\x27, [8817]], [\x27NotGreaterFullEqual\x27, [8807, 824]], [\x27NotGreaterGreater\x27, [8811, 824]], [\x27NotGreaterLess\x27, [8825]], [\x27NotGreaterSlantEqual\x27, [10878, 824]], [\x27NotGreaterTilde\x27, [8821]], [\x27NotHumpDownHump\x27, [8782, 824]], [\x27NotHumpEqual\x27, [8783, 824]], [\x27notin\x27, [8713]], [\x27notindot\x27, [8949, 824]], [\x27notinE\x27, [8953, 824]], [\x27notinva\x27, [8713]], [\x27notinvb\x27, [8951]], [\x27notinvc\x27, [8950]], [\x27NotLeftTriangleBar\x27, [10703, 824]], [\x27NotLeftTriangle\x27, [8938]], [\x27NotLeftTriangleEqual\x27, [8940]], [\x27NotLess\x27, [8814]], [\x27NotLessEqual\x27, [8816]], [\x27NotLessGreater\x27, [8824]], [\x27NotLessLess\x27, [8810, 824]], [\x27NotLessSlantEqual\x27, [10877, 824]], [\x27NotLessTilde\x27, [8820]], [\x27NotNestedGreaterGreater\x27, [10914, 824]], [\x27NotNestedLessLess\x27, [10913, 824]], [\x27notni\x27, [8716]], [\x27notniva\x27, [8716]], [\x27notnivb\x27, [8958]], [\x27notnivc\x27, [8957]], [\x27NotPrecedes\x27, [8832]], [\x27NotPrecedesEqual\x27, [10927, 824]], [\x27NotPrecedesSlantEqual\x27, [8928]], [\x27NotReverseElement\x27, [8716]], [\x27NotRightTriangleBar\x27, [10704, 824]], [\x27NotRightTriangle\x27, [8939]], [\x27NotRightTriangleEqual\x27, [8941]], [\x27NotSquareSubset\x27, [8847, 824]], [\x27NotSquareSubsetEqual\x27, [8930]], [\x27NotSquareSuperset\x27, [8848, 824]], [\x27NotSquareSupersetEqual\x27, [8931]], [\x27NotSubset\x27, [8834, 8402]], [\x27NotSubsetEqual\x27, [8840]], [\x27NotSucceeds\x27, [8833]], [\x27NotSucceedsEqual\x27, [10928, 824]], [\x27NotSucceedsSlantEqual\x27, [8929]], [\x27NotSucceedsTilde\x27, [8831, 824]], [\x27NotSuperset\x27, [8835, 8402]], [\x27NotSupersetEqual\x27, [8841]], [\x27NotTilde\x27, [8769]], [\x27NotTildeEqual\x27, [8772]], [\x27NotTildeFullEqual\x27, [8775]], [\x27NotTildeTilde\x27, [8777]], [\x27NotVerticalBar\x27, [8740]], [\x27nparallel\x27, [8742]], [\x27npar\x27, [8742]], [\x27nparsl\x27, [11005, 8421]], [\x27npart\x27, [8706, 824]], [\x27npolint\x27, [10772]], [\x27npr\x27, [8832]], [\x27nprcue\x27, [8928]], [\x27nprec\x27, [8832]], [\x27npreceq\x27, [10927, 824]], [\x27npre\x27, [10927, 824]], [\x27nrarrc\x27, [10547, 824]], [\x27nrarr\x27, [8603]], [\x27nrArr\x27, [8655]], [\x27nrarrw\x27, [8605, 824]], [\x27nrightarrow\x27, [8603]], [\x27nRightarrow\x27, [8655]], [\x27nrtri\x27, [8939]], [\x27nrtrie\x27, [8941]], [\x27nsc\x27, [8833]], [\x27nsccue\x27, [8929]], [\x27nsce\x27, [10928, 824]], [\x27Nscr\x27, [119977]], [\x27nscr\x27, [120003]], [\x27nshortmid\x27, [8740]], [\x27nshortparallel\x27, [8742]], [\x27nsim\x27, [8769]], [\x27nsime\x27, [8772]], [\x27nsimeq\x27, [8772]], [\x27nsmid\x27, [8740]], [\x27nspar\x27, [8742]], [\x27nsqsube\x27, [8930]], [\x27nsqsupe\x27, [8931]], [\x27nsub\x27, [8836]], [\x27nsubE\x27, [10949, 824]], [\x27nsube\x27, [8840]], [\x27nsubset\x27, [8834, 8402]], [\x27nsubseteq\x27, [8840]], [\x27nsubseteqq\x27, [10949, 824]], [\x27nsucc\x27, [8833]], [\x27nsucceq\x27, [10928, 824]], [\x27nsup\x27, [8837]], [\x27nsupE\x27, [10950, 824]], [\x27nsupe\x27, [8841]], [\x27nsupset\x27, [8835, 8402]], [\x27nsupseteq\x27, [8841]], [\x27nsupseteqq\x27, [10950, 824]], [\x27ntgl\x27, [8825]], [\x27Ntilde\x27, [209]], [\x27ntilde\x27, [241]], [\x27ntlg\x27, [8824]], [\x27ntriangleleft\x27, [8938]], [\x27ntrianglelefteq\x27, [8940]], [\x27ntriangleright\x27, [8939]], [\x27ntrianglerighteq\x27, [8941]], [\x27Nu\x27, [925]], [\x27nu\x27, [957]], [\x27num\x27, [35]], [\x27numero\x27, [8470]], [\x27numsp\x27, [8199]], [\x27nvap\x27, [8781, 8402]], [\x27nvdash\x27, [8876]], [\x27nvDash\x27, [8877]], [\x27nVdash\x27, [8878]], [\x27nVDash\x27, [8879]], [\x27nvge\x27, [8805, 8402]], [\x27nvgt\x27, [62, 8402]], [\x27nvHarr\x27, [10500]], [\x27nvinfin\x27, [10718]], [\x27nvlArr\x27, [10498]], [\x27nvle\x27, [8804, 8402]], [\x27nvlt\x27, [60, 8402]], [\x27nvltrie\x27, [8884, 8402]], [\x27nvrArr\x27, [10499]], [\x27nvrtrie\x27, [8885, 8402]], [\x27nvsim\x27, [8764, 8402]], [\x27nwarhk\x27, [10531]], [\x27nwarr\x27, [8598]], [\x27nwArr\x27, [8662]], [\x27nwarrow\x27, [8598]], [\x27nwnear\x27, [10535]], [\x27Oacute\x27, [211]], [\x27oacute\x27, [243]], [\x27oast\x27, [8859]], [\x27Ocirc\x27, [212]], [\x27ocirc\x27, [244]], [\x27ocir\x27, [8858]], [\x27Ocy\x27, [1054]], [\x27ocy\x27, [1086]], [\x27odash\x27, [8861]], [\x27Odblac\x27, [336]], [\x27odblac\x27, [337]], [\x27odiv\x27, [10808]], [\x27odot\x27, [8857]], [\x27odsold\x27, [10684]], [\x27OElig\x27, [338]], [\x27oelig\x27, [339]], [\x27ofcir\x27, [10687]], [\x27Ofr\x27, [120082]], [\x27ofr\x27, [120108]], [\x27ogon\x27, [731]], [\x27Ograve\x27, [210]], [\x27ograve\x27, [242]], [\x27ogt\x27, [10689]], [\x27ohbar\x27, [10677]], [\x27ohm\x27, [937]], [\x27oint\x27, [8750]], [\x27olarr\x27, [8634]], [\x27olcir\x27, [10686]], [\x27olcross\x27, [10683]], [\x27oline\x27, [8254]], [\x27olt\x27, [10688]], [\x27Omacr\x27, [332]], [\x27omacr\x27, [333]], [\x27Omega\x27, [937]], [\x27omega\x27, [969]], [\x27Omicron\x27, [927]], [\x27omicron\x27, [959]], [\x27omid\x27, [10678]], [\x27ominus\x27, [8854]], [\x27Oopf\x27, [120134]], [\x27oopf\x27, [120160]], [\x27opar\x27, [10679]], [\x27OpenCurlyDoubleQuote\x27, [8220]], [\x27OpenCurlyQuote\x27, [8216]], [\x27operp\x27, [10681]], [\x27oplus\x27, [8853]], [\x27orarr\x27, [8635]], [\x27Or\x27, [10836]], [\x27or\x27, [8744]], [\x27ord\x27, [10845]], [\x27order\x27, [8500]], [\x27orderof\x27, [8500]], [\x27ordf\x27, [170]], [\x27ordm\x27, [186]], [\x27origof\x27, [8886]], [\x27oror\x27, [10838]], [\x27orslope\x27, [10839]], [\x27orv\x27, [10843]], [\x27oS\x27, [9416]], [\x27Oscr\x27, [119978]], [\x27oscr\x27, [8500]], [\x27Oslash\x27, [216]], [\x27oslash\x27, [248]], [\x27osol\x27, [8856]], [\x27Otilde\x27, [213]], [\x27otilde\x27, [245]], [\x27otimesas\x27, [10806]], [\x27Otimes\x27, [10807]], [\x27otimes\x27, [8855]], [\x27Ouml\x27, [214]], [\x27ouml\x27, [246]], [\x27ovbar\x27, [9021]], [\x27OverBar\x27, [8254]], [\x27OverBrace\x27, [9182]], [\x27OverBracket\x27, [9140]], [\x27OverParenthesis\x27, [9180]], [\x27para\x27, [182]], [\x27parallel\x27, [8741]], [\x27par\x27, [8741]], [\x27parsim\x27, [10995]], [\x27parsl\x27, [11005]], [\x27part\x27, [8706]], [\x27PartialD\x27, [8706]], [\x27Pcy\x27, [1055]], [\x27pcy\x27, [1087]], [\x27percnt\x27, [37]], [\x27period\x27, [46]], [\x27permil\x27, [8240]], [\x27perp\x27, [8869]], [\x27pertenk\x27, [8241]], [\x27Pfr\x27, [120083]], [\x27pfr\x27, [120109]], [\x27Phi\x27, [934]], [\x27phi\x27, [966]], [\x27phiv\x27, [981]], [\x27phmmat\x27, [8499]], [\x27phone\x27, [9742]], [\x27Pi\x27, [928]], [\x27pi\x27, [960]], [\x27pitchfork\x27, [8916]], [\x27piv\x27, [982]], [\x27planck\x27, [8463]], [\x27planckh\x27, [8462]], [\x27plankv\x27, [8463]], [\x27plusacir\x27, [10787]], [\x27plusb\x27, [8862]], [\x27pluscir\x27, [10786]], [\x27plus\x27, [43]], [\x27plusdo\x27, [8724]], [\x27plusdu\x27, [10789]], [\x27pluse\x27, [10866]], [\x27PlusMinus\x27, [177]], [\x27plusmn\x27, [177]], [\x27plussim\x27, [10790]], [\x27plustwo\x27, [10791]], [\x27pm\x27, [177]], [\x27Poincareplane\x27, [8460]], [\x27pointint\x27, [10773]], [\x27popf\x27, [120161]], [\x27Popf\x27, [8473]], [\x27pound\x27, [163]], [\x27prap\x27, [10935]], [\x27Pr\x27, [10939]], [\x27pr\x27, [8826]], [\x27prcue\x27, [8828]], [\x27precapprox\x27, [10935]], [\x27prec\x27, [8826]], [\x27preccurlyeq\x27, [8828]], [\x27Precedes\x27, [8826]], [\x27PrecedesEqual\x27, [10927]], [\x27PrecedesSlantEqual\x27, [8828]], [\x27PrecedesTilde\x27, [8830]], [\x27preceq\x27, [10927]], [\x27precnapprox\x27, [10937]], [\x27precneqq\x27, [10933]], [\x27precnsim\x27, [8936]], [\x27pre\x27, [10927]], [\x27prE\x27, [10931]], [\x27precsim\x27, [8830]], [\x27prime\x27, [8242]], [\x27Prime\x27, [8243]], [\x27primes\x27, [8473]], [\x27prnap\x27, [10937]], [\x27prnE\x27, [10933]], [\x27prnsim\x27, [8936]], [\x27prod\x27, [8719]], [\x27Product\x27, [8719]], [\x27profalar\x27, [9006]], [\x27profline\x27, [8978]], [\x27profsurf\x27, [8979]], [\x27prop\x27, [8733]], [\x27Proportional\x27, [8733]], [\x27Proportion\x27, [8759]], [\x27propto\x27, [8733]], [\x27prsim\x27, [8830]], [\x27prurel\x27, [8880]], [\x27Pscr\x27, [119979]], [\x27pscr\x27, [120005]], [\x27Psi\x27, [936]], [\x27psi\x27, [968]], [\x27puncsp\x27, [8200]], [\x27Qfr\x27, [120084]], [\x27qfr\x27, [120110]], [\x27qint\x27, [10764]], [\x27qopf\x27, [120162]], [\x27Qopf\x27, [8474]], [\x27qprime\x27, [8279]], [\x27Qscr\x27, [119980]], [\x27qscr\x27, [120006]], [\x27quaternions\x27, [8461]], [\x27quatint\x27, [10774]], [\x27quest\x27, [63]], [\x27questeq\x27, [8799]], [\x27quot\x27, [34]], [\x27QUOT\x27, [34]], [\x27rAarr\x27, [8667]], [\x27race\x27, [8765, 817]], [\x27Racute\x27, [340]], [\x27racute\x27, [341]], [\x27radic\x27, [8730]], [\x27raemptyv\x27, [10675]], [\x27rang\x27, [10217]], [\x27Rang\x27, [10219]], [\x27rangd\x27, [10642]], [\x27range\x27, [10661]], [\x27rangle\x27, [10217]], [\x27raquo\x27, [187]], [\x27rarrap\x27, [10613]], [\x27rarrb\x27, [8677]], [\x27rarrbfs\x27, [10528]], [\x27rarrc\x27, [10547]], [\x27rarr\x27, [8594]], [\x27Rarr\x27, [8608]], [\x27rArr\x27, [8658]], [\x27rarrfs\x27, [10526]], [\x27rarrhk\x27, [8618]], [\x27rarrlp\x27, [8620]], [\x27rarrpl\x27, [10565]], [\x27rarrsim\x27, [10612]], [\x27Rarrtl\x27, [10518]], [\x27rarrtl\x27, [8611]], [\x27rarrw\x27, [8605]], [\x27ratail\x27, [10522]], [\x27rAtail\x27, [10524]], [\x27ratio\x27, [8758]], [\x27rationals\x27, [8474]], [\x27rbarr\x27, [10509]], [\x27rBarr\x27, [10511]], [\x27RBarr\x27, [10512]], [\x27rbbrk\x27, [10099]], [\x27rbrace\x27, [125]], [\x27rbrack\x27, [93]], [\x27rbrke\x27, [10636]], [\x27rbrksld\x27, [10638]], [\x27rbrkslu\x27, [10640]], [\x27Rcaron\x27, [344]], [\x27rcaron\x27, [345]], [\x27Rcedil\x27, [342]], [\x27rcedil\x27, [343]], [\x27rceil\x27, [8969]], [\x27rcub\x27, [125]], [\x27Rcy\x27, [1056]], [\x27rcy\x27, [1088]], [\x27rdca\x27, [10551]], [\x27rdldhar\x27, [10601]], [\x27rdquo\x27, [8221]], [\x27rdquor\x27, [8221]], [\x27CloseCurlyDoubleQuote\x27, [8221]], [\x27rdsh\x27, [8627]], [\x27real\x27, [8476]], [\x27realine\x27, [8475]], [\x27realpart\x27, [8476]], [\x27reals\x27, [8477]], [\x27Re\x27, [8476]], [\x27rect\x27, [9645]], [\x27reg\x27, [174]], [\x27REG\x27, [174]], [\x27ReverseElement\x27, [8715]], [\x27ReverseEquilibrium\x27, [8651]], [\x27ReverseUpEquilibrium\x27, [10607]], [\x27rfisht\x27, [10621]], [\x27rfloor\x27, [8971]], [\x27rfr\x27, [120111]], [\x27Rfr\x27, [8476]], [\x27rHar\x27, [10596]], [\x27rhard\x27, [8641]], [\x27rharu\x27, [8640]], [\x27rharul\x27, [10604]], [\x27Rho\x27, [929]], [\x27rho\x27, [961]], [\x27rhov\x27, [1009]], [\x27RightAngleBracket\x27, [10217]], [\x27RightArrowBar\x27, [8677]], [\x27rightarrow\x27, [8594]], [\x27RightArrow\x27, [8594]], [\x27Rightarrow\x27, [8658]], [\x27RightArrowLeftArrow\x27, [8644]], [\x27rightarrowtail\x27, [8611]], [\x27RightCeiling\x27, [8969]], [\x27RightDoubleBracket\x27, [10215]], [\x27RightDownTeeVector\x27, [10589]], [\x27RightDownVectorBar\x27, [10581]], [\x27RightDownVector\x27, [8642]], [\x27RightFloor\x27, [8971]], [\x27rightharpoondown\x27, [8641]], [\x27rightharpoonup\x27, [8640]], [\x27rightleftarrows\x27, [8644]], [\x27rightleftharpoons\x27, [8652]], [\x27rightrightarrows\x27, [8649]], [\x27rightsquigarrow\x27, [8605]], [\x27RightTeeArrow\x27, [8614]], [\x27RightTee\x27, [8866]], [\x27RightTeeVector\x27, [10587]], [\x27rightthreetimes\x27, [8908]], [\x27RightTriangleBar\x27, [10704]], [\x27RightTriangle\x27, [8883]], [\x27RightTriangleEqual\x27, [8885]], [\x27RightUpDownVector\x27, [10575]], [\x27RightUpTeeVector\x27, [10588]], [\x27RightUpVectorBar\x27, [10580]], [\x27RightUpVector\x27, [8638]], [\x27RightVectorBar\x27, [10579]], [\x27RightVector\x27, [8640]], [\x27ring\x27, [730]], [\x27risingdotseq\x27, [8787]], [\x27rlarr\x27, [8644]], [\x27rlhar\x27, [8652]], [\x27rlm\x27, [8207]], [\x27rmoustache\x27, [9137]], [\x27rmoust\x27, [9137]], [\x27rnmid\x27, [10990]], [\x27roang\x27, [10221]], [\x27roarr\x27, [8702]], [\x27robrk\x27, [10215]], [\x27ropar\x27, [10630]], [\x27ropf\x27, [120163]], [\x27Ropf\x27, [8477]], [\x27roplus\x27, [10798]], [\x27rotimes\x27, [10805]], [\x27RoundImplies\x27, [10608]], [\x27rpar\x27, [41]], [\x27rpargt\x27, [10644]], [\x27rppolint\x27, [10770]], [\x27rrarr\x27, [8649]], [\x27Rrightarrow\x27, [8667]], [\x27rsaquo\x27, [8250]], [\x27rscr\x27, [120007]], [\x27Rscr\x27, [8475]], [\x27rsh\x27, [8625]], [\x27Rsh\x27, [8625]], [\x27rsqb\x27, [93]], [\x27rsquo\x27, [8217]], [\x27rsquor\x27, [8217]], [\x27CloseCurlyQuote\x27, [8217]], [\x27rthree\x27, [8908]], [\x27rtimes\x27, [8906]], [\x27rtri\x27, [9657]], [\x27rtrie\x27, [8885]], [\x27rtrif\x27, [9656]], [\x27rtriltri\x27, [10702]], [\x27RuleDelayed\x27, [10740]], [\x27ruluhar\x27, [10600]], [\x27rx\x27, [8478]], [\x27Sacute\x27, [346]], [\x27sacute\x27, [347]], [\x27sbquo\x27, [8218]], [\x27scap\x27, [10936]], [\x27Scaron\x27, [352]], [\x27scaron\x27, [353]], [\x27Sc\x27, [10940]], [\x27sc\x27, [8827]], [\x27sccue\x27, [8829]], [\x27sce\x27, [10928]], [\x27scE\x27, [10932]], [\x27Scedil\x27, [350]], [\x27scedil\x27, [351]], [\x27Scirc\x27, [348]], [\x27scirc\x27, [349]], [\x27scnap\x27, [10938]], [\x27scnE\x27, [10934]], [\x27scnsim\x27, [8937]], [\x27scpolint\x27, [10771]], [\x27scsim\x27, [8831]], [\x27Scy\x27, [1057]], [\x27scy\x27, [1089]], [\x27sdotb\x27, [8865]], [\x27sdot\x27, [8901]], [\x27sdote\x27, [10854]], [\x27searhk\x27, [10533]], [\x27searr\x27, [8600]], [\x27seArr\x27, [8664]], [\x27searrow\x27, [8600]], [\x27sect\x27, [167]], [\x27semi\x27, [59]], [\x27seswar\x27, [10537]], [\x27setminus\x27, [8726]], [\x27setmn\x27, [8726]], [\x27sext\x27, [10038]], [\x27Sfr\x27, [120086]], [\x27sfr\x27, [120112]], [\x27sfrown\x27, [8994]], [\x27sharp\x27, [9839]], [\x27SHCHcy\x27, [1065]], [\x27shchcy\x27, [1097]], [\x27SHcy\x27, [1064]], [\x27shcy\x27, [1096]], [\x27ShortDownArrow\x27, [8595]], [\x27ShortLeftArrow\x27, [8592]], [\x27shortmid\x27, [8739]], [\x27shortparallel\x27, [8741]], [\x27ShortRightArrow\x27, [8594]], [\x27ShortUpArrow\x27, [8593]], [\x27shy\x27, [173]], [\x27Sigma\x27, [931]], [\x27sigma\x27, [963]], [\x27sigmaf\x27, [962]], [\x27sigmav\x27, [962]], [\x27sim\x27, [8764]], [\x27simdot\x27, [10858]], [\x27sime\x27, [8771]], [\x27simeq\x27, [8771]], [\x27simg\x27, [10910]], [\x27simgE\x27, [10912]], [\x27siml\x27, [10909]], [\x27simlE\x27, [10911]], [\x27simne\x27, [8774]], [\x27simplus\x27, [10788]], [\x27simrarr\x27, [10610]], [\x27slarr\x27, [8592]], [\x27SmallCircle\x27, [8728]], [\x27smallsetminus\x27, [8726]], [\x27smashp\x27, [10803]], [\x27smeparsl\x27, [10724]], [\x27smid\x27, [8739]], [\x27smile\x27, [8995]], [\x27smt\x27, [10922]], [\x27smte\x27, [10924]], [\x27smtes\x27, [10924, 65024]], [\x27SOFTcy\x27, [1068]], [\x27softcy\x27, [1100]], [\x27solbar\x27, [9023]], [\x27solb\x27, [10692]], [\x27sol\x27, [47]], [\x27Sopf\x27, [120138]], [\x27sopf\x27, [120164]], [\x27spades\x27, [9824]], [\x27spadesuit\x27, [9824]], [\x27spar\x27, [8741]], [\x27sqcap\x27, [8851]], [\x27sqcaps\x27, [8851, 65024]], [\x27sqcup\x27, [8852]], [\x27sqcups\x27, [8852, 65024]], [\x27Sqrt\x27, [8730]], [\x27sqsub\x27, [8847]], [\x27sqsube\x27, [8849]], [\x27sqsubset\x27, [8847]], [\x27sqsubseteq\x27, [8849]], [\x27sqsup\x27, [8848]], [\x27sqsupe\x27, [8850]], [\x27sqsupset\x27, [8848]], [\x27sqsupseteq\x27, [8850]], [\x27square\x27, [9633]], [\x27Square\x27, [9633]], [\x27SquareIntersection\x27, [8851]], [\x27SquareSubset\x27, [8847]], [\x27SquareSubsetEqual\x27, [8849]], [\x27SquareSuperset\x27, [8848]], [\x27SquareSupersetEqual\x27, [8850]], [\x27SquareUnion\x27, [8852]], [\x27squarf\x27, [9642]], [\x27squ\x27, [9633]], [\x27squf\x27, [9642]], [\x27srarr\x27, [8594]], [\x27Sscr\x27, [119982]], [\x27sscr\x27, [120008]], [\x27ssetmn\x27, [8726]], [\x27ssmile\x27, [8995]], [\x27sstarf\x27, [8902]], [\x27Star\x27, [8902]], [\x27star\x27, [9734]], [\x27starf\x27, [9733]], [\x27straightepsilon\x27, [1013]], [\x27straightphi\x27, [981]], [\x27strns\x27, [175]], [\x27sub\x27, [8834]], [\x27Sub\x27, [8912]], [\x27subdot\x27, [10941]], [\x27subE\x27, [10949]], [\x27sube\x27, [8838]], [\x27subedot\x27, [10947]], [\x27submult\x27, [10945]], [\x27subnE\x27, [10955]], [\x27subne\x27, [8842]], [\x27subplus\x27, [10943]], [\x27subrarr\x27, [10617]], [\x27subset\x27, [8834]], [\x27Subset\x27, [8912]], [\x27subseteq\x27, [8838]], [\x27subseteqq\x27, [10949]], [\x27SubsetEqual\x27, [8838]], [\x27subsetneq\x27, [8842]], [\x27subsetneqq\x27, [10955]], [\x27subsim\x27, [10951]], [\x27subsub\x27, [10965]], [\x27subsup\x27, [10963]], [\x27succapprox\x27, [10936]], [\x27succ\x27, [8827]], [\x27succcurlyeq\x27, [8829]], [\x27Succeeds\x27, [8827]], [\x27SucceedsEqual\x27, [10928]], [\x27SucceedsSlantEqual\x27, [8829]], [\x27SucceedsTilde\x27, [8831]], [\x27succeq\x27, [10928]], [\x27succnapprox\x27, [10938]], [\x27succneqq\x27, [10934]], [\x27succnsim\x27, [8937]], [\x27succsim\x27, [8831]], [\x27SuchThat\x27, [8715]], [\x27sum\x27, [8721]], [\x27Sum\x27, [8721]], [\x27sung\x27, [9834]], [\x27sup1\x27, [185]], [\x27sup2\x27, [178]], [\x27sup3\x27, [179]], [\x27sup\x27, [8835]], [\x27Sup\x27, [8913]], [\x27supdot\x27, [10942]], [\x27supdsub\x27, [10968]], [\x27supE\x27, [10950]], [\x27supe\x27, [8839]], [\x27supedot\x27, [10948]], [\x27Superset\x27, [8835]], [\x27SupersetEqual\x27, [8839]], [\x27suphsol\x27, [10185]], [\x27suphsub\x27, [10967]], [\x27suplarr\x27, [10619]], [\x27supmult\x27, [10946]], [\x27supnE\x27, [10956]], [\x27supne\x27, [8843]], [\x27supplus\x27, [10944]], [\x27supset\x27, [8835]], [\x27Supset\x27, [8913]], [\x27supseteq\x27, [8839]], [\x27supseteqq\x27, [10950]], [\x27supsetneq\x27, [8843]], [\x27supsetneqq\x27, [10956]], [\x27supsim\x27, [10952]], [\x27supsub\x27, [10964]], [\x27supsup\x27, [10966]], [\x27swarhk\x27, [10534]], [\x27swarr\x27, [8601]], [\x27swArr\x27, [8665]], [\x27swarrow\x27, [8601]], [\x27swnwar\x27, [10538]], [\x27szlig\x27, [223]], [\x27Tab\x27, [9]], [\x27target\x27, [8982]], [\x27Tau\x27, [932]], [\x27tau\x27, [964]], [\x27tbrk\x27, [9140]], [\x27Tcaron\x27, [356]], [\x27tcaron\x27, [357]], [\x27Tcedil\x27, [354]], [\x27tcedil\x27, [355]], [\x27Tcy\x27, [1058]], [\x27tcy\x27, [1090]], [\x27tdot\x27, [8411]], [\x27telrec\x27, [8981]], [\x27Tfr\x27, [120087]], [\x27tfr\x27, [120113]], [\x27there4\x27, [8756]], [\x27therefore\x27, [8756]], [\x27Therefore\x27, [8756]], [\x27Theta\x27, [920]], [\x27theta\x27, [952]], [\x27thetasym\x27, [977]], [\x27thetav\x27, [977]], [\x27thickapprox\x27, [8776]], [\x27thicksim\x27, [8764]], [\x27ThickSpace\x27, [8287, 8202]], [\x27ThinSpace\x27, [8201]], [\x27thinsp\x27, [8201]], [\x27thkap\x27, [8776]], [\x27thksim\x27, [8764]], [\x27THORN\x27, [222]], [\x27thorn\x27, [254]], [\x27tilde\x27, [732]], [\x27Tilde\x27, [8764]], [\x27TildeEqual\x27, [8771]], [\x27TildeFullEqual\x27, [8773]], [\x27TildeTilde\x27, [8776]], [\x27timesbar\x27, [10801]], [\x27timesb\x27, [8864]], [\x27times\x27, [215]], [\x27timesd\x27, [10800]], [\x27tint\x27, [8749]], [\x27toea\x27, [10536]], [\x27topbot\x27, [9014]], [\x27topcir\x27, [10993]], [\x27top\x27, [8868]], [\x27Topf\x27, [120139]], [\x27topf\x27, [120165]], [\x27topfork\x27, [10970]], [\x27tosa\x27, [10537]], [\x27tprime\x27, [8244]], [\x27trade\x27, [8482]], [\x27TRADE\x27, [8482]], [\x27triangle\x27, [9653]], [\x27triangledown\x27, [9663]], [\x27triangleleft\x27, [9667]], [\x27trianglelefteq\x27, [8884]], [\x27triangleq\x27, [8796]], [\x27triangleright\x27, [9657]], [\x27trianglerighteq\x27, [8885]], [\x27tridot\x27, [9708]], [\x27trie\x27, [8796]], [\x27triminus\x27, [10810]], [\x27TripleDot\x27, [8411]], [\x27triplus\x27, [10809]], [\x27trisb\x27, [10701]], [\x27tritime\x27, [10811]], [\x27trpezium\x27, [9186]], [\x27Tscr\x27, [119983]], [\x27tscr\x27, [120009]], [\x27TScy\x27, [1062]], [\x27tscy\x27, [1094]], [\x27TSHcy\x27, [1035]], [\x27tshcy\x27, [1115]], [\x27Tstrok\x27, [358]], [\x27tstrok\x27, [359]], [\x27twixt\x27, [8812]], [\x27twoheadleftarrow\x27, [8606]], [\x27twoheadrightarrow\x27, [8608]], [\x27Uacute\x27, [218]], [\x27uacute\x27, [250]], [\x27uarr\x27, [8593]], [\x27Uarr\x27, [8607]], [\x27uArr\x27, [8657]], [\x27Uarrocir\x27, [10569]], [\x27Ubrcy\x27, [1038]], [\x27ubrcy\x27, [1118]], [\x27Ubreve\x27, [364]], [\x27ubreve\x27, [365]], [\x27Ucirc\x27, [219]], [\x27ucirc\x27, [251]], [\x27Ucy\x27, [1059]], [\x27ucy\x27, [1091]], [\x27udarr\x27, [8645]], [\x27Udblac\x27, [368]], [\x27udblac\x27, [369]], [\x27udhar\x27, [10606]], [\x27ufisht\x27, [10622]], [\x27Ufr\x27, [120088]], [\x27ufr\x27, [120114]], [\x27Ugrave\x27, [217]], [\x27ugrave\x27, [249]], [\x27uHar\x27, [10595]], [\x27uharl\x27, [8639]], [\x27uharr\x27, [8638]], [\x27uhblk\x27, [9600]], [\x27ulcorn\x27, [8988]], [\x27ulcorner\x27, [8988]], [\x27ulcrop\x27, [8975]], [\x27ultri\x27, [9720]], [\x27Umacr\x27, [362]], [\x27umacr\x27, [363]], [\x27uml\x27, [168]], [\x27UnderBar\x27, [95]], [\x27UnderBrace\x27, [9183]], [\x27UnderBracket\x27, [9141]], [\x27UnderParenthesis\x27, [9181]], [\x27Union\x27, [8899]], [\x27UnionPlus\x27, [8846]], [\x27Uogon\x27, [370]], [\x27uogon\x27, [371]], [\x27Uopf\x27, [120140]], [\x27uopf\x27, [120166]], [\x27UpArrowBar\x27, [10514]], [\x27uparrow\x27, [8593]], [\x27UpArrow\x27, [8593]], [\x27Uparrow\x27, [8657]], [\x27UpArrowDownArrow\x27, [8645]], [\x27updownarrow\x27, [8597]], [\x27UpDownArrow\x27, [8597]], [\x27Updownarrow\x27, [8661]], [\x27UpEquilibrium\x27, [10606]], [\x27upharpoonleft\x27, [8639]], [\x27upharpoonright\x27, [8638]], [\x27uplus\x27, [8846]], [\x27UpperLeftArrow\x27, [8598]], [\x27UpperRightArrow\x27, [8599]], [\x27upsi\x27, [965]], [\x27Upsi\x27, [978]], [\x27upsih\x27, [978]], [\x27Upsilon\x27, [933]], [\x27upsilon\x27, [965]], [\x27UpTeeArrow\x27, [8613]], [\x27UpTee\x27, [8869]], [\x27upuparrows\x27, [8648]], [\x27urcorn\x27, [8989]], [\x27urcorner\x27, [8989]], [\x27urcrop\x27, [8974]], [\x27Uring\x27, [366]], [\x27uring\x27, [367]], [\x27urtri\x27, [9721]], [\x27Uscr\x27, [119984]], [\x27uscr\x27, [120010]], [\x27utdot\x27, [8944]], [\x27Utilde\x27, [360]], [\x27utilde\x27, [361]], [\x27utri\x27, [9653]], [\x27utrif\x27, [9652]], [\x27uuarr\x27, [8648]], [\x27Uuml\x27, [220]], [\x27uuml\x27, [252]], [\x27uwangle\x27, [10663]], [\x27vangrt\x27, [10652]], [\x27varepsilon\x27, [1013]], [\x27varkappa\x27, [1008]], [\x27varnothing\x27, [8709]], [\x27varphi\x27, [981]], [\x27varpi\x27, [982]], [\x27varpropto\x27, [8733]], [\x27varr\x27, [8597]], [\x27vArr\x27, [8661]], [\x27varrho\x27, [1009]], [\x27varsigma\x27, [962]], [\x27varsubsetneq\x27, [8842, 65024]], [\x27varsubsetneqq\x27, [10955, 65024]], [\x27varsupsetneq\x27, [8843, 65024]], [\x27varsupsetneqq\x27, [10956, 65024]], [\x27vartheta\x27, [977]], [\x27vartriangleleft\x27, [8882]], [\x27vartriangleright\x27, [8883]], [\x27vBar\x27, [10984]], [\x27Vbar\x27, [10987]], [\x27vBarv\x27, [10985]], [\x27Vcy\x27, [1042]], [\x27vcy\x27, [1074]], [\x27vdash\x27, [8866]], [\x27vDash\x27, [8872]], [\x27Vdash\x27, [8873]], [\x27VDash\x27, [8875]], [\x27Vdashl\x27, [10982]], [\x27veebar\x27, [8891]], [\x27vee\x27, [8744]], [\x27Vee\x27, [8897]], [\x27veeeq\x27, [8794]], [\x27vellip\x27, [8942]], [\x27verbar\x27, [124]], [\x27Verbar\x27, [8214]], [\x27vert\x27, [124]], [\x27Vert\x27, [8214]], [\x27VerticalBar\x27, [8739]], [\x27VerticalLine\x27, [124]], [\x27VerticalSeparator\x27, [10072]], [\x27VerticalTilde\x27, [8768]], [\x27VeryThinSpace\x27, [8202]], [\x27Vfr\x27, [120089]], [\x27vfr\x27, [120115]], [\x27vltri\x27, [8882]], [\x27vnsub\x27, [8834, 8402]], [\x27vnsup\x27, [8835, 8402]], [\x27Vopf\x27, [120141]], [\x27vopf\x27, [120167]], [\x27vprop\x27, [8733]], [\x27vrtri\x27, [8883]], [\x27Vscr\x27, [119985]], [\x27vscr\x27, [120011]], [\x27vsubnE\x27, [10955, 65024]], [\x27vsubne\x27, [8842, 65024]], [\x27vsupnE\x27, [10956, 65024]], [\x27vsupne\x27, [8843, 65024]], [\x27Vvdash\x27, [8874]], [\x27vzigzag\x27, [10650]], [\x27Wcirc\x27, [372]], [\x27wcirc\x27, [373]], [\x27wedbar\x27, [10847]], [\x27wedge\x27, [8743]], [\x27Wedge\x27, [8896]], [\x27wedgeq\x27, [8793]], [\x27weierp\x27, [8472]], [\x27Wfr\x27, [120090]], [\x27wfr\x27, [120116]], [\x27Wopf\x27, [120142]], [\x27wopf\x27, [120168]], [\x27wp\x27, [8472]], [\x27wr\x27, [8768]], [\x27wreath\x27, [8768]], [\x27Wscr\x27, [119986]], [\x27wscr\x27, [120012]], [\x27xcap\x27, [8898]], [\x27xcirc\x27, [9711]], [\x27xcup\x27, [8899]], [\x27xdtri\x27, [9661]], [\x27Xfr\x27, [120091]], [\x27xfr\x27, [120117]], [\x27xharr\x27, [10231]], [\x27xhArr\x27, [10234]], [\x27Xi\x27, [926]], [\x27xi\x27, [958]], [\x27xlarr\x27, [10229]], [\x27xlArr\x27, [10232]], [\x27xmap\x27, [10236]], [\x27xnis\x27, [8955]], [\x27xodot\x27, [10752]], [\x27Xopf\x27, [120143]], [\x27xopf\x27, [120169]], [\x27xoplus\x27, [10753]], [\x27xotime\x27, [10754]], [\x27xrarr\x27, [10230]], [\x27xrArr\x27, [10233]], [\x27Xscr\x27, [119987]], [\x27xscr\x27, [120013]], [\x27xsqcup\x27, [10758]], [\x27xuplus\x27, [10756]], [\x27xutri\x27, [9651]], [\x27xvee\x27, [8897]], [\x27xwedge\x27, [8896]], [\x27Yacute\x27, [221]], [\x27yacute\x27, [253]], [\x27YAcy\x27, [1071]], [\x27yacy\x27, [1103]], [\x27Ycirc\x27, [374]], [\x27ycirc\x27, [375]], [\x27Ycy\x27, [1067]], [\x27ycy\x27, [1099]], [\x27yen\x27, [165]], [\x27Yfr\x27, [120092]], [\x27yfr\x27, [120118]], [\x27YIcy\x27, [1031]], [\x27yicy\x27, [1111]], [\x27Yopf\x27, [120144]], [\x27yopf\x27, [120170]], [\x27Yscr\x27, [119988]], [\x27yscr\x27, [120014]], [\x27YUcy\x27, [1070]], [\x27yucy\x27, [1102]], [\x27yuml\x27, [255]], [\x27Yuml\x27, [376]], [\x27Zacute\x27, [377]], [\x27zacute\x27, [378]], [\x27Zcaron\x27, [381]], [\x27zcaron\x27, [382]], [\x27Zcy\x27, [1047]], [\x27zcy\x27, [1079]], [\x27Zdot\x27, [379]], [\x27zdot\x27, [380]], [\x27zeetrf\x27, [8488]], [\x27ZeroWidthSpace\x27, [8203]], [\x27Zeta\x27, [918]], [\x27zeta\x27, [950]], [\x27zfr\x27, [120119]], [\x27Zfr\x27, [8488]], [\x27ZHcy\x27, [1046]], [\x27zhcy\x27, [1078]], [\x27zigrarr\x27, [8669]], [\x27zopf\x27, [120171]], [\x27Zopf\x27, [8484]], [\x27Zscr\x27, [119989]], [\x27zscr\x27, [120015]], [\x27zwj\x27, [8205]], [\x27zwnj\x27, [8204]]];\x0a\x0avar alphaIndex = {};\x0avar charIndex = {};\x0a\x0acreateIndexes(alphaIndex, charIndex);\x0a\x0a/**\x0a * @constructor\x0a */\x0afunction Html5Entities() {}\x0a\x0a/**\x0a * @param {String} str\x0a * @returns {String}\x0a */\x0aHtml5Entities.prototype.decode = function(str) {\x0a    if (!str || !str.length) {\x0a        return \x27\x27;\x0a    }\x0a    return str.replace(/&(#?[\x5cw\x5cd]+);?/g, function(s, entity) {\x0a        var chr;\x0a        if (entity.charAt(0) === \x22#\x22) {\x0a            var code = entity.charAt(1) === \x27x\x27 ?\x0a                parseInt(entity.substr(2).toLowerCase(), 16) :\x0a                parseInt(entity.substr(1));\x0a\x0a            if (!(isNaN(code) || code \x3c -32768 || code \x3e 65535)) {\x0a                chr = String.fromCharCode(code);\x0a            }\x0a        } else {\x0a            chr = alphaIndex[entity];\x0a        }\x0a        return chr || s;\x0a    });\x0a};\x0a\x0a/**\x0a * @param {String} str\x0a * @returns {String}\x0a */\x0a Html5Entities.decode = function(str) {\x0a    return new Html5Entities().decode(str);\x0a };\x0a\x0a/**\x0a * @param {String} str\x0a * @returns {String}\x0a */\x0aHtml5Entities.prototype.encode = function(str) {\x0a    if (!str || !str.length) {\x0a        return \x27\x27;\x0a    }\x0a    var strLength = str.length;\x0a    var result = \x27\x27;\x0a    var i = 0;\x0a    while (i \x3c strLength) {\x0a        var charInfo = charIndex[str.charCodeAt(i)];\x0a        if (charInfo) {\x0a            var alpha = charInfo[str.charCodeAt(i + 1)];\x0a            if (alpha) {\x0a                i++;\x0a            } else {\x0a                alpha = charInfo[\x27\x27];\x0a            }\x0a            if (alpha) {\x0a                result += \x22&\x22 + alpha + \x22;\x22;\x0a                i++;\x0a                continue;\x0a            }\x0a        }\x0a        result += str.charAt(i);\x0a        i++;\x0a    }\x0a    return result;\x0a};\x0a\x0a/**\x0a * @param {String} str\x0a * @returns {String}\x0a */\x0a Html5Entities.encode = function(str) {\x0a    return new Html5Entities().encode(str);\x0a };\x0a\x0a/**\x0a * @param {String} str\x0a * @returns {String}\x0a */\x0aHtml5Entities.prototype.encodeNonUTF = function(str) {\x0a    if (!str || !str.length) {\x0a        return \x27\x27;\x0a    }\x0a    var strLength = str.length;\x0a    var result = \x27\x27;\x0a    var i = 0;\x0a    while (i \x3c strLength) {\x0a        var c = str.charCodeAt(i);\x0a        var charInfo = charIndex[c];\x0a        if (charInfo) {\x0a            var alpha = charInfo[str.charCodeAt(i + 1)];\x0a            if (alpha) {\x0a                i++;\x0a            } else {\x0a                alpha = charInfo[\x27\x27];\x0a            }\x0a            if (alpha) {\x0a                result += \x22&\x22 + alpha + \x22;\x22;\x0a                i++;\x0a                continue;\x0a            }\x0a        }\x0a        if (c \x3c 32 || c \x3e 126) {\x0a            result += \x27&#\x27 + c + \x27;\x27;\x0a        } else {\x0a            result += str.charAt(i);\x0a        }\x0a        i++;\x0a    }\x0a    return result;\x0a};\x0a\x0a/**\x0a * @param {String} str\x0a * @returns {String}\x0a */\x0a Html5Entities.encodeNonUTF = function(str) {\x0a    return new Html5Entities().encodeNonUTF(str);\x0a };\x0a\x0a/**\x0a * @param {String} str\x0a * @returns {String}\x0a */\x0aHtml5Entities.prototype.encodeNonASCII = function(str) {\x0a    if (!str || !str.length) {\x0a        return \x27\x27;\x0a    }\x0a    var strLength = str.length;\x0a    var result = \x27\x27;\x0a    var i = 0;\x0a    while (i \x3c strLength) {\x0a        var c = str.charCodeAt(i);\x0a        if (c \x3c= 255) {\x0a            result += str[i++];\x0a            continue;\x0a        }\x0a        result += \x27&#\x27 + c + \x27;\x27;\x0a        i++\x0a    }\x0a    return result;\x0a};\x0a\x0a/**\x0a * @param {String} str\x0a * @returns {String}\x0a */\x0a Html5Entities.encodeNonASCII = function(str) {\x0a    return new Html5Entities().encodeNonASCII(str);\x0a };\x0a\x0a/**\x0a * @param {Object} alphaIndex Passed by reference.\x0a * @param {Object} charIndex Passed by reference.\x0a */\x0afunction createIndexes(alphaIndex, charIndex) {\x0a    var i = ENTITIES.length;\x0a    var _results = [];\x0a    while (i--) {\x0a        var e = ENTITIES[i];\x0a        var alpha = e[0];\x0a        var chars = e[1];\x0a        var chr = chars[0];\x0a        var addChar = (chr \x3c 32 || chr \x3e 126) || chr === 62 || chr === 60 || chr === 38 || chr === 34 || chr === 39;\x0a        var charInfo;\x0a        if (addChar) {\x0a            charInfo = charIndex[chr] = charIndex[chr] || {};\x0a        }\x0a        if (chars[1]) {\x0a            var chr2 = chars[1];\x0a            alphaIndex[alpha] = String.fromCharCode(chr) + String.fromCharCode(chr2);\x0a            _results.push(addChar && (charInfo[chr2] = alpha));\x0a        } else {\x0a            alphaIndex[alpha] = String.fromCharCode(chr);\x0a            _results.push(addChar && (charInfo[\x27\x27] = alpha));\x0a        }\x0a    }\x0a}\x0a\x0amodule.exports = Html5Entities;\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../html-entities/lib/xml-entities.js\x22:\x0a/***/ (function(module, exports) {\x0a\x0avar ALPHA_INDEX = {\x0a    \x27&lt\x27: \x27\x3c\x27,\x0a    \x27&gt\x27: \x27\x3e\x27,\x0a    \x27&quot\x27: \x27\x22\x27,\x0a    \x27&apos\x27: \x27\x5c\x27\x27,\x0a    \x27&amp\x27: \x27&\x27,\x0a    \x27&lt;\x27: \x27\x3c\x27,\x0a    \x27&gt;\x27: \x27\x3e\x27,\x0a    \x27&quot;\x27: \x27\x22\x27,\x0a    \x27&apos;\x27: \x27\x5c\x27\x27,\x0a    \x27&amp;\x27: \x27&\x27\x0a};\x0a\x0avar CHAR_INDEX = {\x0a    60: \x27lt\x27,\x0a    62: \x27gt\x27,\x0a    34: \x27quot\x27,\x0a    39: \x27apos\x27,\x0a    38: \x27amp\x27\x0a};\x0a\x0avar CHAR_S_INDEX = {\x0a    \x27\x3c\x27: \x27&lt;\x27,\x0a    \x27\x3e\x27: \x27&gt;\x27,\x0a    \x27\x22\x27: \x27&quot;\x27,\x0a    \x27\x5c\x27\x27: \x27&apos;\x27,\x0a    \x27&\x27: \x27&amp;\x27\x0a};\x0a\x0a/**\x0a * @constructor\x0a */\x0afunction XmlEntities() {}\x0a\x0a/**\x0a * @param {String} str\x0a * @returns {String}\x0a */\x0aXmlEntities.prototype.encode = function(str) {\x0a    if (!str || !str.length) {\x0a        return \x27\x27;\x0a    }\x0a    return str.replace(/\x3c|\x3e|\x22|\x27|&/g, function(s) {\x0a        return CHAR_S_INDEX[s];\x0a    });\x0a};\x0a\x0a/**\x0a * @param {String} str\x0a * @returns {String}\x0a */\x0a XmlEntities.encode = function(str) {\x0a    return new XmlEntities().encode(str);\x0a };\x0a\x0a/**\x0a * @param {String} str\x0a * @returns {String}\x0a */\x0aXmlEntities.prototype.decode = function(str) {\x0a    if (!str || !str.length) {\x0a        return \x27\x27;\x0a    }\x0a    return str.replace(/&#?[0-9a-zA-Z]+;?/g, function(s) {\x0a        if (s.charAt(1) === \x27#\x27) {\x0a            var code = s.charAt(2).toLowerCase() === \x27x\x27 ?\x0a                parseInt(s.substr(3), 16) :\x0a                parseInt(s.substr(2));\x0a\x0a            if (isNaN(code) || code \x3c -32768 || code \x3e 65535) {\x0a                return \x27\x27;\x0a            }\x0a            return String.fromCharCode(code);\x0a        }\x0a        return ALPHA_INDEX[s] || s;\x0a    });\x0a};\x0a\x0a/**\x0a * @param {String} str\x0a * @returns {String}\x0a */\x0a XmlEntities.decode = function(str) {\x0a    return new XmlEntities().decode(str);\x0a };\x0a\x0a/**\x0a * @param {String} str\x0a * @returns {String}\x0a */\x0aXmlEntities.prototype.encodeNonUTF = function(str) {\x0a    if (!str || !str.length) {\x0a        return \x27\x27;\x0a    }\x0a    var strLength = str.length;\x0a    var result = \x27\x27;\x0a    var i = 0;\x0a    while (i \x3c strLength) {\x0a        var c = str.charCodeAt(i);\x0a        var alpha = CHAR_INDEX[c];\x0a        if (alpha) {\x0a            result += \x22&\x22 + alpha + \x22;\x22;\x0a            i++;\x0a            continue;\x0a        }\x0a        if (c \x3c 32 || c \x3e 126) {\x0a            result += \x27&#\x27 + c + \x27;\x27;\x0a        } else {\x0a            result += str.charAt(i);\x0a        }\x0a        i++;\x0a    }\x0a    return result;\x0a};\x0a\x0a/**\x0a * @param {String} str\x0a * @returns {String}\x0a */\x0a XmlEntities.encodeNonUTF = function(str) {\x0a    return new XmlEntities().encodeNonUTF(str);\x0a };\x0a\x0a/**\x0a * @param {String} str\x0a * @returns {String}\x0a */\x0aXmlEntities.prototype.encodeNonASCII = function(str) {\x0a    if (!str || !str.length) {\x0a        return \x27\x27;\x0a    }\x0a    var strLenght = str.length;\x0a    var result = \x27\x27;\x0a    var i = 0;\x0a    while (i \x3c strLenght) {\x0a        var c = str.charCodeAt(i);\x0a        if (c \x3c= 255) {\x0a            result += str[i++];\x0a            continue;\x0a        }\x0a        result += \x27&#\x27 + c + \x27;\x27;\x0a        i++;\x0a    }\x0a    return result;\x0a};\x0a\x0a/**\x0a * @param {String} str\x0a * @returns {String}\x0a */\x0a XmlEntities.encodeNonASCII = function(str) {\x0a    return new XmlEntities().encodeNonASCII(str);\x0a };\x0a\x0amodule.exports = XmlEntities;\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../inherits/inherits_browser.js\x22:\x0a/***/ (function(module, exports) {\x0a\x0aif (typeof Object.create === \x27function\x27) {\x0a  // implementation from standard node.js \x27util\x27 module\x0a  module.exports = function inherits(ctor, superCtor) {\x0a    ctor.super_ = superCtor\x0a    ctor.prototype = Object.create(superCtor.prototype, {\x0a      constructor: {\x0a        value: ctor,\x0a        enumerable: false,\x0a        writable: true,\x0a        configurable: true\x0a      }\x0a    });\x0a  };\x0a} else {\x0a  // old school shim for old browsers\x0a  module.exports = function inherits(ctor, superCtor) {\x0a    ctor.super_ = superCtor\x0a    var TempCtor = function () {}\x0a    TempCtor.prototype = superCtor.prototype\x0a    ctor.prototype = new TempCtor()\x0a    ctor.prototype.constructor = ctor\x0a  }\x0a}\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../json3/lib/json3.js\x22:\x0a/***/ (function(module, exports, __webpack_require__) {\x0a\x0a/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */\x0a;(function () {\x0a  // Detect the `define` function exposed by asynchronous module loaders. The\x0a  // strict `define` check is necessary for compatibility with `r.js`.\x0a  var isLoader = \x22function\x22 === \x22function\x22 && __webpack_require__(\x22../../../../webpack/buildin/amd-options.js\x22);\x0a\x0a  // A set of types used to distinguish objects from primitives.\x0a  var objectTypes = {\x0a    \x22function\x22: true,\x0a    \x22object\x22: true\x0a  };\x0a\x0a  // Detect the `exports` object exposed by CommonJS implementations.\x0a  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\x0a\x0a  // Use the `global` object exposed by Node (including Browserify via\x0a  // `insert-module-globals`), Narwhal, and Ringo as the default context,\x0a  // and the `window` object in browsers. Rhino exports a `global` function\x0a  // instead.\x0a  var root = objectTypes[typeof window] && window || this,\x0a      freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == \x22object\x22 && global;\x0a\x0a  if (freeGlobal && (freeGlobal[\x22global\x22] === freeGlobal || freeGlobal[\x22window\x22] === freeGlobal || freeGlobal[\x22self\x22] === freeGlobal)) {\x0a    root = freeGlobal;\x0a  }\x0a\x0a  // Public: Initializes JSON 3 using the given `context` object, attaching the\x0a  // `stringify` and `parse` functions to the specified `exports` object.\x0a  function runInContext(context, exports) {\x0a    context || (context = root[\x22Object\x22]());\x0a    exports || (exports = root[\x22Object\x22]());\x0a\x0a    // Native constructor aliases.\x0a    var Number = context[\x22Number\x22] || root[\x22Number\x22],\x0a        String = context[\x22String\x22] || root[\x22String\x22],\x0a        Object = context[\x22Object\x22] || root[\x22Object\x22],\x0a        Date = context[\x22Date\x22] || root[\x22Date\x22],\x0a        SyntaxError = context[\x22SyntaxError\x22] || root[\x22SyntaxError\x22],\x0a        TypeError = context[\x22TypeError\x22] || root[\x22TypeError\x22],\x0a        Math = context[\x22Math\x22] || root[\x22Math\x22],\x0a        nativeJSON = context[\x22JSON\x22] || root[\x22JSON\x22];\x0a\x0a    // Delegate to the native `stringify` and `parse` implementations.\x0a    if (typeof nativeJSON == \x22object\x22 && nativeJSON) {\x0a      exports.stringify = nativeJSON.stringify;\x0a      exports.parse = nativeJSON.parse;\x0a    }\x0a\x0a    // Convenience aliases.\x0a    var objectProto = Object.prototype,\x0a        getClass = objectProto.toString,\x0a        isProperty, forEach, undef;\x0a\x0a    // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\x0a    var isExtended = new Date(-3509827334573292);\x0a    try {\x0a      // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\x0a      // results for certain dates in Opera \x3e= 10.53.\x0a      isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\x0a        // Safari \x3c 2.0.2 stores the internal millisecond time value correctly,\x0a        // but clips the values returned by the date methods to the range of\x0a        // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\x0a        isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\x0a    } catch (exception) {}\x0a\x0a    // Internal: Determines whether the native `JSON.stringify` and `parse`\x0a    // implementations are spec-compliant. Based on work by Ken Snyder.\x0a    function has(name) {\x0a      if (has[name] !== undef) {\x0a        // Return cached feature test result.\x0a        return has[name];\x0a      }\x0a      var isSupported;\x0a      if (name == \x22bug-string-char-index\x22) {\x0a        // IE \x3c= 7 doesn\x27t support accessing string characters using square\x0a        // bracket notation. IE 8 only supports this for primitives.\x0a        isSupported = \x22a\x22[0] != \x22a\x22;\x0a      } else if (name == \x22json\x22) {\x0a        // Indicates whether both `JSON.stringify` and `JSON.parse` are\x0a        // supported.\x0a        isSupported = has(\x22json-stringify\x22) && has(\x22json-parse\x22);\x0a      } else {\x0a        var value, serialized = \x27{\x22a\x22:[1,true,false,null,\x22\x5c\x5cu0000\x5c\x5cb\x5c\x5cn\x5c\x5cf\x5c\x5cr\x5c\x5ct\x22]}\x27;\x0a        // Test `JSON.stringify`.\x0a        if (name == \x22json-stringify\x22) {\x0a          var stringify = exports.stringify, stringifySupported = typeof stringify == \x22function\x22 && isExtended;\x0a          if (stringifySupported) {\x0a            // A test function object with a custom `toJSON` method.\x0a            (value = function () {\x0a              return 1;\x0a            }).toJSON = value;\x0a            try {\x0a              stringifySupported =\x0a                // Firefox 3.1b1 and b2 serialize string, number, and boolean\x0a                // primitives as object literals.\x0a                stringify(0) === \x220\x22 &&\x0a                // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\x0a                // literals.\x0a                stringify(new Number()) === \x220\x22 &&\x0a                stringify(new String()) == \x27\x22\x22\x27 &&\x0a                // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\x0a                // does not define a canonical JSON representation (this applies to\x0a                // objects with `toJSON` properties as well, *unless* they are nested\x0a                // within an object or array).\x0a                stringify(getClass) === undef &&\x0a                // IE 8 serializes `undefined` as `\x22undefined\x22`. Safari \x3c= 5.1.7 and\x0a                // FF 3.1b3 pass this test.\x0a                stringify(undef) === undef &&\x0a                // Safari \x3c= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\x0a                // respectively, if the value is omitted entirely.\x0a                stringify() === undef &&\x0a                // FF 3.1b1, 2 throw an error if the given value is not a number,\x0a                // string, array, object, Boolean, or `null` literal. This applies to\x0a                // objects with custom `toJSON` methods as well, unless they are nested\x0a                // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\x0a                // methods entirely.\x0a                stringify(value) === \x221\x22 &&\x0a                stringify([value]) == \x22[1]\x22 &&\x0a                // Prototype \x3c= 1.6.1 serializes `[undefined]` as `\x22[]\x22` instead of\x0a                // `\x22[null]\x22`.\x0a                stringify([undef]) == \x22[null]\x22 &&\x0a                // YUI 3.0.0b1 fails to serialize `null` literals.\x0a                stringify(null) == \x22null\x22 &&\x0a                // FF 3.1b1, 2 halts serialization if an array contains a function:\x0a                // `[1, true, getClass, 1]` serializes as \x22[1,true,],\x22. FF 3.1b3\x0a                // elides non-JSON values from objects and arrays, unless they\x0a                // define custom `toJSON` methods.\x0a                stringify([undef, getClass, null]) == \x22[null,null,null]\x22 &&\x0a                // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\x0a                // where character escape codes are expected (e.g., `\x5cb` =\x3e `\x5cu0008`).\x0a                stringify({ \x22a\x22: [value, true, false, null, \x22\x5cx00\x5cb\x5cn\x5cf\x5cr\x5ct\x22] }) == serialized &&\x0a                // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\x0a                stringify(null, value) === \x221\x22 &&\x0a                stringify([1, 2], null, 1) == \x22[\x5cn 1,\x5cn 2\x5cn]\x22 &&\x0a                // JSON 2, Prototype \x3c= 1.7, and older WebKit builds incorrectly\x0a                // serialize extended years.\x0a                stringify(new Date(-8.64e15)) == \x27\x22-271821-04-20T00:00:00.000Z\x22\x27 &&\x0a                // The milliseconds are optional in ES 5, but required in 5.1.\x0a                stringify(new Date(8.64e15)) == \x27\x22+275760-09-13T00:00:00.000Z\x22\x27 &&\x0a                // Firefox \x3c= 11.0 incorrectly serializes years prior to 0 as negative\x0a                // four-digit years instead of six-digit years. Credits: @Yaffle.\x0a                stringify(new Date(-621987552e5)) == \x27\x22-000001-01-01T00:00:00.000Z\x22\x27 &&\x0a                // Safari \x3c= 5.1.5 and Opera \x3e= 10.53 incorrectly serialize millisecond\x0a                // values less than 1000. Credits: @Yaffle.\x0a                stringify(new Date(-1)) == \x27\x221969-12-31T23:59:59.999Z\x22\x27;\x0a            } catch (exception) {\x0a              stringifySupported = false;\x0a            }\x0a          }\x0a          isSupported = stringifySupported;\x0a        }\x0a        // Test `JSON.parse`.\x0a        if (name == \x22json-parse\x22) {\x0a          var parse = exports.parse;\x0a          if (typeof parse == \x22function\x22) {\x0a            try {\x0a              // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\x0a              // Conforming implementations should also coerce the initial argument to\x0a              // a string prior to parsing.\x0a              if (parse(\x220\x22) === 0 && !parse(false)) {\x0a                // Simple parsing test.\x0a                value = parse(serialized);\x0a                var parseSupported = value[\x22a\x22].length == 5 && value[\x22a\x22][0] === 1;\x0a                if (parseSupported) {\x0a                  try {\x0a                    // Safari \x3c= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\x0a                    parseSupported = !parse(\x27\x22\x5ct\x22\x27);\x0a                  } catch (exception) {}\x0a                  if (parseSupported) {\x0a                    try {\x0a                      // FF 4.0 and 4.0.1 allow leading `+` signs and leading\x0a                      // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\x0a                      // certain octal literals.\x0a                      parseSupported = parse(\x2201\x22) !== 1;\x0a                    } catch (exception) {}\x0a                  }\x0a                  if (parseSupported) {\x0a                    try {\x0a                      // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\x0a                      // points. These environments, along with FF 3.1b1 and 2,\x0a                      // also allow trailing commas in JSON objects and arrays.\x0a                      parseSupported = parse(\x221.\x22) !== 1;\x0a                    } catch (exception) {}\x0a                  }\x0a                }\x0a              }\x0a            } catch (exception) {\x0a              parseSupported = false;\x0a            }\x0a          }\x0a          isSupported = parseSupported;\x0a        }\x0a      }\x0a      return has[name] = !!isSupported;\x0a    }\x0a\x0a    if (!has(\x22json\x22)) {\x0a      // Common `[[Class]]` name aliases.\x0a      var functionClass = \x22[object Function]\x22,\x0a          dateClass = \x22[object Date]\x22,\x0a          numberClass = \x22[object Number]\x22,\x0a          stringClass = \x22[object String]\x22,\x0a          arrayClass = \x22[object Array]\x22,\x0a          booleanClass = \x22[object Boolean]\x22;\x0a\x0a      // Detect incomplete support for accessing string characters by index.\x0a      var charIndexBuggy = has(\x22bug-string-char-index\x22);\x0a\x0a      // Define additional utility methods if the `Date` methods are buggy.\x0a      if (!isExtended) {\x0a        var floor = Math.floor;\x0a        // A mapping between the months of the year and the number of days between\x0a        // January 1st and the first of the respective month.\x0a        var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\x0a        // Internal: Calculates the number of days between the Unix epoch and the\x0a        // first day of the given month.\x0a        var getDay = function (year, month) {\x0a          return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month \x3e 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\x0a        };\x0a      }\x0a\x0a      // Internal: Determines if a property is a direct property of the given\x0a      // object. Delegates to the native `Object#hasOwnProperty` method.\x0a      if (!(isProperty = objectProto.hasOwnProperty)) {\x0a        isProperty = function (property) {\x0a          var members = {}, constructor;\x0a          if ((members.__proto__ = null, members.__proto__ = {\x0a            // The *proto* property cannot be set multiple times in recent\x0a            // versions of Firefox and SeaMonkey.\x0a            \x22toString\x22: 1\x0a          }, members).toString != getClass) {\x0a            // Safari \x3c= 2.0.3 doesn\x27t implement `Object#hasOwnProperty`, but\x0a            // supports the mutable *proto* property.\x0a            isProperty = function (property) {\x0a              // Capture and break the object\x27s prototype chain (see section 8.6.2\x0a              // of the ES 5.1 spec). The parenthesized expression prevents an\x0a              // unsafe transformation by the Closure Compiler.\x0a              var original = this.__proto__, result = property in (this.__proto__ = null, this);\x0a              // Restore the original prototype chain.\x0a              this.__proto__ = original;\x0a              return result;\x0a            };\x0a          } else {\x0a            // Capture a reference to the top-level `Object` constructor.\x0a            constructor = members.constructor;\x0a            // Use the `constructor` property to simulate `Object#hasOwnProperty` in\x0a            // other environments.\x0a            isProperty = function (property) {\x0a              var parent = (this.constructor || constructor).prototype;\x0a              return property in this && !(property in parent && this[property] === parent[property]);\x0a            };\x0a          }\x0a          members = null;\x0a          return isProperty.call(this, property);\x0a        };\x0a      }\x0a\x0a      // Internal: Normalizes the `for...in` iteration algorithm across\x0a      // environments. Each enumerated key is yielded to a `callback` function.\x0a      forEach = function (object, callback) {\x0a        var size = 0, Properties, members, property;\x0a\x0a        // Tests for bugs in the current environment\x27s `for...in` algorithm. The\x0a        // `valueOf` property inherits the non-enumerable flag from\x0a        // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\x0a        (Properties = function () {\x0a          this.valueOf = 0;\x0a        }).prototype.valueOf = 0;\x0a\x0a        // Iterate over a new instance of the `Properties` class.\x0a        members = new Properties();\x0a        for (property in members) {\x0a          // Ignore all properties inherited from `Object.prototype`.\x0a          if (isProperty.call(members, property)) {\x0a            size++;\x0a          }\x0a        }\x0a        Properties = members = null;\x0a\x0a        // Normalize the iteration algorithm.\x0a        if (!size) {\x0a          // A list of non-enumerable properties inherited from `Object.prototype`.\x0a          members = [\x22valueOf\x22, \x22toString\x22, \x22toLocaleString\x22, \x22propertyIsEnumerable\x22, \x22isPrototypeOf\x22, \x22hasOwnProperty\x22, \x22constructor\x22];\x0a          // IE \x3c= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\x0a          // properties.\x0a          forEach = function (object, callback) {\x0a            var isFunction = getClass.call(object) == functionClass, property, length;\x0a            var hasProperty = !isFunction && typeof object.constructor != \x22function\x22 && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;\x0a            for (property in object) {\x0a              // Gecko \x3c= 1.0 enumerates the `prototype` property of functions under\x0a              // certain conditions; IE does not.\x0a              if (!(isFunction && property == \x22prototype\x22) && hasProperty.call(object, property)) {\x0a                callback(property);\x0a              }\x0a            }\x0a            // Manually invoke the callback for each non-enumerable property.\x0a            for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\x0a          };\x0a        } else if (size == 2) {\x0a          // Safari \x3c= 2.0.4 enumerates shadowed properties twice.\x0a          forEach = function (object, callback) {\x0a            // Create a set of iterated properties.\x0a            var members = {}, isFunction = getClass.call(object) == functionClass, property;\x0a            for (property in object) {\x0a              // Store each property name to prevent double enumeration. The\x0a              // `prototype` property of functions is not enumerated due to cross-\x0a              // environment inconsistencies.\x0a              if (!(isFunction && property == \x22prototype\x22) && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\x0a                callback(property);\x0a              }\x0a            }\x0a          };\x0a        } else {\x0a          // No bugs detected; use the standard `for...in` algorithm.\x0a          forEach = function (object, callback) {\x0a            var isFunction = getClass.call(object) == functionClass, property, isConstructor;\x0a            for (property in object) {\x0a              if (!(isFunction && property == \x22prototype\x22) && isProperty.call(object, property) && !(isConstructor = property === \x22constructor\x22)) {\x0a                callback(property);\x0a              }\x0a            }\x0a            // Manually invoke the callback for the `constructor` property due to\x0a            // cross-environment inconsistencies.\x0a            if (isConstructor || isProperty.call(object, (property = \x22constructor\x22))) {\x0a              callback(property);\x0a            }\x0a          };\x0a        }\x0a        return forEach(object, callback);\x0a      };\x0a\x0a      // Public: Serializes a JavaScript `value` as a JSON string. The optional\x0a      // `filter` argument may specify either a function that alters how object and\x0a      // array members are serialized, or an array of strings and numbers that\x0a      // indicates which properties should be serialized. The optional `width`\x0a      // argument may be either a string or number that specifies the indentation\x0a      // level of the output.\x0a      if (!has(\x22json-stringify\x22)) {\x0a        // Internal: A map of control characters and their escaped equivalents.\x0a        var Escapes = {\x0a          92: \x22\x5c\x5c\x5c\x5c\x22,\x0a          34: \x27\x5c\x5c\x22\x27,\x0a          8: \x22\x5c\x5cb\x22,\x0a          12: \x22\x5c\x5cf\x22,\x0a          10: \x22\x5c\x5cn\x22,\x0a          13: \x22\x5c\x5cr\x22,\x0a          9: \x22\x5c\x5ct\x22\x0a        };\x0a\x0a        // Internal: Converts `value` into a zero-padded string such that its\x0a        // length is at least equal to `width`. The `width` must be \x3c= 6.\x0a        var leadingZeroes = \x22000000\x22;\x0a        var toPaddedString = function (width, value) {\x0a          // The `|| 0` expression is necessary to work around a bug in\x0a          // Opera \x3c= 7.54u2 where `0 == -0`, but `String(-0) !== \x220\x22`.\x0a          return (leadingZeroes + (value || 0)).slice(-width);\x0a        };\x0a\x0a        // Internal: Double-quotes a string `value`, replacing all ASCII control\x0a        // characters (characters with code unit values between 0 and 31) with\x0a        // their escaped equivalents. This is an implementation of the\x0a        // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\x0a        var unicodePrefix = \x22\x5c\x5cu00\x22;\x0a        var quote = function (value) {\x0a          var result = \x27\x22\x27, index = 0, length = value.length, useCharIndex = !charIndexBuggy || length \x3e 10;\x0a          var symbols = useCharIndex && (charIndexBuggy ? value.split(\x22\x22) : value);\x0a          for (; index \x3c length; index++) {\x0a            var charCode = value.charCodeAt(index);\x0a            // If the character is a control character, append its Unicode or\x0a            // shorthand escape sequence; otherwise, append the character as-is.\x0a            switch (charCode) {\x0a              case 8: case 9: case 10: case 12: case 13: case 34: case 92:\x0a                result += Escapes[charCode];\x0a                break;\x0a              default:\x0a                if (charCode \x3c 32) {\x0a                  result += unicodePrefix + toPaddedString(2, charCode.toString(16));\x0a                  break;\x0a                }\x0a                result += useCharIndex ? symbols[index] : value.charAt(index);\x0a            }\x0a          }\x0a          return result + \x27\x22\x27;\x0a        };\x0a\x0a        // Internal: Recursively serializes an object. Implements the\x0a        // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\x0a        var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\x0a          var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\x0a          try {\x0a            // Necessary for host object support.\x0a            value = object[property];\x0a          } catch (exception) {}\x0a          if (typeof value == \x22object\x22 && value) {\x0a            className = getClass.call(value);\x0a            if (className == dateClass && !isProperty.call(value, \x22toJSON\x22)) {\x0a              if (value \x3e -1 / 0 && value \x3c 1 / 0) {\x0a                // Dates are serialized according to the `Date#toJSON` method\x0a                // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\x0a                // for the ISO 8601 date time string format.\x0a                if (getDay) {\x0a                  // Manually compute the year, month, date, hours, minutes,\x0a                  // seconds, and milliseconds if the `getUTC*` methods are\x0a                  // buggy. Adapted from @Yaffle\x27s `date-shim` project.\x0a                  date = floor(value / 864e5);\x0a                  for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) \x3c= date; year++);\x0a                  for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) \x3c= date; month++);\x0a                  date = 1 + date - getDay(year, month);\x0a                  // The `time` value specifies the time within the day (see ES\x0a                  // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\x0a                  // to compute `A modulo B`, as the `%` operator does not\x0a                  // correspond to the `modulo` operation for negative numbers.\x0a                  time = (value % 864e5 + 864e5) % 864e5;\x0a                  // The hours, minutes, seconds, and milliseconds are obtained by\x0a                  // decomposing the time within the day. See section 15.9.1.10.\x0a                  hours = floor(time / 36e5) % 24;\x0a                  minutes = floor(time / 6e4) % 60;\x0a                  seconds = floor(time / 1e3) % 60;\x0a                  milliseconds = time % 1e3;\x0a                } else {\x0a                  year = value.getUTCFullYear();\x0a                  month = value.getUTCMonth();\x0a                  date = value.getUTCDate();\x0a                  hours = value.getUTCHours();\x0a                  minutes = value.getUTCMinutes();\x0a                  seconds = value.getUTCSeconds();\x0a                  milliseconds = value.getUTCMilliseconds();\x0a                }\x0a                // Serialize extended years correctly.\x0a                value = (year \x3c= 0 || year \x3e= 1e4 ? (year \x3c 0 ? \x22-\x22 : \x22+\x22) + toPaddedString(6, year \x3c 0 ? -year : year) : toPaddedString(4, year)) +\x0a                  \x22-\x22 + toPaddedString(2, month + 1) + \x22-\x22 + toPaddedString(2, date) +\x0a                  // Months, dates, hours, minutes, and seconds should have two\x0a                  // digits; milliseconds should have three.\x0a                  \x22T\x22 + toPaddedString(2, hours) + \x22:\x22 + toPaddedString(2, minutes) + \x22:\x22 + toPaddedString(2, seconds) +\x0a                  // Milliseconds are optional in ES 5.0, but required in 5.1.\x0a                  \x22.\x22 + toPaddedString(3, milliseconds) + \x22Z\x22;\x0a              } else {\x0a                value = null;\x0a              }\x0a            } else if (typeof value.toJSON == \x22function\x22 && ((className != numberClass && className != stringClass && className != arrayClass) || isProperty.call(value, \x22toJSON\x22))) {\x0a              // Prototype \x3c= 1.6.1 adds non-standard `toJSON` methods to the\x0a              // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\x0a              // ignores all `toJSON` methods on these objects unless they are\x0a              // defined directly on an instance.\x0a              value = value.toJSON(property);\x0a            }\x0a          }\x0a          if (callback) {\x0a            // If a replacement function was provided, call it to obtain the value\x0a            // for serialization.\x0a            value = callback.call(object, property, value);\x0a          }\x0a          if (value === null) {\x0a            return \x22null\x22;\x0a          }\x0a          className = getClass.call(value);\x0a          if (className == booleanClass) {\x0a            // Booleans are represented literally.\x0a            return \x22\x22 + value;\x0a          } else if (className == numberClass) {\x0a            // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\x0a            // `\x22null\x22`.\x0a            return value \x3e -1 / 0 && value \x3c 1 / 0 ? \x22\x22 + value : \x22null\x22;\x0a          } else if (className == stringClass) {\x0a            // Strings are double-quoted and escaped.\x0a            return quote(\x22\x22 + value);\x0a          }\x0a          // Recursively serialize objects and arrays.\x0a          if (typeof value == \x22object\x22) {\x0a            // Check for cyclic structures. This is a linear search; performance\x0a            // is inversely proportional to the number of unique nested objects.\x0a            for (length = stack.length; length--;) {\x0a              if (stack[length] === value) {\x0a                // Cyclic structures cannot be serialized by `JSON.stringify`.\x0a                throw TypeError();\x0a              }\x0a            }\x0a            // Add the object to the stack of traversed objects.\x0a            stack.push(value);\x0a            results = [];\x0a            // Save the current indentation level and indent one additional level.\x0a            prefix = indentation;\x0a            indentation += whitespace;\x0a            if (className == arrayClass) {\x0a              // Recursively serialize array elements.\x0a              for (index = 0, length = value.length; index \x3c length; index++) {\x0a                element = serialize(index, value, callback, properties, whitespace, indentation, stack);\x0a                results.push(element === undef ? \x22null\x22 : element);\x0a              }\x0a              result = results.length ? (whitespace ? \x22[\x5cn\x22 + indentation + results.join(\x22,\x5cn\x22 + indentation) + \x22\x5cn\x22 + prefix + \x22]\x22 : (\x22[\x22 + results.join(\x22,\x22) + \x22]\x22)) : \x22[]\x22;\x0a            } else {\x0a              // Recursively serialize object members. Members are selected from\x0a              // either a user-specified list of property names, or the object\x0a              // itself.\x0a              forEach(properties || value, function (property) {\x0a                var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\x0a                if (element !== undef) {\x0a                  // According to ES 5.1 section 15.12.3: \x22If `gap` {whitespace}\x0a                  // is not the empty string, let `member` {quote(property) + \x22:\x22}\x0a                  // be the concatenation of `member` and the `space` character.\x22\x0a                  // The \x22`space` character\x22 refers to the literal space\x0a                  // character, not the `space` {width} argument provided to\x0a                  // `JSON.stringify`.\x0a                  results.push(quote(property) + \x22:\x22 + (whitespace ? \x22 \x22 : \x22\x22) + element);\x0a                }\x0a              });\x0a              result = results.length ? (whitespace ? \x22{\x5cn\x22 + indentation + results.join(\x22,\x5cn\x22 + indentation) + \x22\x5cn\x22 + prefix + \x22}\x22 : (\x22{\x22 + results.join(\x22,\x22) + \x22}\x22)) : \x22{}\x22;\x0a            }\x0a            // Remove the object from the traversed object stack.\x0a            stack.pop();\x0a            return result;\x0a          }\x0a        };\x0a\x0a        // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\x0a        exports.stringify = function (source, filter, width) {\x0a          var whitespace, callback, properties, className;\x0a          if (objectTypes[typeof filter] && filter) {\x0a            if ((className = getClass.call(filter)) == functionClass) {\x0a              callback = filter;\x0a            } else if (className == arrayClass) {\x0a              // Convert the property names array into a makeshift set.\x0a              properties = {};\x0a              for (var index = 0, length = filter.length, value; index \x3c length; value = filter[index++], ((className = getClass.call(value)), className == stringClass || className == numberClass) && (properties[value] = 1));\x0a            }\x0a          }\x0a          if (width) {\x0a            if ((className = getClass.call(width)) == numberClass) {\x0a              // Convert the `width` to an integer and create a string containing\x0a              // `width` number of space characters.\x0a              if ((width -= width % 1) \x3e 0) {\x0a                for (whitespace = \x22\x22, width \x3e 10 && (width = 10); whitespace.length \x3c width; whitespace += \x22 \x22);\x0a              }\x0a            } else if (className == stringClass) {\x0a              whitespace = width.length \x3c= 10 ? width : width.slice(0, 10);\x0a            }\x0a          }\x0a          // Opera \x3c= 7.54u2 discards the values associated with empty string keys\x0a          // (`\x22\x22`) only if they are used directly within an object member list\x0a          // (e.g., `!(\x22\x22 in { \x22\x22: 1})`).\x0a          return serialize(\x22\x22, (value = {}, value[\x22\x22] = source, value), callback, properties, whitespace, \x22\x22, []);\x0a        };\x0a      }\x0a\x0a      // Public: Parses a JSON source string.\x0a      if (!has(\x22json-parse\x22)) {\x0a        var fromCharCode = String.fromCharCode;\x0a\x0a        // Internal: A map of escaped control characters and their unescaped\x0a        // equivalents.\x0a        var Unescapes = {\x0a          92: \x22\x5c\x5c\x22,\x0a          34: \x27\x22\x27,\x0a          47: \x22/\x22,\x0a          98: \x22\x5cb\x22,\x0a          116: \x22\x5ct\x22,\x0a          110: \x22\x5cn\x22,\x0a          102: \x22\x5cf\x22,\x0a          114: \x22\x5cr\x22\x0a        };\x0a\x0a        // Internal: Stores the parser state.\x0a        var Index, Source;\x0a\x0a        // Internal: Resets the parser state and throws a `SyntaxError`.\x0a        var abort = function () {\x0a          Index = Source = null;\x0a          throw SyntaxError();\x0a        };\x0a\x0a        // Internal: Returns the next token, or `\x22$\x22` if the parser has reached\x0a        // the end of the source string. A token may be a string, number, `null`\x0a        // literal, or Boolean literal.\x0a        var lex = function () {\x0a          var source = Source, length = source.length, value, begin, position, isSigned, charCode;\x0a          while (Index \x3c length) {\x0a            charCode = source.charCodeAt(Index);\x0a            switch (charCode) {\x0a              case 9: case 10: case 13: case 32:\x0a                // Skip whitespace tokens, including tabs, carriage returns, line\x0a                // feeds, and space characters.\x0a                Index++;\x0a                break;\x0a              case 123: case 125: case 91: case 93: case 58: case 44:\x0a                // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\x0a                // the current position.\x0a                value = charIndexBuggy ? source.charAt(Index) : source[Index];\x0a                Index++;\x0a                return value;\x0a              case 34:\x0a                // `\x22` delimits a JSON string; advance to the next character and\x0a                // begin parsing the string. String tokens are prefixed with the\x0a                // sentinel `@` character to distinguish them from punctuators and\x0a                // end-of-string tokens.\x0a                for (value = \x22@\x22, Index++; Index \x3c length;) {\x0a                  charCode = source.charCodeAt(Index);\x0a                  if (charCode \x3c 32) {\x0a                    // Unescaped ASCII control characters (those with a code unit\x0a                    // less than the space character) are not permitted.\x0a                    abort();\x0a                  } else if (charCode == 92) {\x0a                    // A reverse solidus (`\x5c`) marks the beginning of an escaped\x0a                    // control character (including `\x22`, `\x5c`, and `/`) or Unicode\x0a                    // escape sequence.\x0a                    charCode = source.charCodeAt(++Index);\x0a                    switch (charCode) {\x0a                      case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114:\x0a                        // Revive escaped control characters.\x0a                        value += Unescapes[charCode];\x0a                        Index++;\x0a                        break;\x0a                      case 117:\x0a                        // `\x5cu` marks the beginning of a Unicode escape sequence.\x0a                        // Advance to the first character and validate the\x0a                        // four-digit code point.\x0a                        begin = ++Index;\x0a                        for (position = Index + 4; Index \x3c position; Index++) {\x0a                          charCode = source.charCodeAt(Index);\x0a                          // A valid sequence comprises four hexdigits (case-\x0a                          // insensitive) that form a single hexadecimal value.\x0a                          if (!(charCode \x3e= 48 && charCode \x3c= 57 || charCode \x3e= 97 && charCode \x3c= 102 || charCode \x3e= 65 && charCode \x3c= 70)) {\x0a                            // Invalid Unicode escape sequence.\x0a                            abort();\x0a                          }\x0a                        }\x0a                        // Revive the escaped character.\x0a                        value += fromCharCode(\x220x\x22 + source.slice(begin, Index));\x0a                        break;\x0a                      default:\x0a                        // Invalid escape sequence.\x0a                        abort();\x0a                    }\x0a                  } else {\x0a                    if (charCode == 34) {\x0a                      // An unescaped double-quote character marks the end of the\x0a                      // string.\x0a                      break;\x0a                    }\x0a                    charCode = source.charCodeAt(Index);\x0a                    begin = Index;\x0a                    // Optimize for the common case where a string is valid.\x0a                    while (charCode \x3e= 32 && charCode != 92 && charCode != 34) {\x0a                      charCode = source.charCodeAt(++Index);\x0a                    }\x0a                    // Append the string as-is.\x0a                    value += source.slice(begin, Index);\x0a                  }\x0a                }\x0a                if (source.charCodeAt(Index) == 34) {\x0a                  // Advance to the next character and return the revived string.\x0a                  Index++;\x0a                  return value;\x0a                }\x0a                // Unterminated string.\x0a                abort();\x0a              default:\x0a                // Parse numbers and literals.\x0a                begin = Index;\x0a                // Advance past the negative sign, if one is specified.\x0a                if (charCode == 45) {\x0a                  isSigned = true;\x0a                  charCode = source.charCodeAt(++Index);\x0a                }\x0a                // Parse an integer or floating-point value.\x0a                if (charCode \x3e= 48 && charCode \x3c= 57) {\x0a                  // Leading zeroes are interpreted as octal literals.\x0a                  if (charCode == 48 && ((charCode = source.charCodeAt(Index + 1)), charCode \x3e= 48 && charCode \x3c= 57)) {\x0a                    // Illegal octal literal.\x0a                    abort();\x0a                  }\x0a                  isSigned = false;\x0a                  // Parse the integer component.\x0a                  for (; Index \x3c length && ((charCode = source.charCodeAt(Index)), charCode \x3e= 48 && charCode \x3c= 57); Index++);\x0a                  // Floats cannot contain a leading decimal point; however, this\x0a                  // case is already accounted for by the parser.\x0a                  if (source.charCodeAt(Index) == 46) {\x0a                    position = ++Index;\x0a                    // Parse the decimal component.\x0a                    for (; position \x3c length && ((charCode = source.charCodeAt(position)), charCode \x3e= 48 && charCode \x3c= 57); position++);\x0a                    if (position == Index) {\x0a                      // Illegal trailing decimal.\x0a                      abort();\x0a                    }\x0a                    Index = position;\x0a                  }\x0a                  // Parse exponents. The `e` denoting the exponent is\x0a                  // case-insensitive.\x0a                  charCode = source.charCodeAt(Index);\x0a                  if (charCode == 101 || charCode == 69) {\x0a                    charCode = source.charCodeAt(++Index);\x0a                    // Skip past the sign following the exponent, if one is\x0a                    // specified.\x0a                    if (charCode == 43 || charCode == 45) {\x0a                      Index++;\x0a                    }\x0a                    // Parse the exponential component.\x0a                    for (position = Index; position \x3c length && ((charCode = source.charCodeAt(position)), charCode \x3e= 48 && charCode \x3c= 57); position++);\x0a                    if (position == Index) {\x0a                      // Illegal empty exponent.\x0a                      abort();\x0a                    }\x0a                    Index = position;\x0a                  }\x0a                  // Coerce the parsed value to a JavaScript number.\x0a                  return +source.slice(begin, Index);\x0a                }\x0a                // A negative sign may only precede numbers.\x0a                if (isSigned) {\x0a                  abort();\x0a                }\x0a                // `true`, `false`, and `null` literals.\x0a                if (source.slice(Index, Index + 4) == \x22true\x22) {\x0a                  Index += 4;\x0a                  return true;\x0a                } else if (source.slice(Index, Index + 5) == \x22false\x22) {\x0a                  Index += 5;\x0a                  return false;\x0a                } else if (source.slice(Index, Index + 4) == \x22null\x22) {\x0a                  Index += 4;\x0a                  return null;\x0a                }\x0a                // Unrecognized token.\x0a                abort();\x0a            }\x0a          }\x0a          // Return the sentinel `$` character if the parser has reached the end\x0a          // of the source string.\x0a          return \x22$\x22;\x0a        };\x0a\x0a        // Internal: Parses a JSON `value` token.\x0a        var get = function (value) {\x0a          var results, hasMembers;\x0a          if (value == \x22$\x22) {\x0a            // Unexpected end of input.\x0a            abort();\x0a          }\x0a          if (typeof value == \x22string\x22) {\x0a            if ((charIndexBuggy ? value.charAt(0) : value[0]) == \x22@\x22) {\x0a              // Remove the sentinel `@` character.\x0a              return value.slice(1);\x0a            }\x0a            // Parse object and array literals.\x0a            if (value == \x22[\x22) {\x0a              // Parses a JSON array, returning a new JavaScript array.\x0a              results = [];\x0a              for (;; hasMembers || (hasMembers = true)) {\x0a                value = lex();\x0a                // A closing square bracket marks the end of the array literal.\x0a                if (value == \x22]\x22) {\x0a                  break;\x0a                }\x0a                // If the array literal contains elements, the current token\x0a                // should be a comma separating the previous element from the\x0a                // next.\x0a                if (hasMembers) {\x0a                  if (value == \x22,\x22) {\x0a                    value = lex();\x0a                    if (value == \x22]\x22) {\x0a                      // Unexpected trailing `,` in array literal.\x0a                      abort();\x0a                    }\x0a                  } else {\x0a                    // A `,` must separate each array element.\x0a                    abort();\x0a                  }\x0a                }\x0a                // Elisions and leading commas are not permitted.\x0a                if (value == \x22,\x22) {\x0a                  abort();\x0a                }\x0a                results.push(get(value));\x0a              }\x0a              return results;\x0a            } else if (value == \x22{\x22) {\x0a              // Parses a JSON object, returning a new JavaScript object.\x0a              results = {};\x0a              for (;; hasMembers || (hasMembers = true)) {\x0a                value = lex();\x0a                // A closing curly brace marks the end of the object literal.\x0a                if (value == \x22}\x22) {\x0a                  break;\x0a                }\x0a                // If the object literal contains members, the current token\x0a                // should be a comma separator.\x0a                if (hasMembers) {\x0a                  if (value == \x22,\x22) {\x0a                    value = lex();\x0a                    if (value == \x22}\x22) {\x0a                      // Unexpected trailing `,` in object literal.\x0a                      abort();\x0a                    }\x0a                  } else {\x0a                    // A `,` must separate each object member.\x0a                    abort();\x0a                  }\x0a                }\x0a                // Leading commas are not permitted, object property names must be\x0a                // double-quoted strings, and a `:` must separate each property\x0a                // name and value.\x0a                if (value == \x22,\x22 || typeof value != \x22string\x22 || (charIndexBuggy ? value.charAt(0) : value[0]) != \x22@\x22 || lex() != \x22:\x22) {\x0a                  abort();\x0a                }\x0a                results[value.slice(1)] = get(lex());\x0a              }\x0a              return results;\x0a            }\x0a            // Unexpected token encountered.\x0a            abort();\x0a          }\x0a          return value;\x0a        };\x0a\x0a        // Internal: Updates a traversed object member.\x0a        var update = function (source, property, callback) {\x0a          var element = walk(source, property, callback);\x0a          if (element === undef) {\x0a            delete source[property];\x0a          } else {\x0a            source[property] = element;\x0a          }\x0a        };\x0a\x0a        // Internal: Recursively traverses a parsed JSON object, invoking the\x0a        // `callback` function for each value. This is an implementation of the\x0a        // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\x0a        var walk = function (source, property, callback) {\x0a          var value = source[property], length;\x0a          if (typeof value == \x22object\x22 && value) {\x0a            // `forEach` can\x27t be used to traverse an array in Opera \x3c= 8.54\x0a            // because its `Object#hasOwnProperty` implementation returns `false`\x0a            // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\x220\x22)`).\x0a            if (getClass.call(value) == arrayClass) {\x0a              for (length = value.length; length--;) {\x0a                update(value, length, callback);\x0a              }\x0a            } else {\x0a              forEach(value, function (property) {\x0a                update(value, property, callback);\x0a              });\x0a            }\x0a          }\x0a          return callback.call(source, property, value);\x0a        };\x0a\x0a        // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\x0a        exports.parse = function (source, callback) {\x0a          var result, value;\x0a          Index = 0;\x0a          Source = \x22\x22 + source;\x0a          result = get(lex());\x0a          // If a JSON string contains multiple tokens, it is invalid.\x0a          if (lex() != \x22$\x22) {\x0a            abort();\x0a          }\x0a          // Reset the parser state.\x0a          Index = Source = null;\x0a          return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\x22\x22] = result, value), \x22\x22, callback) : result;\x0a        };\x0a      }\x0a    }\x0a\x0a    exports[\x22runInContext\x22] = runInContext;\x0a    return exports;\x0a  }\x0a\x0a  if (freeExports && !isLoader) {\x0a    // Export for CommonJS environments.\x0a    runInContext(root, freeExports);\x0a  } else {\x0a    // Export for web browsers and JavaScript engines.\x0a    var nativeJSON = root.JSON,\x0a        previousJSON = root[\x22JSON3\x22],\x0a        isRestored = false;\x0a\x0a    var JSON3 = runInContext(root, (root[\x22JSON3\x22] = {\x0a      // Public: Restores the original value of the global `JSON` object and\x0a      // returns a reference to the `JSON3` object.\x0a      \x22noConflict\x22: function () {\x0a        if (!isRestored) {\x0a          isRestored = true;\x0a          root.JSON = nativeJSON;\x0a          root[\x22JSON3\x22] = previousJSON;\x0a          nativeJSON = previousJSON = null;\x0a        }\x0a        return JSON3;\x0a      }\x0a    }));\x0a\x0a    root.JSON = {\x0a      \x22parse\x22: JSON3.parse,\x0a      \x22stringify\x22: JSON3.stringify\x0a    };\x0a  }\x0a\x0a  // Export for asynchronous module loaders.\x0a  if (isLoader) {\x0a    !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\x0a      return JSON3;\x0a    }.call(exports, __webpack_require__, exports, module),\x0a\x09\x09\x09\x09__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\x0a  }\x0a}).call(this);\x0a\x0a/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\x22../../../../webpack/buildin/module.js\x22)(module), __webpack_require__(\x22../../../../webpack/buildin/global.js\x22)))\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../loglevel/lib/loglevel.js\x22:\x0a/***/ (function(module, exports, __webpack_require__) {\x0a\x0avar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\x0a* loglevel - https://github.com/pimterry/loglevel\x0a*\x0a* Copyright (c) 2013 Tim Perry\x0a* Licensed under the MIT license.\x0a*/\x0a(function (root, definition) {\x0a    \x22use strict\x22;\x0a    if (true) {\x0a        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition),\x0a\x09\x09\x09\x09__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \x27function\x27 ?\x0a\x09\x09\x09\x09(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\x0a\x09\x09\x09\x09__WEBPACK_AMD_DEFINE_FACTORY__),\x0a\x09\x09\x09\x09__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\x0a    } else if (typeof module === \x27object\x27 && module.exports) {\x0a        module.exports = definition();\x0a    } else {\x0a        root.log = definition();\x0a    }\x0a}(this, function () {\x0a    \x22use strict\x22;\x0a\x0a    // Slightly dubious tricks to cut down minimized file size\x0a    var noop = function() {};\x0a    var undefinedType = \x22undefined\x22;\x0a\x0a    var logMethods = [\x0a        \x22trace\x22,\x0a        \x22debug\x22,\x0a        \x22info\x22,\x0a        \x22warn\x22,\x0a        \x22error\x22\x0a    ];\x0a\x0a    // Cross-browser bind equivalent that works at least back to IE6\x0a    function bindMethod(obj, methodName) {\x0a        var method = obj[methodName];\x0a        if (typeof method.bind === \x27function\x27) {\x0a            return method.bind(obj);\x0a        } else {\x0a            try {\x0a                return Function.prototype.bind.call(method, obj);\x0a            } catch (e) {\x0a                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\x0a                return function() {\x0a                    return Function.prototype.apply.apply(method, [obj, arguments]);\x0a                };\x0a            }\x0a        }\x0a    }\x0a\x0a    // Build the best logging method possible for this env\x0a    // Wherever possible we want to bind, not wrap, to preserve stack traces\x0a    function realMethod(methodName) {\x0a        if (methodName === \x27debug\x27) {\x0a            methodName = \x27log\x27;\x0a        }\x0a\x0a        if (typeof console === undefinedType) {\x0a            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\x0a        } else if (console[methodName] !== undefined) {\x0a            return bindMethod(console, methodName);\x0a        } else if (console.log !== undefined) {\x0a            return bindMethod(console, \x27log\x27);\x0a        } else {\x0a            return noop;\x0a        }\x0a    }\x0a\x0a    // These private functions always need `this` to be set properly\x0a\x0a    function replaceLoggingMethods(level, loggerName) {\x0a        /*jshint validthis:true */\x0a        for (var i = 0; i \x3c logMethods.length; i++) {\x0a            var methodName = logMethods[i];\x0a            this[methodName] = (i \x3c level) ?\x0a                noop :\x0a                this.methodFactory(methodName, level, loggerName);\x0a        }\x0a\x0a        // Define log.log as an alias for log.debug\x0a        this.log = this.debug;\x0a    }\x0a\x0a    // In old IE versions, the console isn\x27t present until you first open it.\x0a    // We build realMethod() replacements here that regenerate logging methods\x0a    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\x0a        return function () {\x0a            if (typeof console !== undefinedType) {\x0a                replaceLoggingMethods.call(this, level, loggerName);\x0a                this[methodName].apply(this, arguments);\x0a            }\x0a        };\x0a    }\x0a\x0a    // By default, we use closely bound real methods wherever possible, and\x0a    // otherwise we wait for a console to appear, and then try again.\x0a    function defaultMethodFactory(methodName, level, loggerName) {\x0a        /*jshint validthis:true */\x0a        return realMethod(methodName) ||\x0a               enableLoggingWhenConsoleArrives.apply(this, arguments);\x0a    }\x0a\x0a    function Logger(name, defaultLevel, factory) {\x0a      var self = this;\x0a      var currentLevel;\x0a      var storageKey = \x22loglevel\x22;\x0a      if (name) {\x0a        storageKey += \x22:\x22 + name;\x0a      }\x0a\x0a      function persistLevelIfPossible(levelNum) {\x0a          var levelName = (logMethods[levelNum] || \x27silent\x27).toUpperCase();\x0a\x0a          if (typeof window === undefinedType) return;\x0a\x0a          // Use localStorage if available\x0a          try {\x0a              window.localStorage[storageKey] = levelName;\x0a              return;\x0a          } catch (ignore) {}\x0a\x0a          // Use session cookie as fallback\x0a          try {\x0a              window.document.cookie =\x0a                encodeURIComponent(storageKey) + \x22=\x22 + levelName + \x22;\x22;\x0a          } catch (ignore) {}\x0a      }\x0a\x0a      function getPersistedLevel() {\x0a          var storedLevel;\x0a\x0a          if (typeof window === undefinedType) return;\x0a\x0a          try {\x0a              storedLevel = window.localStorage[storageKey];\x0a          } catch (ignore) {}\x0a\x0a          // Fallback to cookies if local storage gives us nothing\x0a          if (typeof storedLevel === undefinedType) {\x0a              try {\x0a                  var cookie = window.document.cookie;\x0a                  var location = cookie.indexOf(\x0a                      encodeURIComponent(storageKey) + \x22=\x22);\x0a                  if (location !== -1) {\x0a                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\x0a                  }\x0a              } catch (ignore) {}\x0a          }\x0a\x0a          // If the stored level is not valid, treat it as if nothing was stored.\x0a          if (self.levels[storedLevel] === undefined) {\x0a              storedLevel = undefined;\x0a          }\x0a\x0a          return storedLevel;\x0a      }\x0a\x0a      /*\x0a       *\x0a       * Public logger API - see https://github.com/pimterry/loglevel for details\x0a       *\x0a       */\x0a\x0a      self.name = name;\x0a\x0a      self.levels = { \x22TRACE\x22: 0, \x22DEBUG\x22: 1, \x22INFO\x22: 2, \x22WARN\x22: 3,\x0a          \x22ERROR\x22: 4, \x22SILENT\x22: 5};\x0a\x0a      self.methodFactory = factory || defaultMethodFactory;\x0a\x0a      self.getLevel = function () {\x0a          return currentLevel;\x0a      };\x0a\x0a      self.setLevel = function (level, persist) {\x0a          if (typeof level === \x22string\x22 && self.levels[level.toUpperCase()] !== undefined) {\x0a              level = self.levels[level.toUpperCase()];\x0a          }\x0a          if (typeof level === \x22number\x22 && level \x3e= 0 && level \x3c= self.levels.SILENT) {\x0a              currentLevel = level;\x0a              if (persist !== false) {  // defaults to true\x0a                  persistLevelIfPossible(level);\x0a              }\x0a              replaceLoggingMethods.call(self, level, name);\x0a              if (typeof console === undefinedType && level \x3c self.levels.SILENT) {\x0a                  return \x22No console available for logging\x22;\x0a              }\x0a          } else {\x0a              throw \x22log.setLevel() called with invalid level: \x22 + level;\x0a          }\x0a      };\x0a\x0a      self.setDefaultLevel = function (level) {\x0a          if (!getPersistedLevel()) {\x0a              self.setLevel(level, false);\x0a          }\x0a      };\x0a\x0a      self.enableAll = function(persist) {\x0a          self.setLevel(self.levels.TRACE, persist);\x0a      };\x0a\x0a      self.disableAll = function(persist) {\x0a          self.setLevel(self.levels.SILENT, persist);\x0a      };\x0a\x0a      // Initialize with the right level\x0a      var initialLevel = getPersistedLevel();\x0a      if (initialLevel == null) {\x0a          initialLevel = defaultLevel == null ? \x22WARN\x22 : defaultLevel;\x0a      }\x0a      self.setLevel(initialLevel, false);\x0a    }\x0a\x0a    /*\x0a     *\x0a     * Top-level API\x0a     *\x0a     */\x0a\x0a    var defaultLogger = new Logger();\x0a\x0a    var _loggersByName = {};\x0a    defaultLogger.getLogger = function getLogger(name) {\x0a        if (typeof name !== \x22string\x22 || name === \x22\x22) {\x0a          throw new TypeError(\x22You must supply a name when creating a logger.\x22);\x0a        }\x0a\x0a        var logger = _loggersByName[name];\x0a        if (!logger) {\x0a          logger = _loggersByName[name] = new Logger(\x0a            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\x0a        }\x0a        return logger;\x0a    };\x0a\x0a    // Grab the current global log variable in case of overwrite\x0a    var _log = (typeof window !== undefinedType) ? window.log : undefined;\x0a    defaultLogger.noConflict = function() {\x0a        if (typeof window !== undefinedType &&\x0a               window.log === defaultLogger) {\x0a            window.log = _log;\x0a        }\x0a\x0a        return defaultLogger;\x0a    };\x0a\x0a    defaultLogger.getLoggers = function getLoggers() {\x0a        return _loggersByName;\x0a    };\x0a\x0a    return defaultLogger;\x0a}));\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../ms/index.js\x22:\x0a/***/ (function(module, exports) {\x0a\x0a/**\x0a * Helpers.\x0a */\x0a\x0avar s = 1000;\x0avar m = s * 60;\x0avar h = m * 60;\x0avar d = h * 24;\x0avar y = d * 365.25;\x0a\x0a/**\x0a * Parse or format the given `val`.\x0a *\x0a * Options:\x0a *\x0a *  - `long` verbose formatting [false]\x0a *\x0a * @param {String|Number} val\x0a * @param {Object} [options]\x0a * @throws {Error} throw an error if val is not a non-empty string or a number\x0a * @return {String|Number}\x0a * @api public\x0a */\x0a\x0amodule.exports = function(val, options) {\x0a  options = options || {};\x0a  var type = typeof val;\x0a  if (type === \x27string\x27 && val.length \x3e 0) {\x0a    return parse(val);\x0a  } else if (type === \x27number\x27 && isNaN(val) === false) {\x0a    return options.long ? fmtLong(val) : fmtShort(val);\x0a  }\x0a  throw new Error(\x0a    \x27val is not a non-empty string or a valid number. val=\x27 +\x0a      JSON.stringify(val)\x0a  );\x0a};\x0a\x0a/**\x0a * Parse the given `str` and return milliseconds.\x0a *\x0a * @param {String} str\x0a * @return {Number}\x0a * @api private\x0a */\x0a\x0afunction parse(str) {\x0a  str = String(str);\x0a  if (str.length \x3e 100) {\x0a    return;\x0a  }\x0a  var match = /^((?:\x5cd+)?\x5c.?\x5cd+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\x0a    str\x0a  );\x0a  if (!match) {\x0a    return;\x0a  }\x0a  var n = parseFloat(match[1]);\x0a  var type = (match[2] || \x27ms\x27).toLowerCase();\x0a  switch (type) {\x0a    case \x27years\x27:\x0a    case \x27year\x27:\x0a    case \x27yrs\x27:\x0a    case \x27yr\x27:\x0a    case \x27y\x27:\x0a      return n * y;\x0a    case \x27days\x27:\x0a    case \x27day\x27:\x0a    case \x27d\x27:\x0a      return n * d;\x0a    case \x27hours\x27:\x0a    case \x27hour\x27:\x0a    case \x27hrs\x27:\x0a    case \x27hr\x27:\x0a    case \x27h\x27:\x0a      return n * h;\x0a    case \x27minutes\x27:\x0a    case \x27minute\x27:\x0a    case \x27mins\x27:\x0a    case \x27min\x27:\x0a    case \x27m\x27:\x0a      return n * m;\x0a    case \x27seconds\x27:\x0a    case \x27second\x27:\x0a    case \x27secs\x27:\x0a    case \x27sec\x27:\x0a    case \x27s\x27:\x0a      return n * s;\x0a    case \x27milliseconds\x27:\x0a    case \x27millisecond\x27:\x0a    case \x27msecs\x27:\x0a    case \x27msec\x27:\x0a    case \x27ms\x27:\x0a      return n;\x0a    default:\x0a      return undefined;\x0a  }\x0a}\x0a\x0a/**\x0a * Short format for `ms`.\x0a *\x0a * @param {Number} ms\x0a * @return {String}\x0a * @api private\x0a */\x0a\x0afunction fmtShort(ms) {\x0a  if (ms \x3e= d) {\x0a    return Math.round(ms / d) + \x27d\x27;\x0a  }\x0a  if (ms \x3e= h) {\x0a    return Math.round(ms / h) + \x27h\x27;\x0a  }\x0a  if (ms \x3e= m) {\x0a    return Math.round(ms / m) + \x27m\x27;\x0a  }\x0a  if (ms \x3e= s) {\x0a    return Math.round(ms / s) + \x27s\x27;\x0a  }\x0a  return ms + \x27ms\x27;\x0a}\x0a\x0a/**\x0a * Long format for `ms`.\x0a *\x0a * @param {Number} ms\x0a * @return {String}\x0a * @api private\x0a */\x0a\x0afunction fmtLong(ms) {\x0a  return plural(ms, d, \x27day\x27) ||\x0a    plural(ms, h, \x27hour\x27) ||\x0a    plural(ms, m, \x27minute\x27) ||\x0a    plural(ms, s, \x27second\x27) ||\x0a    ms + \x27 ms\x27;\x0a}\x0a\x0a/**\x0a * Pluralization helper.\x0a */\x0a\x0afunction plural(ms, n, name) {\x0a  if (ms \x3c n) {\x0a    return;\x0a  }\x0a  if (ms \x3c n * 1.5) {\x0a    return Math.floor(ms / n) + \x27 \x27 + name;\x0a  }\x0a  return Math.ceil(ms / n) + \x27 \x27 + name + \x27s\x27;\x0a}\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../process/browser.js\x22:\x0a/***/ (function(module, exports) {\x0a\x0a// shim for using process in browser\x0avar process = module.exports = {};\x0a\x0a// cached from whatever global is present so that test runners that stub it\x0a// don\x27t break things.  But we need to wrap it in a try catch in case it is\x0a// wrapped in strict mode code which doesn\x27t define any globals.  It\x27s inside a\x0a// function because try/catches deoptimize in certain engines.\x0a\x0avar cachedSetTimeout;\x0avar cachedClearTimeout;\x0a\x0afunction defaultSetTimout() {\x0a    throw new Error(\x27setTimeout has not been defined\x27);\x0a}\x0afunction defaultClearTimeout () {\x0a    throw new Error(\x27clearTimeout has not been defined\x27);\x0a}\x0a(function () {\x0a    try {\x0a        if (typeof setTimeout === \x27function\x27) {\x0a            cachedSetTimeout = setTimeout;\x0a        } else {\x0a            cachedSetTimeout = defaultSetTimout;\x0a        }\x0a    } catch (e) {\x0a        cachedSetTimeout = defaultSetTimout;\x0a    }\x0a    try {\x0a        if (typeof clearTimeout === \x27function\x27) {\x0a            cachedClearTimeout = clearTimeout;\x0a        } else {\x0a            cachedClearTimeout = defaultClearTimeout;\x0a        }\x0a    } catch (e) {\x0a        cachedClearTimeout = defaultClearTimeout;\x0a    }\x0a} ())\x0afunction runTimeout(fun) {\x0a    if (cachedSetTimeout === setTimeout) {\x0a        //normal enviroments in sane situations\x0a        return setTimeout(fun, 0);\x0a    }\x0a    // if setTimeout wasn\x27t available but was latter defined\x0a    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\x0a        cachedSetTimeout = setTimeout;\x0a        return setTimeout(fun, 0);\x0a    }\x0a    try {\x0a        // when when somebody has screwed with setTimeout but no I.E. maddness\x0a        return cachedSetTimeout(fun, 0);\x0a    } catch(e){\x0a        try {\x0a            // When we are in I.E. but the script has been evaled so I.E. doesn\x27t trust the global object when called normally\x0a            return cachedSetTimeout.call(null, fun, 0);\x0a        } catch(e){\x0a            // same as above but when it\x27s a version of I.E. that must have the global object for \x27this\x27, hopfully our context correct otherwise it will throw a global error\x0a            return cachedSetTimeout.call(this, fun, 0);\x0a        }\x0a    }\x0a\x0a\x0a}\x0afunction runClearTimeout(marker) {\x0a    if (cachedClearTimeout === clearTimeout) {\x0a        //normal enviroments in sane situations\x0a        return clearTimeout(marker);\x0a    }\x0a    // if clearTimeout wasn\x27t available but was latter defined\x0a    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\x0a        cachedClearTimeout = clearTimeout;\x0a        return clearTimeout(marker);\x0a    }\x0a    try {\x0a        // when when somebody has screwed with setTimeout but no I.E. maddness\x0a        return cachedClearTimeout(marker);\x0a    } catch (e){\x0a        try {\x0a            // When we are in I.E. but the script has been evaled so I.E. doesn\x27t  trust the global object when called normally\x0a            return cachedClearTimeout.call(null, marker);\x0a        } catch (e){\x0a            // same as above but when it\x27s a version of I.E. that must have the global object for \x27this\x27, hopfully our context correct otherwise it will throw a global error.\x0a            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\x0a            return cachedClearTimeout.call(this, marker);\x0a        }\x0a    }\x0a\x0a\x0a\x0a}\x0avar queue = [];\x0avar draining = false;\x0avar currentQueue;\x0avar queueIndex = -1;\x0a\x0afunction cleanUpNextTick() {\x0a    if (!draining || !currentQueue) {\x0a        return;\x0a    }\x0a    draining = false;\x0a    if (currentQueue.length) {\x0a        queue = currentQueue.concat(queue);\x0a    } else {\x0a        queueIndex = -1;\x0a    }\x0a    if (queue.length) {\x0a        drainQueue();\x0a    }\x0a}\x0a\x0afunction drainQueue() {\x0a    if (draining) {\x0a        return;\x0a    }\x0a    var timeout = runTimeout(cleanUpNextTick);\x0a    draining = true;\x0a\x0a    var len = queue.length;\x0a    while(len) {\x0a        currentQueue = queue;\x0a        queue = [];\x0a        while (++queueIndex \x3c len) {\x0a            if (currentQueue) {\x0a                currentQueue[queueIndex].run();\x0a            }\x0a        }\x0a        queueIndex = -1;\x0a        len = queue.length;\x0a    }\x0a    currentQueue = null;\x0a    draining = false;\x0a    runClearTimeout(timeout);\x0a}\x0a\x0aprocess.nextTick = function (fun) {\x0a    var args = new Array(arguments.length - 1);\x0a    if (arguments.length \x3e 1) {\x0a        for (var i = 1; i \x3c arguments.length; i++) {\x0a            args[i - 1] = arguments[i];\x0a        }\x0a    }\x0a    queue.push(new Item(fun, args));\x0a    if (queue.length === 1 && !draining) {\x0a        runTimeout(drainQueue);\x0a    }\x0a};\x0a\x0a// v8 likes predictible objects\x0afunction Item(fun, array) {\x0a    this.fun = fun;\x0a    this.array = array;\x0a}\x0aItem.prototype.run = function () {\x0a    this.fun.apply(null, this.array);\x0a};\x0aprocess.title = \x27browser\x27;\x0aprocess.browser = true;\x0aprocess.env = {};\x0aprocess.argv = [];\x0aprocess.version = \x27\x27; // empty string to avoid regexp issues\x0aprocess.versions = {};\x0a\x0afunction noop() {}\x0a\x0aprocess.on = noop;\x0aprocess.addListener = noop;\x0aprocess.once = noop;\x0aprocess.off = noop;\x0aprocess.removeListener = noop;\x0aprocess.removeAllListeners = noop;\x0aprocess.emit = noop;\x0aprocess.prependListener = noop;\x0aprocess.prependOnceListener = noop;\x0a\x0aprocess.listeners = function (name) { return [] }\x0a\x0aprocess.binding = function (name) {\x0a    throw new Error(\x27process.binding is not supported\x27);\x0a};\x0a\x0aprocess.cwd = function () { return \x27/\x27 };\x0aprocess.chdir = function (dir) {\x0a    throw new Error(\x27process.chdir is not supported\x27);\x0a};\x0aprocess.umask = function() { return 0; };\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../punycode/punycode.js\x22:\x0a/***/ (function(module, exports, __webpack_require__) {\x0a\x0a/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! https://mths.be/punycode v1.4.1 by @mathias */\x0a;(function(root) {\x0a\x0a\x09/** Detect free variables */\x0a\x09var freeExports = typeof exports == \x27object\x27 && exports &&\x0a\x09\x09!exports.nodeType && exports;\x0a\x09var freeModule = typeof module == \x27object\x27 && module &&\x0a\x09\x09!module.nodeType && module;\x0a\x09var freeGlobal = typeof global == \x27object\x27 && global;\x0a\x09if (\x0a\x09\x09freeGlobal.global === freeGlobal ||\x0a\x09\x09freeGlobal.window === freeGlobal ||\x0a\x09\x09freeGlobal.self === freeGlobal\x0a\x09) {\x0a\x09\x09root = freeGlobal;\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * The `punycode` object.\x0a\x09 * @name punycode\x0a\x09 * @type Object\x0a\x09 */\x0a\x09var punycode,\x0a\x0a\x09/** Highest positive signed 32-bit float value */\x0a\x09maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\x0a\x0a\x09/** Bootstring parameters */\x0a\x09base = 36,\x0a\x09tMin = 1,\x0a\x09tMax = 26,\x0a\x09skew = 38,\x0a\x09damp = 700,\x0a\x09initialBias = 72,\x0a\x09initialN = 128, // 0x80\x0a\x09delimiter = \x27-\x27, // \x27\x5cx2D\x27\x0a\x0a\x09/** Regular expressions */\x0a\x09regexPunycode = /^xn--/,\x0a\x09regexNonASCII = /[^\x5cx20-\x5cx7E]/, // unprintable ASCII chars + non-ASCII chars\x0a\x09regexSeparators = /[\x5cx2E\x5cu3002\x5cuFF0E\x5cuFF61]/g, // RFC 3490 separators\x0a\x0a\x09/** Error messages */\x0a\x09errors = {\x0a\x09\x09\x27overflow\x27: \x27Overflow: input needs wider integers to process\x27,\x0a\x09\x09\x27not-basic\x27: \x27Illegal input \x3e= 0x80 (not a basic code point)\x27,\x0a\x09\x09\x27invalid-input\x27: \x27Invalid input\x27\x0a\x09},\x0a\x0a\x09/** Convenience shortcuts */\x0a\x09baseMinusTMin = base - tMin,\x0a\x09floor = Math.floor,\x0a\x09stringFromCharCode = String.fromCharCode,\x0a\x0a\x09/** Temporary variable */\x0a\x09key;\x0a\x0a\x09/*--------------------------------------------------------------------------*/\x0a\x0a\x09/**\x0a\x09 * A generic error utility function.\x0a\x09 * @private\x0a\x09 * @param {String} type The error type.\x0a\x09 * @returns {Error} Throws a `RangeError` with the applicable error message.\x0a\x09 */\x0a\x09function error(type) {\x0a\x09\x09throw new RangeError(errors[type]);\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * A generic `Array#map` utility function.\x0a\x09 * @private\x0a\x09 * @param {Array} array The array to iterate over.\x0a\x09 * @param {Function} callback The function that gets called for every array\x0a\x09 * item.\x0a\x09 * @returns {Array} A new array of values returned by the callback function.\x0a\x09 */\x0a\x09function map(array, fn) {\x0a\x09\x09var length = array.length;\x0a\x09\x09var result = [];\x0a\x09\x09while (length--) {\x0a\x09\x09\x09result[length] = fn(array[length]);\x0a\x09\x09}\x0a\x09\x09return result;\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * A simple `Array#map`-like wrapper to work with domain name strings or email\x0a\x09 * addresses.\x0a\x09 * @private\x0a\x09 * @param {String} domain The domain name or email address.\x0a\x09 * @param {Function} callback The function that gets called for every\x0a\x09 * character.\x0a\x09 * @returns {Array} A new string of characters returned by the callback\x0a\x09 * function.\x0a\x09 */\x0a\x09function mapDomain(string, fn) {\x0a\x09\x09var parts = string.split(\x27@\x27);\x0a\x09\x09var result = \x27\x27;\x0a\x09\x09if (parts.length \x3e 1) {\x0a\x09\x09\x09// In email addresses, only the domain name should be punycoded. Leave\x0a\x09\x09\x09// the local part (i.e. everything up to `@`) intact.\x0a\x09\x09\x09result = parts[0] + \x27@\x27;\x0a\x09\x09\x09string = parts[1];\x0a\x09\x09}\x0a\x09\x09// Avoid `split(regex)` for IE8 compatibility. See #17.\x0a\x09\x09string = string.replace(regexSeparators, \x27\x5cx2E\x27);\x0a\x09\x09var labels = string.split(\x27.\x27);\x0a\x09\x09var encoded = map(labels, fn).join(\x27.\x27);\x0a\x09\x09return result + encoded;\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * Creates an array containing the numeric code points of each Unicode\x0a\x09 * character in the string. While JavaScript uses UCS-2 internally,\x0a\x09 * this function will convert a pair of surrogate halves (each of which\x0a\x09 * UCS-2 exposes as separate characters) into a single code point,\x0a\x09 * matching UTF-16.\x0a\x09 * @see `punycode.ucs2.encode`\x0a\x09 * @see \x3chttps://mathiasbynens.be/notes/javascript-encoding\x3e\x0a\x09 * @memberOf punycode.ucs2\x0a\x09 * @name decode\x0a\x09 * @param {String} string The Unicode input string (UCS-2).\x0a\x09 * @returns {Array} The new array of code points.\x0a\x09 */\x0a\x09function ucs2decode(string) {\x0a\x09\x09var output = [],\x0a\x09\x09    counter = 0,\x0a\x09\x09    length = string.length,\x0a\x09\x09    value,\x0a\x09\x09    extra;\x0a\x09\x09while (counter \x3c length) {\x0a\x09\x09\x09value = string.charCodeAt(counter++);\x0a\x09\x09\x09if (value \x3e= 0xD800 && value \x3c= 0xDBFF && counter \x3c length) {\x0a\x09\x09\x09\x09// high surrogate, and there is a next character\x0a\x09\x09\x09\x09extra = string.charCodeAt(counter++);\x0a\x09\x09\x09\x09if ((extra & 0xFC00) == 0xDC00) { // low surrogate\x0a\x09\x09\x09\x09\x09output.push(((value & 0x3FF) \x3c\x3c 10) + (extra & 0x3FF) + 0x10000);\x0a\x09\x09\x09\x09} else {\x0a\x09\x09\x09\x09\x09// unmatched surrogate; only append this code unit, in case the next\x0a\x09\x09\x09\x09\x09// code unit is the high surrogate of a surrogate pair\x0a\x09\x09\x09\x09\x09output.push(value);\x0a\x09\x09\x09\x09\x09counter--;\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09output.push(value);\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x09\x09return output;\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * Creates a string based on an array of numeric code points.\x0a\x09 * @see `punycode.ucs2.decode`\x0a\x09 * @memberOf punycode.ucs2\x0a\x09 * @name encode\x0a\x09 * @param {Array} codePoints The array of numeric code points.\x0a\x09 * @returns {String} The new Unicode string (UCS-2).\x0a\x09 */\x0a\x09function ucs2encode(array) {\x0a\x09\x09return map(array, function(value) {\x0a\x09\x09\x09var output = \x27\x27;\x0a\x09\x09\x09if (value \x3e 0xFFFF) {\x0a\x09\x09\x09\x09value -= 0x10000;\x0a\x09\x09\x09\x09output += stringFromCharCode(value \x3e\x3e\x3e 10 & 0x3FF | 0xD800);\x0a\x09\x09\x09\x09value = 0xDC00 | value & 0x3FF;\x0a\x09\x09\x09}\x0a\x09\x09\x09output += stringFromCharCode(value);\x0a\x09\x09\x09return output;\x0a\x09\x09}).join(\x27\x27);\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * Converts a basic code point into a digit/integer.\x0a\x09 * @see `digitToBasic()`\x0a\x09 * @private\x0a\x09 * @param {Number} codePoint The basic numeric code point value.\x0a\x09 * @returns {Number} The numeric value of a basic code point (for use in\x0a\x09 * representing integers) in the range `0` to `base - 1`, or `base` if\x0a\x09 * the code point does not represent a value.\x0a\x09 */\x0a\x09function basicToDigit(codePoint) {\x0a\x09\x09if (codePoint - 48 \x3c 10) {\x0a\x09\x09\x09return codePoint - 22;\x0a\x09\x09}\x0a\x09\x09if (codePoint - 65 \x3c 26) {\x0a\x09\x09\x09return codePoint - 65;\x0a\x09\x09}\x0a\x09\x09if (codePoint - 97 \x3c 26) {\x0a\x09\x09\x09return codePoint - 97;\x0a\x09\x09}\x0a\x09\x09return base;\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * Converts a digit/integer into a basic code point.\x0a\x09 * @see `basicToDigit()`\x0a\x09 * @private\x0a\x09 * @param {Number} digit The numeric value of a basic code point.\x0a\x09 * @returns {Number} The basic code point whose value (when used for\x0a\x09 * representing integers) is `digit`, which needs to be in the range\x0a\x09 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\x0a\x09 * used; else, the lowercase form is used. The behavior is undefined\x0a\x09 * if `flag` is non-zero and `digit` has no uppercase form.\x0a\x09 */\x0a\x09function digitToBasic(digit, flag) {\x0a\x09\x09//  0..25 map to ASCII a..z or A..Z\x0a\x09\x09// 26..35 map to ASCII 0..9\x0a\x09\x09return digit + 22 + 75 * (digit \x3c 26) - ((flag != 0) \x3c\x3c 5);\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * Bias adaptation function as per section 3.4 of RFC 3492.\x0a\x09 * https://tools.ietf.org/html/rfc3492#section-3.4\x0a\x09 * @private\x0a\x09 */\x0a\x09function adapt(delta, numPoints, firstTime) {\x0a\x09\x09var k = 0;\x0a\x09\x09delta = firstTime ? floor(delta / damp) : delta \x3e\x3e 1;\x0a\x09\x09delta += floor(delta / numPoints);\x0a\x09\x09for (/* no initialization */; delta \x3e baseMinusTMin * tMax \x3e\x3e 1; k += base) {\x0a\x09\x09\x09delta = floor(delta / baseMinusTMin);\x0a\x09\x09}\x0a\x09\x09return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * Converts a Punycode string of ASCII-only symbols to a string of Unicode\x0a\x09 * symbols.\x0a\x09 * @memberOf punycode\x0a\x09 * @param {String} input The Punycode string of ASCII-only symbols.\x0a\x09 * @returns {String} The resulting string of Unicode symbols.\x0a\x09 */\x0a\x09function decode(input) {\x0a\x09\x09// Don\x27t use UCS-2\x0a\x09\x09var output = [],\x0a\x09\x09    inputLength = input.length,\x0a\x09\x09    out,\x0a\x09\x09    i = 0,\x0a\x09\x09    n = initialN,\x0a\x09\x09    bias = initialBias,\x0a\x09\x09    basic,\x0a\x09\x09    j,\x0a\x09\x09    index,\x0a\x09\x09    oldi,\x0a\x09\x09    w,\x0a\x09\x09    k,\x0a\x09\x09    digit,\x0a\x09\x09    t,\x0a\x09\x09    /** Cached calculation results */\x0a\x09\x09    baseMinusT;\x0a\x0a\x09\x09// Handle the basic code points: let `basic` be the number of input code\x0a\x09\x09// points before the last delimiter, or `0` if there is none, then copy\x0a\x09\x09// the first basic code points to the output.\x0a\x0a\x09\x09basic = input.lastIndexOf(delimiter);\x0a\x09\x09if (basic \x3c 0) {\x0a\x09\x09\x09basic = 0;\x0a\x09\x09}\x0a\x0a\x09\x09for (j = 0; j \x3c basic; ++j) {\x0a\x09\x09\x09// if it\x27s not a basic code point\x0a\x09\x09\x09if (input.charCodeAt(j) \x3e= 0x80) {\x0a\x09\x09\x09\x09error(\x27not-basic\x27);\x0a\x09\x09\x09}\x0a\x09\x09\x09output.push(input.charCodeAt(j));\x0a\x09\x09}\x0a\x0a\x09\x09// Main decoding loop: start just after the last delimiter if any basic code\x0a\x09\x09// points were copied; start at the beginning otherwise.\x0a\x0a\x09\x09for (index = basic \x3e 0 ? basic + 1 : 0; index \x3c inputLength; /* no final expression */) {\x0a\x0a\x09\x09\x09// `index` is the index of the next character to be consumed.\x0a\x09\x09\x09// Decode a generalized variable-length integer into `delta`,\x0a\x09\x09\x09// which gets added to `i`. The overflow checking is easier\x0a\x09\x09\x09// if we increase `i` as we go, then subtract off its starting\x0a\x09\x09\x09// value at the end to obtain `delta`.\x0a\x09\x09\x09for (oldi = i, w = 1, k = base; /* no condition */; k += base) {\x0a\x0a\x09\x09\x09\x09if (index \x3e= inputLength) {\x0a\x09\x09\x09\x09\x09error(\x27invalid-input\x27);\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09digit = basicToDigit(input.charCodeAt(index++));\x0a\x0a\x09\x09\x09\x09if (digit \x3e= base || digit \x3e floor((maxInt - i) / w)) {\x0a\x09\x09\x09\x09\x09error(\x27overflow\x27);\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09i += digit * w;\x0a\x09\x09\x09\x09t = k \x3c= bias ? tMin : (k \x3e= bias + tMax ? tMax : k - bias);\x0a\x0a\x09\x09\x09\x09if (digit \x3c t) {\x0a\x09\x09\x09\x09\x09break;\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09baseMinusT = base - t;\x0a\x09\x09\x09\x09if (w \x3e floor(maxInt / baseMinusT)) {\x0a\x09\x09\x09\x09\x09error(\x27overflow\x27);\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09w *= baseMinusT;\x0a\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09out = output.length + 1;\x0a\x09\x09\x09bias = adapt(i - oldi, out, oldi == 0);\x0a\x0a\x09\x09\x09// `i` was supposed to wrap around from `out` to `0`,\x0a\x09\x09\x09// incrementing `n` each time, so we\x27ll fix that now:\x0a\x09\x09\x09if (floor(i / out) \x3e maxInt - n) {\x0a\x09\x09\x09\x09error(\x27overflow\x27);\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09n += floor(i / out);\x0a\x09\x09\x09i %= out;\x0a\x0a\x09\x09\x09// Insert `n` at position `i` of the output\x0a\x09\x09\x09output.splice(i++, 0, n);\x0a\x0a\x09\x09}\x0a\x0a\x09\x09return ucs2encode(output);\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * Converts a string of Unicode symbols (e.g. a domain name label) to a\x0a\x09 * Punycode string of ASCII-only symbols.\x0a\x09 * @memberOf punycode\x0a\x09 * @param {String} input The string of Unicode symbols.\x0a\x09 * @returns {String} The resulting Punycode string of ASCII-only symbols.\x0a\x09 */\x0a\x09function encode(input) {\x0a\x09\x09var n,\x0a\x09\x09    delta,\x0a\x09\x09    handledCPCount,\x0a\x09\x09    basicLength,\x0a\x09\x09    bias,\x0a\x09\x09    j,\x0a\x09\x09    m,\x0a\x09\x09    q,\x0a\x09\x09    k,\x0a\x09\x09    t,\x0a\x09\x09    currentValue,\x0a\x09\x09    output = [],\x0a\x09\x09    /** `inputLength` will hold the number of code points in `input`. */\x0a\x09\x09    inputLength,\x0a\x09\x09    /** Cached calculation results */\x0a\x09\x09    handledCPCountPlusOne,\x0a\x09\x09    baseMinusT,\x0a\x09\x09    qMinusT;\x0a\x0a\x09\x09// Convert the input in UCS-2 to Unicode\x0a\x09\x09input = ucs2decode(input);\x0a\x0a\x09\x09// Cache the length\x0a\x09\x09inputLength = input.length;\x0a\x0a\x09\x09// Initialize the state\x0a\x09\x09n = initialN;\x0a\x09\x09delta = 0;\x0a\x09\x09bias = initialBias;\x0a\x0a\x09\x09// Handle the basic code points\x0a\x09\x09for (j = 0; j \x3c inputLength; ++j) {\x0a\x09\x09\x09currentValue = input[j];\x0a\x09\x09\x09if (currentValue \x3c 0x80) {\x0a\x09\x09\x09\x09output.push(stringFromCharCode(currentValue));\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x0a\x09\x09handledCPCount = basicLength = output.length;\x0a\x0a\x09\x09// `handledCPCount` is the number of code points that have been handled;\x0a\x09\x09// `basicLength` is the number of basic code points.\x0a\x0a\x09\x09// Finish the basic string - if it is not empty - with a delimiter\x0a\x09\x09if (basicLength) {\x0a\x09\x09\x09output.push(delimiter);\x0a\x09\x09}\x0a\x0a\x09\x09// Main encoding loop:\x0a\x09\x09while (handledCPCount \x3c inputLength) {\x0a\x0a\x09\x09\x09// All non-basic code points \x3c n have been handled already. Find the next\x0a\x09\x09\x09// larger one:\x0a\x09\x09\x09for (m = maxInt, j = 0; j \x3c inputLength; ++j) {\x0a\x09\x09\x09\x09currentValue = input[j];\x0a\x09\x09\x09\x09if (currentValue \x3e= n && currentValue \x3c m) {\x0a\x09\x09\x09\x09\x09m = currentValue;\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09// Increase `delta` enough to advance the decoder\x27s \x3cn,i\x3e state to \x3cm,0\x3e,\x0a\x09\x09\x09// but guard against overflow\x0a\x09\x09\x09handledCPCountPlusOne = handledCPCount + 1;\x0a\x09\x09\x09if (m - n \x3e floor((maxInt - delta) / handledCPCountPlusOne)) {\x0a\x09\x09\x09\x09error(\x27overflow\x27);\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09delta += (m - n) * handledCPCountPlusOne;\x0a\x09\x09\x09n = m;\x0a\x0a\x09\x09\x09for (j = 0; j \x3c inputLength; ++j) {\x0a\x09\x09\x09\x09currentValue = input[j];\x0a\x0a\x09\x09\x09\x09if (currentValue \x3c n && ++delta \x3e maxInt) {\x0a\x09\x09\x09\x09\x09error(\x27overflow\x27);\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09if (currentValue == n) {\x0a\x09\x09\x09\x09\x09// Represent delta as a generalized variable-length integer\x0a\x09\x09\x09\x09\x09for (q = delta, k = base; /* no condition */; k += base) {\x0a\x09\x09\x09\x09\x09\x09t = k \x3c= bias ? tMin : (k \x3e= bias + tMax ? tMax : k - bias);\x0a\x09\x09\x09\x09\x09\x09if (q \x3c t) {\x0a\x09\x09\x09\x09\x09\x09\x09break;\x0a\x09\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09\x09\x09qMinusT = q - t;\x0a\x09\x09\x09\x09\x09\x09baseMinusT = base - t;\x0a\x09\x09\x09\x09\x09\x09output.push(\x0a\x09\x09\x09\x09\x09\x09\x09stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\x0a\x09\x09\x09\x09\x09\x09);\x0a\x09\x09\x09\x09\x09\x09q = floor(qMinusT / baseMinusT);\x0a\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09output.push(stringFromCharCode(digitToBasic(q, 0)));\x0a\x09\x09\x09\x09\x09bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\x0a\x09\x09\x09\x09\x09delta = 0;\x0a\x09\x09\x09\x09\x09++handledCPCount;\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09++delta;\x0a\x09\x09\x09++n;\x0a\x0a\x09\x09}\x0a\x09\x09return output.join(\x27\x27);\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * Converts a Punycode string representing a domain name or an email address\x0a\x09 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\x0a\x09 * it doesn\x27t matter if you call it on a string that has already been\x0a\x09 * converted to Unicode.\x0a\x09 * @memberOf punycode\x0a\x09 * @param {String} input The Punycoded domain name or email address to\x0a\x09 * convert to Unicode.\x0a\x09 * @returns {String} The Unicode representation of the given Punycode\x0a\x09 * string.\x0a\x09 */\x0a\x09function toUnicode(input) {\x0a\x09\x09return mapDomain(input, function(string) {\x0a\x09\x09\x09return regexPunycode.test(string)\x0a\x09\x09\x09\x09? decode(string.slice(4).toLowerCase())\x0a\x09\x09\x09\x09: string;\x0a\x09\x09});\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * Converts a Unicode string representing a domain name or an email address to\x0a\x09 * Punycode. Only the non-ASCII parts of the domain name will be converted,\x0a\x09 * i.e. it doesn\x27t matter if you call it with a domain that\x27s already in\x0a\x09 * ASCII.\x0a\x09 * @memberOf punycode\x0a\x09 * @param {String} input The domain name or email address to convert, as a\x0a\x09 * Unicode string.\x0a\x09 * @returns {String} The Punycode representation of the given domain name or\x0a\x09 * email address.\x0a\x09 */\x0a\x09function toASCII(input) {\x0a\x09\x09return mapDomain(input, function(string) {\x0a\x09\x09\x09return regexNonASCII.test(string)\x0a\x09\x09\x09\x09? \x27xn--\x27 + encode(string)\x0a\x09\x09\x09\x09: string;\x0a\x09\x09});\x0a\x09}\x0a\x0a\x09/*--------------------------------------------------------------------------*/\x0a\x0a\x09/** Define the public API */\x0a\x09punycode = {\x0a\x09\x09/**\x0a\x09\x09 * A string representing the current Punycode.js version number.\x0a\x09\x09 * @memberOf punycode\x0a\x09\x09 * @type String\x0a\x09\x09 */\x0a\x09\x09\x27version\x27: \x271.4.1\x27,\x0a\x09\x09/**\x0a\x09\x09 * An object of methods to convert from JavaScript\x27s internal character\x0a\x09\x09 * representation (UCS-2) to Unicode code points, and back.\x0a\x09\x09 * @see \x3chttps://mathiasbynens.be/notes/javascript-encoding\x3e\x0a\x09\x09 * @memberOf punycode\x0a\x09\x09 * @type Object\x0a\x09\x09 */\x0a\x09\x09\x27ucs2\x27: {\x0a\x09\x09\x09\x27decode\x27: ucs2decode,\x0a\x09\x09\x09\x27encode\x27: ucs2encode\x0a\x09\x09},\x0a\x09\x09\x27decode\x27: decode,\x0a\x09\x09\x27encode\x27: encode,\x0a\x09\x09\x27toASCII\x27: toASCII,\x0a\x09\x09\x27toUnicode\x27: toUnicode\x0a\x09};\x0a\x0a\x09/** Expose `punycode` */\x0a\x09// Some AMD build optimizers, like r.js, check for specific condition patterns\x0a\x09// like the following:\x0a\x09if (\x0a\x09\x09true\x0a\x09) {\x0a\x09\x09!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\x0a\x09\x09\x09return punycode;\x0a\x09\x09}.call(exports, __webpack_require__, exports, module),\x0a\x09\x09\x09\x09__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\x0a\x09} else if (freeExports && freeModule) {\x0a\x09\x09if (module.exports == freeExports) {\x0a\x09\x09\x09// in Node.js, io.js, or RingoJS v0.8.0+\x0a\x09\x09\x09freeModule.exports = punycode;\x0a\x09\x09} else {\x0a\x09\x09\x09// in Narwhal or RingoJS v0.7.0-\x0a\x09\x09\x09for (key in punycode) {\x0a\x09\x09\x09\x09punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x09} else {\x0a\x09\x09// in Rhino or a web browser\x0a\x09\x09root.punycode = punycode;\x0a\x09}\x0a\x0a}(this));\x0a\x0a/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\x22../../../../webpack/buildin/module.js\x22)(module), __webpack_require__(\x22../../../../webpack/buildin/global.js\x22)))\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../querystring-es3/decode.js\x22:\x0a/***/ (function(module, exports, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a// Copyright Joyent, Inc. and other Node contributors.\x0a//\x0a// Permission is hereby granted, free of charge, to any person obtaining a\x0a// copy of this software and associated documentation files (the\x0a// \x22Software\x22), to deal in the Software without restriction, including\x0a// without limitation the rights to use, copy, modify, merge, publish,\x0a// distribute, sublicense, and/or sell copies of the Software, and to permit\x0a// persons to whom the Software is furnished to do so, subject to the\x0a// following conditions:\x0a//\x0a// The above copyright notice and this permission notice shall be included\x0a// in all copies or substantial portions of the Software.\x0a//\x0a// THE SOFTWARE IS PROVIDED \x22AS IS\x22, WITHOUT WARRANTY OF ANY KIND, EXPRESS\x0a// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0a// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0a// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\x0a// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\x0a// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0a// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0a\x0a\x0a\x0a// If obj.hasOwnProperty has been overridden, then calling\x0a// obj.hasOwnProperty(prop) will break.\x0a// See: https://github.com/joyent/node/issues/1707\x0afunction hasOwnProperty(obj, prop) {\x0a  return Object.prototype.hasOwnProperty.call(obj, prop);\x0a}\x0a\x0amodule.exports = function(qs, sep, eq, options) {\x0a  sep = sep || \x27&\x27;\x0a  eq = eq || \x27=\x27;\x0a  var obj = {};\x0a\x0a  if (typeof qs !== \x27string\x27 || qs.length === 0) {\x0a    return obj;\x0a  }\x0a\x0a  var regexp = /\x5c+/g;\x0a  qs = qs.split(sep);\x0a\x0a  var maxKeys = 1000;\x0a  if (options && typeof options.maxKeys === \x27number\x27) {\x0a    maxKeys = options.maxKeys;\x0a  }\x0a\x0a  var len = qs.length;\x0a  // maxKeys \x3c= 0 means that we should not limit keys count\x0a  if (maxKeys \x3e 0 && len \x3e maxKeys) {\x0a    len = maxKeys;\x0a  }\x0a\x0a  for (var i = 0; i \x3c len; ++i) {\x0a    var x = qs[i].replace(regexp, \x27%20\x27),\x0a        idx = x.indexOf(eq),\x0a        kstr, vstr, k, v;\x0a\x0a    if (idx \x3e= 0) {\x0a      kstr = x.substr(0, idx);\x0a      vstr = x.substr(idx + 1);\x0a    } else {\x0a      kstr = x;\x0a      vstr = \x27\x27;\x0a    }\x0a\x0a    k = decodeURIComponent(kstr);\x0a    v = decodeURIComponent(vstr);\x0a\x0a    if (!hasOwnProperty(obj, k)) {\x0a      obj[k] = v;\x0a    } else if (isArray(obj[k])) {\x0a      obj[k].push(v);\x0a    } else {\x0a      obj[k] = [obj[k], v];\x0a    }\x0a  }\x0a\x0a  return obj;\x0a};\x0a\x0avar isArray = Array.isArray || function (xs) {\x0a  return Object.prototype.toString.call(xs) === \x27[object Array]\x27;\x0a};\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../querystring-es3/encode.js\x22:\x0a/***/ (function(module, exports, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a// Copyright Joyent, Inc. and other Node contributors.\x0a//\x0a// Permission is hereby granted, free of charge, to any person obtaining a\x0a// copy of this software and associated documentation files (the\x0a// \x22Software\x22), to deal in the Software without restriction, including\x0a// without limitation the rights to use, copy, modify, merge, publish,\x0a// distribute, sublicense, and/or sell copies of the Software, and to permit\x0a// persons to whom the Software is furnished to do so, subject to the\x0a// following conditions:\x0a//\x0a// The above copyright notice and this permission notice shall be included\x0a// in all copies or substantial portions of the Software.\x0a//\x0a// THE SOFTWARE IS PROVIDED \x22AS IS\x22, WITHOUT WARRANTY OF ANY KIND, EXPRESS\x0a// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0a// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0a// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\x0a// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\x0a// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0a// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0a\x0a\x0a\x0avar stringifyPrimitive = function(v) {\x0a  switch (typeof v) {\x0a    case \x27string\x27:\x0a      return v;\x0a\x0a    case \x27boolean\x27:\x0a      return v ? \x27true\x27 : \x27false\x27;\x0a\x0a    case \x27number\x27:\x0a      return isFinite(v) ? v : \x27\x27;\x0a\x0a    default:\x0a      return \x27\x27;\x0a  }\x0a};\x0a\x0amodule.exports = function(obj, sep, eq, name) {\x0a  sep = sep || \x27&\x27;\x0a  eq = eq || \x27=\x27;\x0a  if (obj === null) {\x0a    obj = undefined;\x0a  }\x0a\x0a  if (typeof obj === \x27object\x27) {\x0a    return map(objectKeys(obj), function(k) {\x0a      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\x0a      if (isArray(obj[k])) {\x0a        return map(obj[k], function(v) {\x0a          return ks + encodeURIComponent(stringifyPrimitive(v));\x0a        }).join(sep);\x0a      } else {\x0a        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\x0a      }\x0a    }).join(sep);\x0a\x0a  }\x0a\x0a  if (!name) return \x27\x27;\x0a  return encodeURIComponent(stringifyPrimitive(name)) + eq +\x0a         encodeURIComponent(stringifyPrimitive(obj));\x0a};\x0a\x0avar isArray = Array.isArray || function (xs) {\x0a  return Object.prototype.toString.call(xs) === \x27[object Array]\x27;\x0a};\x0a\x0afunction map (xs, f) {\x0a  if (xs.map) return xs.map(f);\x0a  var res = [];\x0a  for (var i = 0; i \x3c xs.length; i++) {\x0a    res.push(f(xs[i], i));\x0a  }\x0a  return res;\x0a}\x0a\x0avar objectKeys = Object.keys || function (obj) {\x0a  var res = [];\x0a  for (var key in obj) {\x0a    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\x0a  }\x0a  return res;\x0a};\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../querystring-es3/index.js\x22:\x0a/***/ (function(module, exports, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a\x0a\x0aexports.decode = exports.parse = __webpack_require__(\x22../../../../querystring-es3/decode.js\x22);\x0aexports.encode = exports.stringify = __webpack_require__(\x22../../../../querystring-es3/encode.js\x22);\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../requires-port/index.js\x22:\x0a/***/ (function(module, exports, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a\x0a\x0a/**\x0a * Check if we\x27re required to add a port number.\x0a *\x0a * @see https://url.spec.whatwg.org/#default-port\x0a * @param {Number|String} port Port number we need to check\x0a * @param {String} protocol Protocol we need to check against.\x0a * @returns {Boolean} Is it a default port for the given protocol\x0a * @api private\x0a */\x0amodule.exports = function required(port, protocol) {\x0a  protocol = protocol.split(\x27:\x27)[0];\x0a  port = +port;\x0a\x0a  if (!port) return false;\x0a\x0a  switch (protocol) {\x0a    case \x27http\x27:\x0a    case \x27ws\x27:\x0a    return port !== 80;\x0a\x0a    case \x27https\x27:\x0a    case \x27wss\x27:\x0a    return port !== 443;\x0a\x0a    case \x27ftp\x27:\x0a    return port !== 21;\x0a\x0a    case \x27gopher\x27:\x0a    return port !== 70;\x0a\x0a    case \x27file\x27:\x0a    return false;\x0a  }\x0a\x0a  return port !== 0;\x0a};\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/BehaviorSubject.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return BehaviorSubject; });\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Subject__ = __webpack_require__(\x22../../../../rxjs/_esm5/Subject.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_ObjectUnsubscribedError__ = __webpack_require__(\x22../../../../rxjs/_esm5/util/ObjectUnsubscribedError.js\x22);\x0a/** PURE_IMPORTS_START ._Subject,._util_ObjectUnsubscribedError PURE_IMPORTS_END */\x0avar __extends = (this && this.__extends) || function (d, b) {\x0a    for (var p in b)\x0a        if (b.hasOwnProperty(p))\x0a            d[p] = b[p];\x0a    function __() { this.constructor = d; }\x0a    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\x0a};\x0a\x0a\x0a/**\x0a * @class BehaviorSubject\x3cT\x3e\x0a */\x0avar BehaviorSubject = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\x0a    __extends(BehaviorSubject, _super);\x0a    function BehaviorSubject(_value) {\x0a        _super.call(this);\x0a        this._value = _value;\x0a    }\x0a    Object.defineProperty(BehaviorSubject.prototype, \x22value\x22, {\x0a        get: function () {\x0a            return this.getValue();\x0a        },\x0a        enumerable: true,\x0a        configurable: true\x0a    });\x0a    BehaviorSubject.prototype._subscribe = function (subscriber) {\x0a        var subscription = _super.prototype._subscribe.call(this, subscriber);\x0a        if (subscription && !subscription.closed) {\x0a            subscriber.next(this._value);\x0a        }\x0a        return subscription;\x0a    };\x0a    BehaviorSubject.prototype.getValue = function () {\x0a        if (this.hasError) {\x0a            throw this.thrownError;\x0a        }\x0a        else if (this.closed) {\x0a            throw new __WEBPACK_IMPORTED_MODULE_1__util_ObjectUnsubscribedError__[\x22a\x22 /* ObjectUnsubscribedError */]();\x0a        }\x0a        else {\x0a            return this._value;\x0a        }\x0a    };\x0a    BehaviorSubject.prototype.next = function (value) {\x0a        _super.prototype.next.call(this, this._value = value);\x0a    };\x0a    return BehaviorSubject;\x0a}(__WEBPACK_IMPORTED_MODULE_0__Subject__[\x22a\x22 /* Subject */]));\x0a//# sourceMappingURL=BehaviorSubject.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/InnerSubscriber.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return InnerSubscriber; });\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Subscriber__ = __webpack_require__(\x22../../../../rxjs/_esm5/Subscriber.js\x22);\x0a/** PURE_IMPORTS_START ._Subscriber PURE_IMPORTS_END */\x0avar __extends = (this && this.__extends) || function (d, b) {\x0a    for (var p in b)\x0a        if (b.hasOwnProperty(p))\x0a            d[p] = b[p];\x0a    function __() { this.constructor = d; }\x0a    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\x0a};\x0a\x0a/**\x0a * We need this JSDoc comment for affecting ESDoc.\x0a * @ignore\x0a * @extends {Ignored}\x0a */\x0avar InnerSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\x0a    __extends(InnerSubscriber, _super);\x0a    function InnerSubscriber(parent, outerValue, outerIndex) {\x0a        _super.call(this);\x0a        this.parent = parent;\x0a        this.outerValue = outerValue;\x0a        this.outerIndex = outerIndex;\x0a        this.index = 0;\x0a    }\x0a    InnerSubscriber.prototype._next = function (value) {\x0a        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\x0a    };\x0a    InnerSubscriber.prototype._error = function (error) {\x0a        this.parent.notifyError(error, this);\x0a        this.unsubscribe();\x0a    };\x0a    InnerSubscriber.prototype._complete = function () {\x0a        this.parent.notifyComplete(this);\x0a        this.unsubscribe();\x0a    };\x0a    return InnerSubscriber;\x0a}(__WEBPACK_IMPORTED_MODULE_0__Subscriber__[\x22a\x22 /* Subscriber */]));\x0a//# sourceMappingURL=InnerSubscriber.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/Notification.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return Notification; });\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(\x22../../../../rxjs/_esm5/Observable.js\x22);\x0a/** PURE_IMPORTS_START ._Observable PURE_IMPORTS_END */\x0a\x0a/**\x0a * Represents a push-based event or value that an {@link Observable} can emit.\x0a * This class is particularly useful for operators that manage notifications,\x0a * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\x0a * others. Besides wrapping the actual delivered value, it also annotates it\x0a * with metadata of, for instance, what type of push message it is (`next`,\x0a * `error`, or `complete`).\x0a *\x0a * @see {@link materialize}\x0a * @see {@link dematerialize}\x0a * @see {@link observeOn}\x0a *\x0a * @class Notification\x3cT\x3e\x0a */\x0avar Notification = /*@__PURE__*/ (/*@__PURE__*/ function () {\x0a    function Notification(kind, value, error) {\x0a        this.kind = kind;\x0a        this.value = value;\x0a        this.error = error;\x0a        this.hasValue = kind === \x27N\x27;\x0a    }\x0a    /**\x0a     * Delivers to the given `observer` the value wrapped by this Notification.\x0a     * @param {Observer} observer\x0a     * @return\x0a     */\x0a    Notification.prototype.observe = function (observer) {\x0a        switch (this.kind) {\x0a            case \x27N\x27:\x0a                return observer.next && observer.next(this.value);\x0a            case \x27E\x27:\x0a                return observer.error && observer.error(this.error);\x0a            case \x27C\x27:\x0a                return observer.complete && observer.complete();\x0a        }\x0a    };\x0a    /**\x0a     * Given some {@link Observer} callbacks, deliver the value represented by the\x0a     * current Notification to the correctly corresponding callback.\x0a     * @param {function(value: T): void} next An Observer `next` callback.\x0a     * @param {function(err: any): void} [error] An Observer `error` callback.\x0a     * @param {function(): void} [complete] An Observer `complete` callback.\x0a     * @return {any}\x0a     */\x0a    Notification.prototype.do = function (next, error, complete) {\x0a        var kind = this.kind;\x0a        switch (kind) {\x0a            case \x27N\x27:\x0a                return next && next(this.value);\x0a            case \x27E\x27:\x0a                return error && error(this.error);\x0a            case \x27C\x27:\x0a                return complete && complete();\x0a        }\x0a    };\x0a    /**\x0a     * Takes an Observer or its individual callback functions, and calls `observe`\x0a     * or `do` methods accordingly.\x0a     * @param {Observer|function(value: T): void} nextOrObserver An Observer or\x0a     * the `next` callback.\x0a     * @param {function(err: any): void} [error] An Observer `error` callback.\x0a     * @param {function(): void} [complete] An Observer `complete` callback.\x0a     * @return {any}\x0a     */\x0a    Notification.prototype.accept = function (nextOrObserver, error, complete) {\x0a        if (nextOrObserver && typeof nextOrObserver.next === \x27function\x27) {\x0a            return this.observe(nextOrObserver);\x0a        }\x0a        else {\x0a            return this.do(nextOrObserver, error, complete);\x0a        }\x0a    };\x0a    /**\x0a     * Returns a simple Observable that just delivers the notification represented\x0a     * by this Notification instance.\x0a     * @return {any}\x0a     */\x0a    Notification.prototype.toObservable = function () {\x0a        var kind = this.kind;\x0a        switch (kind) {\x0a            case \x27N\x27:\x0a                return __WEBPACK_IMPORTED_MODULE_0__Observable__[\x22a\x22 /* Observable */].of(this.value);\x0a            case \x27E\x27:\x0a                return __WEBPACK_IMPORTED_MODULE_0__Observable__[\x22a\x22 /* Observable */].throw(this.error);\x0a            case \x27C\x27:\x0a                return __WEBPACK_IMPORTED_MODULE_0__Observable__[\x22a\x22 /* Observable */].empty();\x0a        }\x0a        throw new Error(\x27unexpected notification kind value\x27);\x0a    };\x0a    /**\x0a     * A shortcut to create a Notification instance of the type `next` from a\x0a     * given value.\x0a     * @param {T} value The `next` value.\x0a     * @return {Notification\x3cT\x3e} The \x22next\x22 Notification representing the\x0a     * argument.\x0a     */\x0a    Notification.createNext = function (value) {\x0a        if (typeof value !== \x27undefined\x27) {\x0a            return new Notification(\x27N\x27, value);\x0a        }\x0a        return Notification.undefinedValueNotification;\x0a    };\x0a    /**\x0a     * A shortcut to create a Notification instance of the type `error` from a\x0a     * given error.\x0a     * @param {any} [err] The `error` error.\x0a     * @return {Notification\x3cT\x3e} The \x22error\x22 Notification representing the\x0a     * argument.\x0a     */\x0a    Notification.createError = function (err) {\x0a        return new Notification(\x27E\x27, undefined, err);\x0a    };\x0a    /**\x0a     * A shortcut to create a Notification instance of the type `complete`.\x0a     * @return {Notification\x3cany\x3e} The valueless \x22complete\x22 Notification.\x0a     */\x0a    Notification.createComplete = function () {\x0a        return Notification.completeNotification;\x0a    };\x0a    Notification.completeNotification = new Notification(\x27C\x27);\x0a    Notification.undefinedValueNotification = new Notification(\x27N\x27, undefined);\x0a    return Notification;\x0a}());\x0a//# sourceMappingURL=Notification.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/Observable.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return Observable; });\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_root__ = __webpack_require__(\x22../../../../rxjs/_esm5/util/root.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_toSubscriber__ = __webpack_require__(\x22../../../../rxjs/_esm5/util/toSubscriber.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__symbol_observable__ = __webpack_require__(\x22../../../../rxjs/_esm5/symbol/observable.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_pipe__ = __webpack_require__(\x22../../../../rxjs/_esm5/util/pipe.js\x22);\x0a/** PURE_IMPORTS_START ._util_root,._util_toSubscriber,._symbol_observable,._util_pipe PURE_IMPORTS_END */\x0a\x0a\x0a\x0a\x0a/**\x0a * A representation of any set of values over any amount of time. This is the most basic building block\x0a * of RxJS.\x0a *\x0a * @class Observable\x3cT\x3e\x0a */\x0avar Observable = /*@__PURE__*/ (/*@__PURE__*/ function () {\x0a    /**\x0a     * @constructor\x0a     * @param {Function} subscribe the function that is called when the Observable is\x0a     * initially subscribed to. This function is given a Subscriber, to which new values\x0a     * can be `next`ed, or an `error` method can be called to raise an error, or\x0a     * `complete` can be called to notify of a successful completion.\x0a     */\x0a    function Observable(subscribe) {\x0a        this._isScalar = false;\x0a        if (subscribe) {\x0a            this._subscribe = subscribe;\x0a        }\x0a    }\x0a    /**\x0a     * Creates a new Observable, with this Observable as the source, and the passed\x0a     * operator defined as the new observable\x27s operator.\x0a     * @method lift\x0a     * @param {Operator} operator the operator defining the operation to take on the observable\x0a     * @return {Observable} a new observable with the Operator applied\x0a     */\x0a    Observable.prototype.lift = function (operator) {\x0a        var observable = new Observable();\x0a        observable.source = this;\x0a        observable.operator = operator;\x0a        return observable;\x0a    };\x0a    /**\x0a     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\x0a     *\x0a     * \x3cspan class=\x22informal\x22\x3eUse it when you have all these Observables, but still nothing is happening.\x3c/span\x3e\x0a     *\x0a     * `subscribe` is not a regular operator, but a method that calls Observable\x27s internal `subscribe` function. It\x0a     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\x0a     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\x0a     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\x0a     * thought.\x0a     *\x0a     * Apart from starting the execution of an Observable, this method allows you to listen for values\x0a     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\x0a     * following ways.\x0a     *\x0a     * The first way is creating an object that implements {@link Observer} interface. It should have methods\x0a     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\x0a     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\x0a     * not attempt to use any RxJS implementation details to create Observers - you don\x27t need them. Remember also\x0a     * that your object does not have to implement all methods. If you find yourself creating a method that doesn\x27t\x0a     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\x0a     * be left uncaught.\x0a     *\x0a     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\x0a     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\x0a     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\x0a     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\x0a     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\x0a     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\x0a     *\x0a     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\x0a     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\x0a     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\x0a     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\x0a     *\x0a     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\x0a     * It is an Observable itself that decides when these functions will be called. For example {@link of}\x0a     * by default emits all its values synchronously. Always check documentation for how given Observable\x0a     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\x0a     *\x0a     * @example \x3ccaption\x3eSubscribe with an Observer\x3c/caption\x3e\x0a     * const sumObserver = {\x0a     *   sum: 0,\x0a     *   next(value) {\x0a     *     console.log(\x27Adding: \x27 + value);\x0a     *     this.sum = this.sum + value;\x0a     *   },\x0a     *   error() { // We actually could just remove this method,\x0a     *   },        // since we do not really care about errors right now.\x0a     *   complete() {\x0a     *     console.log(\x27Sum equals: \x27 + this.sum);\x0a     *   }\x0a     * };\x0a     *\x0a     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\x0a     * .subscribe(sumObserver);\x0a     *\x0a     * // Logs:\x0a     * // \x22Adding: 1\x22\x0a     * // \x22Adding: 2\x22\x0a     * // \x22Adding: 3\x22\x0a     * // \x22Sum equals: 6\x22\x0a     *\x0a     *\x0a     * @example \x3ccaption\x3eSubscribe with functions\x3c/caption\x3e\x0a     * let sum = 0;\x0a     *\x0a     * Rx.Observable.of(1, 2, 3)\x0a     * .subscribe(\x0a     *   function(value) {\x0a     *     console.log(\x27Adding: \x27 + value);\x0a     *     sum = sum + value;\x0a     *   },\x0a     *   undefined,\x0a     *   function() {\x0a     *     console.log(\x27Sum equals: \x27 + sum);\x0a     *   }\x0a     * );\x0a     *\x0a     * // Logs:\x0a     * // \x22Adding: 1\x22\x0a     * // \x22Adding: 2\x22\x0a     * // \x22Adding: 3\x22\x0a     * // \x22Sum equals: 6\x22\x0a     *\x0a     *\x0a     * @example \x3ccaption\x3eCancel a subscription\x3c/caption\x3e\x0a     * const subscription = Rx.Observable.interval(1000).subscribe(\x0a     *   num =\x3e console.log(num),\x0a     *   undefined,\x0a     *   () =\x3e console.log(\x27completed!\x27) // Will not be called, even\x0a     * );                                // when cancelling subscription\x0a     *\x0a     *\x0a     * setTimeout(() =\x3e {\x0a     *   subscription.unsubscribe();\x0a     *   console.log(\x27unsubscribed!\x27);\x0a     * }, 2500);\x0a     *\x0a     * // Logs:\x0a     * // 0 after 1s\x0a     * // 1 after 2s\x0a     * // \x22unsubscribed!\x22 after 2.5s\x0a     *\x0a     *\x0a     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\x0a     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\x0a     *  Observable.\x0a     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\x0a     *  the error will be thrown as unhandled.\x0a     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\x0a     * @return {ISubscription} a subscription reference to the registered handlers\x0a     * @method subscribe\x0a     */\x0a    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\x0a        var operator = this.operator;\x0a        var sink = Object(__WEBPACK_IMPORTED_MODULE_1__util_toSubscriber__[\x22a\x22 /* toSubscriber */])(observerOrNext, error, complete);\x0a        if (operator) {\x0a            operator.call(sink, this.source);\x0a        }\x0a        else {\x0a            sink.add(this.source ? this._subscribe(sink) : this._trySubscribe(sink));\x0a        }\x0a        if (sink.syncErrorThrowable) {\x0a            sink.syncErrorThrowable = false;\x0a            if (sink.syncErrorThrown) {\x0a                throw sink.syncErrorValue;\x0a            }\x0a        }\x0a        return sink;\x0a    };\x0a    Observable.prototype._trySubscribe = function (sink) {\x0a        try {\x0a            return this._subscribe(sink);\x0a        }\x0a        catch (err) {\x0a            sink.syncErrorThrown = true;\x0a            sink.syncErrorValue = err;\x0a            sink.error(err);\x0a        }\x0a    };\x0a    /**\x0a     * @method forEach\x0a     * @param {Function} next a handler for each value emitted by the observable\x0a     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\x0a     * @return {Promise} a promise that either resolves on observable completion or\x0a     *  rejects with the handled error\x0a     */\x0a    Observable.prototype.forEach = function (next, PromiseCtor) {\x0a        var _this = this;\x0a        if (!PromiseCtor) {\x0a            if (__WEBPACK_IMPORTED_MODULE_0__util_root__[\x22a\x22 /* root */].Rx && __WEBPACK_IMPORTED_MODULE_0__util_root__[\x22a\x22 /* root */].Rx.config && __WEBPACK_IMPORTED_MODULE_0__util_root__[\x22a\x22 /* root */].Rx.config.Promise) {\x0a                PromiseCtor = __WEBPACK_IMPORTED_MODULE_0__util_root__[\x22a\x22 /* root */].Rx.config.Promise;\x0a            }\x0a            else if (__WEBPACK_IMPORTED_MODULE_0__util_root__[\x22a\x22 /* root */].Promise) {\x0a                PromiseCtor = __WEBPACK_IMPORTED_MODULE_0__util_root__[\x22a\x22 /* root */].Promise;\x0a            }\x0a        }\x0a        if (!PromiseCtor) {\x0a            throw new Error(\x27no Promise impl found\x27);\x0a        }\x0a        return new PromiseCtor(function (resolve, reject) {\x0a            // Must be declared in a separate statement to avoid a RefernceError when\x0a            // accessing subscription below in the closure due to Temporal Dead Zone.\x0a            var subscription;\x0a            subscription = _this.subscribe(function (value) {\x0a                if (subscription) {\x0a                    // if there is a subscription, then we can surmise\x0a                    // the next handling is asynchronous. Any errors thrown\x0a                    // need to be rejected explicitly and unsubscribe must be\x0a                    // called manually\x0a                    try {\x0a                        next(value);\x0a                    }\x0a                    catch (err) {\x0a                        reject(err);\x0a                        subscription.unsubscribe();\x0a                    }\x0a                }\x0a                else {\x0a                    // if there is NO subscription, then we\x27re getting a nexted\x0a                    // value synchronously during subscription. We can just call it.\x0a                    // If it errors, Observable\x27s `subscribe` will ensure the\x0a                    // unsubscription logic is called, then synchronously rethrow the error.\x0a                    // After that, Promise will trap the error and send it\x0a                    // down the rejection path.\x0a                    next(value);\x0a                }\x0a            }, reject, resolve);\x0a        });\x0a    };\x0a    Observable.prototype._subscribe = function (subscriber) {\x0a        return this.source.subscribe(subscriber);\x0a    };\x0a    /**\x0a     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\x0a     * @method Symbol.observable\x0a     * @return {Observable} this instance of the observable\x0a     */\x0a    Observable.prototype[__WEBPACK_IMPORTED_MODULE_2__symbol_observable__[\x22a\x22 /* observable */]] = function () {\x0a        return this;\x0a    };\x0a    /* tslint:enable:max-line-length */\x0a    /**\x0a     * Used to stitch together functional operators into a chain.\x0a     * @method pipe\x0a     * @return {Observable} the Observable result of all of the operators having\x0a     * been called in the order they were passed in.\x0a     *\x0a     * @example\x0a     *\x0a     * import { map, filter, scan } from \x27rxjs/operators\x27;\x0a     *\x0a     * Rx.Observable.interval(1000)\x0a     *   .pipe(\x0a     *     filter(x =\x3e x % 2 === 0),\x0a     *     map(x =\x3e x + x),\x0a     *     scan((acc, x) =\x3e acc + x)\x0a     *   )\x0a     *   .subscribe(x =\x3e console.log(x))\x0a     */\x0a    Observable.prototype.pipe = function () {\x0a        var operations = [];\x0a        for (var _i = 0; _i \x3c arguments.length; _i++) {\x0a            operations[_i - 0] = arguments[_i];\x0a        }\x0a        if (operations.length === 0) {\x0a            return this;\x0a        }\x0a        return Object(__WEBPACK_IMPORTED_MODULE_3__util_pipe__[\x22b\x22 /* pipeFromArray */])(operations)(this);\x0a    };\x0a    /* tslint:enable:max-line-length */\x0a    Observable.prototype.toPromise = function (PromiseCtor) {\x0a        var _this = this;\x0a        if (!PromiseCtor) {\x0a            if (__WEBPACK_IMPORTED_MODULE_0__util_root__[\x22a\x22 /* root */].Rx && __WEBPACK_IMPORTED_MODULE_0__util_root__[\x22a\x22 /* root */].Rx.config && __WEBPACK_IMPORTED_MODULE_0__util_root__[\x22a\x22 /* root */].Rx.config.Promise) {\x0a                PromiseCtor = __WEBPACK_IMPORTED_MODULE_0__util_root__[\x22a\x22 /* root */].Rx.config.Promise;\x0a            }\x0a            else if (__WEBPACK_IMPORTED_MODULE_0__util_root__[\x22a\x22 /* root */].Promise) {\x0a                PromiseCtor = __WEBPACK_IMPORTED_MODULE_0__util_root__[\x22a\x22 /* root */].Promise;\x0a            }\x0a        }\x0a        if (!PromiseCtor) {\x0a            throw new Error(\x27no Promise impl found\x27);\x0a        }\x0a        return new PromiseCtor(function (resolve, reject) {\x0a            var value;\x0a            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\x0a        });\x0a    };\x0a    // HACK: Since TypeScript inherits static properties too, we have to\x0a    // fight against TypeScript here so Subject can have a different static create signature\x0a    /**\x0a     * Creates a new cold Observable by calling the Observable constructor\x0a     * @static true\x0a     * @owner Observable\x0a     * @method create\x0a     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\x0a     * @return {Observable} a new cold observable\x0a     */\x0a    Observable.create = function (subscribe) {\x0a        return new Observable(subscribe);\x0a    };\x0a    return Observable;\x0a}());\x0a//# sourceMappingURL=Observable.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/Observer.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return empty; });\x0a/** PURE_IMPORTS_START  PURE_IMPORTS_END */\x0avar empty = {\x0a    closed: true,\x0a    next: function (value) { },\x0a    error: function (err) { throw err; },\x0a    complete: function () { }\x0a};\x0a//# sourceMappingURL=Observer.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/OuterSubscriber.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return OuterSubscriber; });\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Subscriber__ = __webpack_require__(\x22../../../../rxjs/_esm5/Subscriber.js\x22);\x0a/** PURE_IMPORTS_START ._Subscriber PURE_IMPORTS_END */\x0avar __extends = (this && this.__extends) || function (d, b) {\x0a    for (var p in b)\x0a        if (b.hasOwnProperty(p))\x0a            d[p] = b[p];\x0a    function __() { this.constructor = d; }\x0a    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\x0a};\x0a\x0a/**\x0a * We need this JSDoc comment for affecting ESDoc.\x0a * @ignore\x0a * @extends {Ignored}\x0a */\x0avar OuterSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\x0a    __extends(OuterSubscriber, _super);\x0a    function OuterSubscriber() {\x0a        _super.apply(this, arguments);\x0a    }\x0a    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\x0a        this.destination.next(innerValue);\x0a    };\x0a    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\x0a        this.destination.error(error);\x0a    };\x0a    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\x0a        this.destination.complete();\x0a    };\x0a    return OuterSubscriber;\x0a}(__WEBPACK_IMPORTED_MODULE_0__Subscriber__[\x22a\x22 /* Subscriber */]));\x0a//# sourceMappingURL=OuterSubscriber.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/Scheduler.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return Scheduler; });\x0a/**\x0a * An execution context and a data structure to order tasks and schedule their\x0a * execution. Provides a notion of (potentially virtual) time, through the\x0a * `now()` getter method.\x0a *\x0a * Each unit of work in a Scheduler is called an {@link Action}.\x0a *\x0a * ```ts\x0a * class Scheduler {\x0a *   now(): number;\x0a *   schedule(work, delay?, state?): Subscription;\x0a * }\x0a * ```\x0a *\x0a * @class Scheduler\x0a */\x0avar Scheduler = /*@__PURE__*/ (/*@__PURE__*/ function () {\x0a    function Scheduler(SchedulerAction, now) {\x0a        if (now === void 0) {\x0a            now = Scheduler.now;\x0a        }\x0a        this.SchedulerAction = SchedulerAction;\x0a        this.now = now;\x0a    }\x0a    /**\x0a     * Schedules a function, `work`, for execution. May happen at some point in\x0a     * the future, according to the `delay` parameter, if specified. May be passed\x0a     * some context object, `state`, which will be passed to the `work` function.\x0a     *\x0a     * The given arguments will be processed an stored as an Action object in a\x0a     * queue of actions.\x0a     *\x0a     * @param {function(state: ?T): ?Subscription} work A function representing a\x0a     * task, or some unit of work to be executed by the Scheduler.\x0a     * @param {number} [delay] Time to wait before executing the work, where the\x0a     * time unit is implicit and defined by the Scheduler itself.\x0a     * @param {T} [state] Some contextual data that the `work` function uses when\x0a     * called by the Scheduler.\x0a     * @return {Subscription} A subscription in order to be able to unsubscribe\x0a     * the scheduled work.\x0a     */\x0a    Scheduler.prototype.schedule = function (work, delay, state) {\x0a        if (delay === void 0) {\x0a            delay = 0;\x0a        }\x0a        return new this.SchedulerAction(this, work).schedule(state, delay);\x0a    };\x0a    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };\x0a    return Scheduler;\x0a}());\x0a//# sourceMappingURL=Scheduler.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/Subject.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22b\x22, function() { return SubjectSubscriber; });\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return Subject; });\x0a/* unused harmony export AnonymousSubject */\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(\x22../../../../rxjs/_esm5/Observable.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(\x22../../../../rxjs/_esm5/Subscriber.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Subscription__ = __webpack_require__(\x22../../../../rxjs/_esm5/Subscription.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_ObjectUnsubscribedError__ = __webpack_require__(\x22../../../../rxjs/_esm5/util/ObjectUnsubscribedError.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__SubjectSubscription__ = __webpack_require__(\x22../../../../rxjs/_esm5/SubjectSubscription.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__symbol_rxSubscriber__ = __webpack_require__(\x22../../../../rxjs/_esm5/symbol/rxSubscriber.js\x22);\x0a/** PURE_IMPORTS_START ._Observable,._Subscriber,._Subscription,._util_ObjectUnsubscribedError,._SubjectSubscription,._symbol_rxSubscriber PURE_IMPORTS_END */\x0avar __extends = (this && this.__extends) || function (d, b) {\x0a    for (var p in b)\x0a        if (b.hasOwnProperty(p))\x0a            d[p] = b[p];\x0a    function __() { this.constructor = d; }\x0a    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\x0a};\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * @class SubjectSubscriber\x3cT\x3e\x0a */\x0avar SubjectSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\x0a    __extends(SubjectSubscriber, _super);\x0a    function SubjectSubscriber(destination) {\x0a        _super.call(this, destination);\x0a        this.destination = destination;\x0a    }\x0a    return SubjectSubscriber;\x0a}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__[\x22a\x22 /* Subscriber */]));\x0a/**\x0a * @class Subject\x3cT\x3e\x0a */\x0avar Subject = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\x0a    __extends(Subject, _super);\x0a    function Subject() {\x0a        _super.call(this);\x0a        this.observers = [];\x0a        this.closed = false;\x0a        this.isStopped = false;\x0a        this.hasError = false;\x0a        this.thrownError = null;\x0a    }\x0a    Subject.prototype[__WEBPACK_IMPORTED_MODULE_5__symbol_rxSubscriber__[\x22a\x22 /* rxSubscriber */]] = function () {\x0a        return new SubjectSubscriber(this);\x0a    };\x0a    Subject.prototype.lift = function (operator) {\x0a        var subject = new AnonymousSubject(this, this);\x0a        subject.operator = operator;\x0a        return subject;\x0a    };\x0a    Subject.prototype.next = function (value) {\x0a        if (this.closed) {\x0a            throw new __WEBPACK_IMPORTED_MODULE_3__util_ObjectUnsubscribedError__[\x22a\x22 /* ObjectUnsubscribedError */]();\x0a        }\x0a        if (!this.isStopped) {\x0a            var observers = this.observers;\x0a            var len = observers.length;\x0a            var copy = observers.slice();\x0a            for (var i = 0; i \x3c len; i++) {\x0a                copy[i].next(value);\x0a            }\x0a        }\x0a    };\x0a    Subject.prototype.error = function (err) {\x0a        if (this.closed) {\x0a            throw new __WEBPACK_IMPORTED_MODULE_3__util_ObjectUnsubscribedError__[\x22a\x22 /* ObjectUnsubscribedError */]();\x0a        }\x0a        this.hasError = true;\x0a        this.thrownError = err;\x0a        this.isStopped = true;\x0a        var observers = this.observers;\x0a        var len = observers.length;\x0a        var copy = observers.slice();\x0a        for (var i = 0; i \x3c len; i++) {\x0a            copy[i].error(err);\x0a        }\x0a        this.observers.length = 0;\x0a    };\x0a    Subject.prototype.complete = function () {\x0a        if (this.closed) {\x0a            throw new __WEBPACK_IMPORTED_MODULE_3__util_ObjectUnsubscribedError__[\x22a\x22 /* ObjectUnsubscribedError */]();\x0a        }\x0a        this.isStopped = true;\x0a        var observers = this.observers;\x0a        var len = observers.length;\x0a        var copy = observers.slice();\x0a        for (var i = 0; i \x3c len; i++) {\x0a            copy[i].complete();\x0a        }\x0a        this.observers.length = 0;\x0a    };\x0a    Subject.prototype.unsubscribe = function () {\x0a        this.isStopped = true;\x0a        this.closed = true;\x0a        this.observers = null;\x0a    };\x0a    Subject.prototype._trySubscribe = function (subscriber) {\x0a        if (this.closed) {\x0a            throw new __WEBPACK_IMPORTED_MODULE_3__util_ObjectUnsubscribedError__[\x22a\x22 /* ObjectUnsubscribedError */]();\x0a        }\x0a        else {\x0a            return _super.prototype._trySubscribe.call(this, subscriber);\x0a        }\x0a    };\x0a    Subject.prototype._subscribe = function (subscriber) {\x0a        if (this.closed) {\x0a            throw new __WEBPACK_IMPORTED_MODULE_3__util_ObjectUnsubscribedError__[\x22a\x22 /* ObjectUnsubscribedError */]();\x0a        }\x0a        else if (this.hasError) {\x0a            subscriber.error(this.thrownError);\x0a            return __WEBPACK_IMPORTED_MODULE_2__Subscription__[\x22a\x22 /* Subscription */].EMPTY;\x0a        }\x0a        else if (this.isStopped) {\x0a            subscriber.complete();\x0a            return __WEBPACK_IMPORTED_MODULE_2__Subscription__[\x22a\x22 /* Subscription */].EMPTY;\x0a        }\x0a        else {\x0a            this.observers.push(subscriber);\x0a            return new __WEBPACK_IMPORTED_MODULE_4__SubjectSubscription__[\x22a\x22 /* SubjectSubscription */](this, subscriber);\x0a        }\x0a    };\x0a    Subject.prototype.asObservable = function () {\x0a        var observable = new __WEBPACK_IMPORTED_MODULE_0__Observable__[\x22a\x22 /* Observable */]();\x0a        observable.source = this;\x0a        return observable;\x0a    };\x0a    Subject.create = function (destination, source) {\x0a        return new AnonymousSubject(destination, source);\x0a    };\x0a    return Subject;\x0a}(__WEBPACK_IMPORTED_MODULE_0__Observable__[\x22a\x22 /* Observable */]));\x0a/**\x0a * @class AnonymousSubject\x3cT\x3e\x0a */\x0avar AnonymousSubject = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\x0a    __extends(AnonymousSubject, _super);\x0a    function AnonymousSubject(destination, source) {\x0a        _super.call(this);\x0a        this.destination = destination;\x0a        this.source = source;\x0a    }\x0a    AnonymousSubject.prototype.next = function (value) {\x0a        var destination = this.destination;\x0a        if (destination && destination.next) {\x0a            destination.next(value);\x0a        }\x0a    };\x0a    AnonymousSubject.prototype.error = function (err) {\x0a        var destination = this.destination;\x0a        if (destination && destination.error) {\x0a            this.destination.error(err);\x0a        }\x0a    };\x0a    AnonymousSubject.prototype.complete = function () {\x0a        var destination = this.destination;\x0a        if (destination && destination.complete) {\x0a            this.destination.complete();\x0a        }\x0a    };\x0a    AnonymousSubject.prototype._subscribe = function (subscriber) {\x0a        var source = this.source;\x0a        if (source) {\x0a            return this.source.subscribe(subscriber);\x0a        }\x0a        else {\x0a            return __WEBPACK_IMPORTED_MODULE_2__Subscription__[\x22a\x22 /* Subscription */].EMPTY;\x0a        }\x0a    };\x0a    return AnonymousSubject;\x0a}(Subject));\x0a//# sourceMappingURL=Subject.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/SubjectSubscription.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return SubjectSubscription; });\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Subscription__ = __webpack_require__(\x22../../../../rxjs/_esm5/Subscription.js\x22);\x0a/** PURE_IMPORTS_START ._Subscription PURE_IMPORTS_END */\x0avar __extends = (this && this.__extends) || function (d, b) {\x0a    for (var p in b)\x0a        if (b.hasOwnProperty(p))\x0a            d[p] = b[p];\x0a    function __() { this.constructor = d; }\x0a    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\x0a};\x0a\x0a/**\x0a * We need this JSDoc comment for affecting ESDoc.\x0a * @ignore\x0a * @extends {Ignored}\x0a */\x0avar SubjectSubscription = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\x0a    __extends(SubjectSubscription, _super);\x0a    function SubjectSubscription(subject, subscriber) {\x0a        _super.call(this);\x0a        this.subject = subject;\x0a        this.subscriber = subscriber;\x0a        this.closed = false;\x0a    }\x0a    SubjectSubscription.prototype.unsubscribe = function () {\x0a        if (this.closed) {\x0a            return;\x0a        }\x0a        this.closed = true;\x0a        var subject = this.subject;\x0a        var observers = subject.observers;\x0a        this.subject = null;\x0a        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\x0a            return;\x0a        }\x0a        var subscriberIndex = observers.indexOf(this.subscriber);\x0a        if (subscriberIndex !== -1) {\x0a            observers.splice(subscriberIndex, 1);\x0a        }\x0a    };\x0a    return SubjectSubscription;\x0a}(__WEBPACK_IMPORTED_MODULE_0__Subscription__[\x22a\x22 /* Subscription */]));\x0a//# sourceMappingURL=SubjectSubscription.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/Subscriber.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return Subscriber; });\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_isFunction__ = __webpack_require__(\x22../../../../rxjs/_esm5/util/isFunction.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscription__ = __webpack_require__(\x22../../../../rxjs/_esm5/Subscription.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Observer__ = __webpack_require__(\x22../../../../rxjs/_esm5/Observer.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__symbol_rxSubscriber__ = __webpack_require__(\x22../../../../rxjs/_esm5/symbol/rxSubscriber.js\x22);\x0a/** PURE_IMPORTS_START ._util_isFunction,._Subscription,._Observer,._symbol_rxSubscriber PURE_IMPORTS_END */\x0avar __extends = (this && this.__extends) || function (d, b) {\x0a    for (var p in b)\x0a        if (b.hasOwnProperty(p))\x0a            d[p] = b[p];\x0a    function __() { this.constructor = d; }\x0a    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\x0a};\x0a\x0a\x0a\x0a\x0a/**\x0a * Implements the {@link Observer} interface and extends the\x0a * {@link Subscription} class. While the {@link Observer} is the public API for\x0a * consuming the values of an {@link Observable}, all Observers get converted to\x0a * a Subscriber, in order to provide Subscription-like capabilities such as\x0a * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\x0a * implementing operators, but it is rarely used as a public API.\x0a *\x0a * @class Subscriber\x3cT\x3e\x0a */\x0avar Subscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\x0a    __extends(Subscriber, _super);\x0a    /**\x0a     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\x0a     * defined Observer or a `next` callback function.\x0a     * @param {function(e: ?any): void} [error] The `error` callback of an\x0a     * Observer.\x0a     * @param {function(): void} [complete] The `complete` callback of an\x0a     * Observer.\x0a     */\x0a    function Subscriber(destinationOrNext, error, complete) {\x0a        _super.call(this);\x0a        this.syncErrorValue = null;\x0a        this.syncErrorThrown = false;\x0a        this.syncErrorThrowable = false;\x0a        this.isStopped = false;\x0a        switch (arguments.length) {\x0a            case 0:\x0a                this.destination = __WEBPACK_IMPORTED_MODULE_2__Observer__[\x22a\x22 /* empty */];\x0a                break;\x0a            case 1:\x0a                if (!destinationOrNext) {\x0a                    this.destination = __WEBPACK_IMPORTED_MODULE_2__Observer__[\x22a\x22 /* empty */];\x0a                    break;\x0a                }\x0a                if (typeof destinationOrNext === \x27object\x27) {\x0a                    if (destinationOrNext instanceof Subscriber) {\x0a                        this.destination = destinationOrNext;\x0a                        this.destination.add(this);\x0a                    }\x0a                    else {\x0a                        this.syncErrorThrowable = true;\x0a                        this.destination = new SafeSubscriber(this, destinationOrNext);\x0a                    }\x0a                    break;\x0a                }\x0a            default:\x0a                this.syncErrorThrowable = true;\x0a                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\x0a                break;\x0a        }\x0a    }\x0a    Subscriber.prototype[__WEBPACK_IMPORTED_MODULE_3__symbol_rxSubscriber__[\x22a\x22 /* rxSubscriber */]] = function () { return this; };\x0a    /**\x0a     * A static factory for a Subscriber, given a (potentially partial) definition\x0a     * of an Observer.\x0a     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\x0a     * @param {function(e: ?any): void} [error] The `error` callback of an\x0a     * Observer.\x0a     * @param {function(): void} [complete] The `complete` callback of an\x0a     * Observer.\x0a     * @return {Subscriber\x3cT\x3e} A Subscriber wrapping the (partially defined)\x0a     * Observer represented by the given arguments.\x0a     */\x0a    Subscriber.create = function (next, error, complete) {\x0a        var subscriber = new Subscriber(next, error, complete);\x0a        subscriber.syncErrorThrowable = false;\x0a        return subscriber;\x0a    };\x0a    /**\x0a     * The {@link Observer} callback to receive notifications of type `next` from\x0a     * the Observable, with a value. The Observable may call this method 0 or more\x0a     * times.\x0a     * @param {T} [value] The `next` value.\x0a     * @return {void}\x0a     */\x0a    Subscriber.prototype.next = function (value) {\x0a        if (!this.isStopped) {\x0a            this._next(value);\x0a        }\x0a    };\x0a    /**\x0a     * The {@link Observer} callback to receive notifications of type `error` from\x0a     * the Observable, with an attached {@link Error}. Notifies the Observer that\x0a     * the Observable has experienced an error condition.\x0a     * @param {any} [err] The `error` exception.\x0a     * @return {void}\x0a     */\x0a    Subscriber.prototype.error = function (err) {\x0a        if (!this.isStopped) {\x0a            this.isStopped = true;\x0a            this._error(err);\x0a        }\x0a    };\x0a    /**\x0a     * The {@link Observer} callback to receive a valueless notification of type\x0a     * `complete` from the Observable. Notifies the Observer that the Observable\x0a     * has finished sending push-based notifications.\x0a     * @return {void}\x0a     */\x0a    Subscriber.prototype.complete = function () {\x0a        if (!this.isStopped) {\x0a            this.isStopped = true;\x0a            this._complete();\x0a        }\x0a    };\x0a    Subscriber.prototype.unsubscribe = function () {\x0a        if (this.closed) {\x0a            return;\x0a        }\x0a        this.isStopped = true;\x0a        _super.prototype.unsubscribe.call(this);\x0a    };\x0a    Subscriber.prototype._next = function (value) {\x0a        this.destination.next(value);\x0a    };\x0a    Subscriber.prototype._error = function (err) {\x0a        this.destination.error(err);\x0a        this.unsubscribe();\x0a    };\x0a    Subscriber.prototype._complete = function () {\x0a        this.destination.complete();\x0a        this.unsubscribe();\x0a    };\x0a    Subscriber.prototype._unsubscribeAndRecycle = function () {\x0a        var _a = this, _parent = _a._parent, _parents = _a._parents;\x0a        this._parent = null;\x0a        this._parents = null;\x0a        this.unsubscribe();\x0a        this.closed = false;\x0a        this.isStopped = false;\x0a        this._parent = _parent;\x0a        this._parents = _parents;\x0a        return this;\x0a    };\x0a    return Subscriber;\x0a}(__WEBPACK_IMPORTED_MODULE_1__Subscription__[\x22a\x22 /* Subscription */]));\x0a/**\x0a * We need this JSDoc comment for affecting ESDoc.\x0a * @ignore\x0a * @extends {Ignored}\x0a */\x0avar SafeSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\x0a    __extends(SafeSubscriber, _super);\x0a    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\x0a        _super.call(this);\x0a        this._parentSubscriber = _parentSubscriber;\x0a        var next;\x0a        var context = this;\x0a        if (Object(__WEBPACK_IMPORTED_MODULE_0__util_isFunction__[\x22a\x22 /* isFunction */])(observerOrNext)) {\x0a            next = observerOrNext;\x0a        }\x0a        else if (observerOrNext) {\x0a            next = observerOrNext.next;\x0a            error = observerOrNext.error;\x0a            complete = observerOrNext.complete;\x0a            if (observerOrNext !== __WEBPACK_IMPORTED_MODULE_2__Observer__[\x22a\x22 /* empty */]) {\x0a                context = Object.create(observerOrNext);\x0a                if (Object(__WEBPACK_IMPORTED_MODULE_0__util_isFunction__[\x22a\x22 /* isFunction */])(context.unsubscribe)) {\x0a                    this.add(context.unsubscribe.bind(context));\x0a                }\x0a                context.unsubscribe = this.unsubscribe.bind(this);\x0a            }\x0a        }\x0a        this._context = context;\x0a        this._next = next;\x0a        this._error = error;\x0a        this._complete = complete;\x0a    }\x0a    SafeSubscriber.prototype.next = function (value) {\x0a        if (!this.isStopped && this._next) {\x0a            var _parentSubscriber = this._parentSubscriber;\x0a            if (!_parentSubscriber.syncErrorThrowable) {\x0a                this.__tryOrUnsub(this._next, value);\x0a            }\x0a            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\x0a                this.unsubscribe();\x0a            }\x0a        }\x0a    };\x0a    SafeSubscriber.prototype.error = function (err) {\x0a        if (!this.isStopped) {\x0a            var _parentSubscriber = this._parentSubscriber;\x0a            if (this._error) {\x0a                if (!_parentSubscriber.syncErrorThrowable) {\x0a                    this.__tryOrUnsub(this._error, err);\x0a                    this.unsubscribe();\x0a                }\x0a                else {\x0a                    this.__tryOrSetError(_parentSubscriber, this._error, err);\x0a                    this.unsubscribe();\x0a                }\x0a            }\x0a            else if (!_parentSubscriber.syncErrorThrowable) {\x0a                this.unsubscribe();\x0a                throw err;\x0a            }\x0a            else {\x0a                _parentSubscriber.syncErrorValue = err;\x0a                _parentSubscriber.syncErrorThrown = true;\x0a                this.unsubscribe();\x0a            }\x0a        }\x0a    };\x0a    SafeSubscriber.prototype.complete = function () {\x0a        var _this = this;\x0a        if (!this.isStopped) {\x0a            var _parentSubscriber = this._parentSubscriber;\x0a            if (this._complete) {\x0a                var wrappedComplete = function () { return _this._complete.call(_this._context); };\x0a                if (!_parentSubscriber.syncErrorThrowable) {\x0a                    this.__tryOrUnsub(wrappedComplete);\x0a                    this.unsubscribe();\x0a                }\x0a                else {\x0a                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\x0a                    this.unsubscribe();\x0a                }\x0a            }\x0a            else {\x0a                this.unsubscribe();\x0a            }\x0a        }\x0a    };\x0a    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\x0a        try {\x0a            fn.call(this._context, value);\x0a        }\x0a        catch (err) {\x0a            this.unsubscribe();\x0a            throw err;\x0a        }\x0a    };\x0a    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\x0a        try {\x0a            fn.call(this._context, value);\x0a        }\x0a        catch (err) {\x0a            parent.syncErrorValue = err;\x0a            parent.syncErrorThrown = true;\x0a            return true;\x0a        }\x0a        return false;\x0a    };\x0a    SafeSubscriber.prototype._unsubscribe = function () {\x0a        var _parentSubscriber = this._parentSubscriber;\x0a        this._context = null;\x0a        this._parentSubscriber = null;\x0a        _parentSubscriber.unsubscribe();\x0a    };\x0a    return SafeSubscriber;\x0a}(Subscriber));\x0a//# sourceMappingURL=Subscriber.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/Subscription.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return Subscription; });\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_isArray__ = __webpack_require__(\x22../../../../rxjs/_esm5/util/isArray.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_isObject__ = __webpack_require__(\x22../../../../rxjs/_esm5/util/isObject.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_isFunction__ = __webpack_require__(\x22../../../../rxjs/_esm5/util/isFunction.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_tryCatch__ = __webpack_require__(\x22../../../../rxjs/_esm5/util/tryCatch.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_errorObject__ = __webpack_require__(\x22../../../../rxjs/_esm5/util/errorObject.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_UnsubscriptionError__ = __webpack_require__(\x22../../../../rxjs/_esm5/util/UnsubscriptionError.js\x22);\x0a/** PURE_IMPORTS_START ._util_isArray,._util_isObject,._util_isFunction,._util_tryCatch,._util_errorObject,._util_UnsubscriptionError PURE_IMPORTS_END */\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Represents a disposable resource, such as the execution of an Observable. A\x0a * Subscription has one important method, `unsubscribe`, that takes no argument\x0a * and just disposes the resource held by the subscription.\x0a *\x0a * Additionally, subscriptions may be grouped together through the `add()`\x0a * method, which will attach a child Subscription to the current Subscription.\x0a * When a Subscription is unsubscribed, all its children (and its grandchildren)\x0a * will be unsubscribed as well.\x0a *\x0a * @class Subscription\x0a */\x0avar Subscription = /*@__PURE__*/ (/*@__PURE__*/ function () {\x0a    /**\x0a     * @param {function(): void} [unsubscribe] A function describing how to\x0a     * perform the disposal of resources when the `unsubscribe` method is called.\x0a     */\x0a    function Subscription(unsubscribe) {\x0a        /**\x0a         * A flag to indicate whether this Subscription has already been unsubscribed.\x0a         * @type {boolean}\x0a         */\x0a        this.closed = false;\x0a        this._parent = null;\x0a        this._parents = null;\x0a        this._subscriptions = null;\x0a        if (unsubscribe) {\x0a            this._unsubscribe = unsubscribe;\x0a        }\x0a    }\x0a    /**\x0a     * Disposes the resources held by the subscription. May, for instance, cancel\x0a     * an ongoing Observable execution or cancel any other type of work that\x0a     * started when the Subscription was created.\x0a     * @return {void}\x0a     */\x0a    Subscription.prototype.unsubscribe = function () {\x0a        var hasErrors = false;\x0a        var errors;\x0a        if (this.closed) {\x0a            return;\x0a        }\x0a        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\x0a        this.closed = true;\x0a        this._parent = null;\x0a        this._parents = null;\x0a        // null out _subscriptions first so any child subscriptions that attempt\x0a        // to remove themselves from this subscription will noop\x0a        this._subscriptions = null;\x0a        var index = -1;\x0a        var len = _parents ? _parents.length : 0;\x0a        // if this._parent is null, then so is this._parents, and we\x0a        // don\x27t have to remove ourselves from any parent subscriptions.\x0a        while (_parent) {\x0a            _parent.remove(this);\x0a            // if this._parents is null or index \x3e= len,\x0a            // then _parent is set to null, and the loop exits\x0a            _parent = ++index \x3c len && _parents[index] || null;\x0a        }\x0a        if (Object(__WEBPACK_IMPORTED_MODULE_2__util_isFunction__[\x22a\x22 /* isFunction */])(_unsubscribe)) {\x0a            var trial = Object(__WEBPACK_IMPORTED_MODULE_3__util_tryCatch__[\x22a\x22 /* tryCatch */])(_unsubscribe).call(this);\x0a            if (trial === __WEBPACK_IMPORTED_MODULE_4__util_errorObject__[\x22a\x22 /* errorObject */]) {\x0a                hasErrors = true;\x0a                errors = errors || (__WEBPACK_IMPORTED_MODULE_4__util_errorObject__[\x22a\x22 /* errorObject */].e instanceof __WEBPACK_IMPORTED_MODULE_5__util_UnsubscriptionError__[\x22a\x22 /* UnsubscriptionError */] ?\x0a                    flattenUnsubscriptionErrors(__WEBPACK_IMPORTED_MODULE_4__util_errorObject__[\x22a\x22 /* errorObject */].e.errors) : [__WEBPACK_IMPORTED_MODULE_4__util_errorObject__[\x22a\x22 /* errorObject */].e]);\x0a            }\x0a        }\x0a        if (Object(__WEBPACK_IMPORTED_MODULE_0__util_isArray__[\x22a\x22 /* isArray */])(_subscriptions)) {\x0a            index = -1;\x0a            len = _subscriptions.length;\x0a            while (++index \x3c len) {\x0a                var sub = _subscriptions[index];\x0a                if (Object(__WEBPACK_IMPORTED_MODULE_1__util_isObject__[\x22a\x22 /* isObject */])(sub)) {\x0a                    var trial = Object(__WEBPACK_IMPORTED_MODULE_3__util_tryCatch__[\x22a\x22 /* tryCatch */])(sub.unsubscribe).call(sub);\x0a                    if (trial === __WEBPACK_IMPORTED_MODULE_4__util_errorObject__[\x22a\x22 /* errorObject */]) {\x0a                        hasErrors = true;\x0a                        errors = errors || [];\x0a                        var err = __WEBPACK_IMPORTED_MODULE_4__util_errorObject__[\x22a\x22 /* errorObject */].e;\x0a                        if (err instanceof __WEBPACK_IMPORTED_MODULE_5__util_UnsubscriptionError__[\x22a\x22 /* UnsubscriptionError */]) {\x0a                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\x0a                        }\x0a                        else {\x0a                            errors.push(err);\x0a                        }\x0a                    }\x0a                }\x0a            }\x0a        }\x0a        if (hasErrors) {\x0a            throw new __WEBPACK_IMPORTED_MODULE_5__util_UnsubscriptionError__[\x22a\x22 /* UnsubscriptionError */](errors);\x0a        }\x0a    };\x0a    /**\x0a     * Adds a tear down to be called during the unsubscribe() of this\x0a     * Subscription.\x0a     *\x0a     * If the tear down being added is a subscription that is already\x0a     * unsubscribed, is the same reference `add` is being called on, or is\x0a     * `Subscription.EMPTY`, it will not be added.\x0a     *\x0a     * If this subscription is already in an `closed` state, the passed\x0a     * tear down logic will be executed immediately.\x0a     *\x0a     * @param {TeardownLogic} teardown The additional logic to execute on\x0a     * teardown.\x0a     * @return {Subscription} Returns the Subscription used or created to be\x0a     * added to the inner subscriptions list. This Subscription can be used with\x0a     * `remove()` to remove the passed teardown logic from the inner subscriptions\x0a     * list.\x0a     */\x0a    Subscription.prototype.add = function (teardown) {\x0a        if (!teardown || (teardown === Subscription.EMPTY)) {\x0a            return Subscription.EMPTY;\x0a        }\x0a        if (teardown === this) {\x0a            return this;\x0a        }\x0a        var subscription = teardown;\x0a        switch (typeof teardown) {\x0a            case \x27function\x27:\x0a                subscription = new Subscription(teardown);\x0a            case \x27object\x27:\x0a                if (subscription.closed || typeof subscription.unsubscribe !== \x27function\x27) {\x0a                    return subscription;\x0a                }\x0a                else if (this.closed) {\x0a                    subscription.unsubscribe();\x0a                    return subscription;\x0a                }\x0a                else if (typeof subscription._addParent !== \x27function\x27 /* quack quack */) {\x0a                    var tmp = subscription;\x0a                    subscription = new Subscription();\x0a                    subscription._subscriptions = [tmp];\x0a                }\x0a                break;\x0a            default:\x0a                throw new Error(\x27unrecognized teardown \x27 + teardown + \x27 added to Subscription.\x27);\x0a        }\x0a        var subscriptions = this._subscriptions || (this._subscriptions = []);\x0a        subscriptions.push(subscription);\x0a        subscription._addParent(this);\x0a        return subscription;\x0a    };\x0a    /**\x0a     * Removes a Subscription from the internal list of subscriptions that will\x0a     * unsubscribe during the unsubscribe process of this Subscription.\x0a     * @param {Subscription} subscription The subscription to remove.\x0a     * @return {void}\x0a     */\x0a    Subscription.prototype.remove = function (subscription) {\x0a        var subscriptions = this._subscriptions;\x0a        if (subscriptions) {\x0a            var subscriptionIndex = subscriptions.indexOf(subscription);\x0a            if (subscriptionIndex !== -1) {\x0a                subscriptions.splice(subscriptionIndex, 1);\x0a            }\x0a        }\x0a    };\x0a    Subscription.prototype._addParent = function (parent) {\x0a        var _a = this, _parent = _a._parent, _parents = _a._parents;\x0a        if (!_parent || _parent === parent) {\x0a            // If we don\x27t have a parent, or the new parent is the same as the\x0a            // current parent, then set this._parent to the new parent.\x0a            this._parent = parent;\x0a        }\x0a        else if (!_parents) {\x0a            // If there\x27s already one parent, but not multiple, allocate an Array to\x0a            // store the rest of the parent Subscriptions.\x0a            this._parents = [parent];\x0a        }\x0a        else if (_parents.indexOf(parent) === -1) {\x0a            // Only add the new parent to the _parents list if it\x27s not already there.\x0a            _parents.push(parent);\x0a        }\x0a    };\x0a    Subscription.EMPTY = (function (empty) {\x0a        empty.closed = true;\x0a        return empty;\x0a    }(new Subscription()));\x0a    return Subscription;\x0a}());\x0afunction flattenUnsubscriptionErrors(errors) {\x0a    return errors.reduce(function (errs, err) { return errs.concat((err instanceof __WEBPACK_IMPORTED_MODULE_5__util_UnsubscriptionError__[\x22a\x22 /* UnsubscriptionError */]) ? err.errors : err); }, []);\x0a}\x0a//# sourceMappingURL=Subscription.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/add/observable/of.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(\x22../../../../rxjs/_esm5/Observable.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__observable_of__ = __webpack_require__(\x22../../../../rxjs/_esm5/observable/of.js\x22);\x0a/** PURE_IMPORTS_START .._.._Observable,.._.._observable_of PURE_IMPORTS_END */\x0a\x0a\x0a__WEBPACK_IMPORTED_MODULE_0__Observable__[\x22a\x22 /* Observable */].of = __WEBPACK_IMPORTED_MODULE_1__observable_of__[\x22a\x22 /* of */];\x0a//# sourceMappingURL=of.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/add/operator/delay.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(\x22../../../../rxjs/_esm5/Observable.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__operator_delay__ = __webpack_require__(\x22../../../../rxjs/_esm5/operator/delay.js\x22);\x0a/** PURE_IMPORTS_START .._.._Observable,.._.._operator_delay PURE_IMPORTS_END */\x0a\x0a\x0a__WEBPACK_IMPORTED_MODULE_0__Observable__[\x22a\x22 /* Observable */].prototype.delay = __WEBPACK_IMPORTED_MODULE_1__operator_delay__[\x22a\x22 /* delay */];\x0a//# sourceMappingURL=delay.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/add/operator/do.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(\x22../../../../rxjs/_esm5/Observable.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__operator_do__ = __webpack_require__(\x22../../../../rxjs/_esm5/operator/do.js\x22);\x0a/** PURE_IMPORTS_START .._.._Observable,.._.._operator_do PURE_IMPORTS_END */\x0a\x0a\x0a__WEBPACK_IMPORTED_MODULE_0__Observable__[\x22a\x22 /* Observable */].prototype.do = __WEBPACK_IMPORTED_MODULE_1__operator_do__[\x22a\x22 /* _do */];\x0a__WEBPACK_IMPORTED_MODULE_0__Observable__[\x22a\x22 /* Observable */].prototype._do = __WEBPACK_IMPORTED_MODULE_1__operator_do__[\x22a\x22 /* _do */];\x0a//# sourceMappingURL=do.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/observable/ArrayLikeObservable.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return ArrayLikeObservable; });\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(\x22../../../../rxjs/_esm5/Observable.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ScalarObservable__ = __webpack_require__(\x22../../../../rxjs/_esm5/observable/ScalarObservable.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__EmptyObservable__ = __webpack_require__(\x22../../../../rxjs/_esm5/observable/EmptyObservable.js\x22);\x0a/** PURE_IMPORTS_START .._Observable,._ScalarObservable,._EmptyObservable PURE_IMPORTS_END */\x0avar __extends = (this && this.__extends) || function (d, b) {\x0a    for (var p in b)\x0a        if (b.hasOwnProperty(p))\x0a            d[p] = b[p];\x0a    function __() { this.constructor = d; }\x0a    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\x0a};\x0a\x0a\x0a\x0a/**\x0a * We need this JSDoc comment for affecting ESDoc.\x0a * @extends {Ignored}\x0a * @hide true\x0a */\x0avar ArrayLikeObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\x0a    __extends(ArrayLikeObservable, _super);\x0a    function ArrayLikeObservable(arrayLike, scheduler) {\x0a        _super.call(this);\x0a        this.arrayLike = arrayLike;\x0a        this.scheduler = scheduler;\x0a        if (!scheduler && arrayLike.length === 1) {\x0a            this._isScalar = true;\x0a            this.value = arrayLike[0];\x0a        }\x0a    }\x0a    ArrayLikeObservable.create = function (arrayLike, scheduler) {\x0a        var length = arrayLike.length;\x0a        if (length === 0) {\x0a            return new __WEBPACK_IMPORTED_MODULE_2__EmptyObservable__[\x22a\x22 /* EmptyObservable */]();\x0a        }\x0a        else if (length === 1) {\x0a            return new __WEBPACK_IMPORTED_MODULE_1__ScalarObservable__[\x22a\x22 /* ScalarObservable */](arrayLike[0], scheduler);\x0a        }\x0a        else {\x0a            return new ArrayLikeObservable(arrayLike, scheduler);\x0a        }\x0a    };\x0a    ArrayLikeObservable.dispatch = function (state) {\x0a        var arrayLike = state.arrayLike, index = state.index, length = state.length, subscriber = state.subscriber;\x0a        if (subscriber.closed) {\x0a            return;\x0a        }\x0a        if (index \x3e= length) {\x0a            subscriber.complete();\x0a            return;\x0a        }\x0a        subscriber.next(arrayLike[index]);\x0a        state.index = index + 1;\x0a        this.schedule(state);\x0a    };\x0a    ArrayLikeObservable.prototype._subscribe = function (subscriber) {\x0a        var index = 0;\x0a        var _a = this, arrayLike = _a.arrayLike, scheduler = _a.scheduler;\x0a        var length = arrayLike.length;\x0a        if (scheduler) {\x0a            return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {\x0a                arrayLike: arrayLike, index: index, length: length, subscriber: subscriber\x0a            });\x0a        }\x0a        else {\x0a            for (var i = 0; i \x3c length && !subscriber.closed; i++) {\x0a                subscriber.next(arrayLike[i]);\x0a            }\x0a            subscriber.complete();\x0a        }\x0a    };\x0a    return ArrayLikeObservable;\x0a}(__WEBPACK_IMPORTED_MODULE_0__Observable__[\x22a\x22 /* Observable */]));\x0a//# sourceMappingURL=ArrayLikeObservable.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/observable/ArrayObservable.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return ArrayObservable; });\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(\x22../../../../rxjs/_esm5/Observable.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ScalarObservable__ = __webpack_require__(\x22../../../../rxjs/_esm5/observable/ScalarObservable.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__EmptyObservable__ = __webpack_require__(\x22../../../../rxjs/_esm5/observable/EmptyObservable.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_isScheduler__ = __webpack_require__(\x22../../../../rxjs/_esm5/util/isScheduler.js\x22);\x0a/** PURE_IMPORTS_START .._Observable,._ScalarObservable,._EmptyObservable,.._util_isScheduler PURE_IMPORTS_END */\x0avar __extends = (this && this.__extends) || function (d, b) {\x0a    for (var p in b)\x0a        if (b.hasOwnProperty(p))\x0a            d[p] = b[p];\x0a    function __() { this.constructor = d; }\x0a    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\x0a};\x0a\x0a\x0a\x0a\x0a/**\x0a * We need this JSDoc comment for affecting ESDoc.\x0a * @extends {Ignored}\x0a * @hide true\x0a */\x0avar ArrayObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\x0a    __extends(ArrayObservable, _super);\x0a    function ArrayObservable(array, scheduler) {\x0a        _super.call(this);\x0a        this.array = array;\x0a        this.scheduler = scheduler;\x0a        if (!scheduler && array.length === 1) {\x0a            this._isScalar = true;\x0a            this.value = array[0];\x0a        }\x0a    }\x0a    ArrayObservable.create = function (array, scheduler) {\x0a        return new ArrayObservable(array, scheduler);\x0a    };\x0a    /**\x0a     * Creates an Observable that emits some values you specify as arguments,\x0a     * immediately one after the other, and then emits a complete notification.\x0a     *\x0a     * \x3cspan class=\x22informal\x22\x3eEmits the arguments you provide, then completes.\x0a     * \x3c/span\x3e\x0a     *\x0a     * \x3cimg src=\x22./img/of.png\x22 width=\x22100%\x22\x3e\x0a     *\x0a     * This static operator is useful for creating a simple Observable that only\x0a     * emits the arguments given, and the complete notification thereafter. It can\x0a     * be used for composing with other Observables, such as with {@link concat}.\x0a     * By default, it uses a `null` IScheduler, which means the `next`\x0a     * notifications are sent synchronously, although with a different IScheduler\x0a     * it is possible to determine when those notifications will be delivered.\x0a     *\x0a     * @example \x3ccaption\x3eEmit 10, 20, 30, then \x27a\x27, \x27b\x27, \x27c\x27, then start ticking every second.\x3c/caption\x3e\x0a     * var numbers = Rx.Observable.of(10, 20, 30);\x0a     * var letters = Rx.Observable.of(\x27a\x27, \x27b\x27, \x27c\x27);\x0a     * var interval = Rx.Observable.interval(1000);\x0a     * var result = numbers.concat(letters).concat(interval);\x0a     * result.subscribe(x =\x3e console.log(x));\x0a     *\x0a     * @see {@link create}\x0a     * @see {@link empty}\x0a     * @see {@link never}\x0a     * @see {@link throw}\x0a     *\x0a     * @param {...T} values Arguments that represent `next` values to be emitted.\x0a     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\x0a     * the emissions of the `next` notifications.\x0a     * @return {Observable\x3cT\x3e} An Observable that emits each given input value.\x0a     * @static true\x0a     * @name of\x0a     * @owner Observable\x0a     */\x0a    ArrayObservable.of = function () {\x0a        var array = [];\x0a        for (var _i = 0; _i \x3c arguments.length; _i++) {\x0a            array[_i - 0] = arguments[_i];\x0a        }\x0a        var scheduler = array[array.length - 1];\x0a        if (Object(__WEBPACK_IMPORTED_MODULE_3__util_isScheduler__[\x22a\x22 /* isScheduler */])(scheduler)) {\x0a            array.pop();\x0a        }\x0a        else {\x0a            scheduler = null;\x0a        }\x0a        var len = array.length;\x0a        if (len \x3e 1) {\x0a            return new ArrayObservable(array, scheduler);\x0a        }\x0a        else if (len === 1) {\x0a            return new __WEBPACK_IMPORTED_MODULE_1__ScalarObservable__[\x22a\x22 /* ScalarObservable */](array[0], scheduler);\x0a        }\x0a        else {\x0a            return new __WEBPACK_IMPORTED_MODULE_2__EmptyObservable__[\x22a\x22 /* EmptyObservable */](scheduler);\x0a        }\x0a    };\x0a    ArrayObservable.dispatch = function (state) {\x0a        var array = state.array, index = state.index, count = state.count, subscriber = state.subscriber;\x0a        if (index \x3e= count) {\x0a            subscriber.complete();\x0a            return;\x0a        }\x0a        subscriber.next(array[index]);\x0a        if (subscriber.closed) {\x0a            return;\x0a        }\x0a        state.index = index + 1;\x0a        this.schedule(state);\x0a    };\x0a    ArrayObservable.prototype._subscribe = function (subscriber) {\x0a        var index = 0;\x0a        var array = this.array;\x0a        var count = array.length;\x0a        var scheduler = this.scheduler;\x0a        if (scheduler) {\x0a            return scheduler.schedule(ArrayObservable.dispatch, 0, {\x0a                array: array, index: index, count: count, subscriber: subscriber\x0a            });\x0a        }\x0a        else {\x0a            for (var i = 0; i \x3c count && !subscriber.closed; i++) {\x0a                subscriber.next(array[i]);\x0a            }\x0a            subscriber.complete();\x0a        }\x0a    };\x0a    return ArrayObservable;\x0a}(__WEBPACK_IMPORTED_MODULE_0__Observable__[\x22a\x22 /* Observable */]));\x0a//# sourceMappingURL=ArrayObservable.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/observable/ConnectableObservable.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* unused harmony export ConnectableObservable */\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return connectableObservableDescriptor; });\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Subject__ = __webpack_require__(\x22../../../../rxjs/_esm5/Subject.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Observable__ = __webpack_require__(\x22../../../../rxjs/_esm5/Observable.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Subscriber__ = __webpack_require__(\x22../../../../rxjs/_esm5/Subscriber.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Subscription__ = __webpack_require__(\x22../../../../rxjs/_esm5/Subscription.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__operators_refCount__ = __webpack_require__(\x22../../../../rxjs/_esm5/operators/refCount.js\x22);\x0a/** PURE_IMPORTS_START .._Subject,.._Observable,.._Subscriber,.._Subscription,.._operators_refCount PURE_IMPORTS_END */\x0avar __extends = (this && this.__extends) || function (d, b) {\x0a    for (var p in b)\x0a        if (b.hasOwnProperty(p))\x0a            d[p] = b[p];\x0a    function __() { this.constructor = d; }\x0a    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\x0a};\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * @class ConnectableObservable\x3cT\x3e\x0a */\x0avar ConnectableObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\x0a    __extends(ConnectableObservable, _super);\x0a    function ConnectableObservable(source, subjectFactory) {\x0a        _super.call(this);\x0a        this.source = source;\x0a        this.subjectFactory = subjectFactory;\x0a        this._refCount = 0;\x0a        this._isComplete = false;\x0a    }\x0a    ConnectableObservable.prototype._subscribe = function (subscriber) {\x0a        return this.getSubject().subscribe(subscriber);\x0a    };\x0a    ConnectableObservable.prototype.getSubject = function () {\x0a        var subject = this._subject;\x0a        if (!subject || subject.isStopped) {\x0a            this._subject = this.subjectFactory();\x0a        }\x0a        return this._subject;\x0a    };\x0a    ConnectableObservable.prototype.connect = function () {\x0a        var connection = this._connection;\x0a        if (!connection) {\x0a            this._isComplete = false;\x0a            connection = this._connection = new __WEBPACK_IMPORTED_MODULE_3__Subscription__[\x22a\x22 /* Subscription */]();\x0a            connection.add(this.source\x0a                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\x0a            if (connection.closed) {\x0a                this._connection = null;\x0a                connection = __WEBPACK_IMPORTED_MODULE_3__Subscription__[\x22a\x22 /* Subscription */].EMPTY;\x0a            }\x0a            else {\x0a                this._connection = connection;\x0a            }\x0a        }\x0a        return connection;\x0a    };\x0a    ConnectableObservable.prototype.refCount = function () {\x0a        return Object(__WEBPACK_IMPORTED_MODULE_4__operators_refCount__[\x22a\x22 /* refCount */])()(this);\x0a    };\x0a    return ConnectableObservable;\x0a}(__WEBPACK_IMPORTED_MODULE_1__Observable__[\x22a\x22 /* Observable */]));\x0avar connectableProto = ConnectableObservable.prototype;\x0avar connectableObservableDescriptor = {\x0a    operator: { value: null },\x0a    _refCount: { value: 0, writable: true },\x0a    _subject: { value: null, writable: true },\x0a    _connection: { value: null, writable: true },\x0a    _subscribe: { value: connectableProto._subscribe },\x0a    _isComplete: { value: connectableProto._isComplete, writable: true },\x0a    getSubject: { value: connectableProto.getSubject },\x0a    connect: { value: connectableProto.connect },\x0a    refCount: { value: connectableProto.refCount }\x0a};\x0avar ConnectableSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\x0a    __extends(ConnectableSubscriber, _super);\x0a    function ConnectableSubscriber(destination, connectable) {\x0a        _super.call(this, destination);\x0a        this.connectable = connectable;\x0a    }\x0a    ConnectableSubscriber.prototype._error = function (err) {\x0a        this._unsubscribe();\x0a        _super.prototype._error.call(this, err);\x0a    };\x0a    ConnectableSubscriber.prototype._complete = function () {\x0a        this.connectable._isComplete = true;\x0a        this._unsubscribe();\x0a        _super.prototype._complete.call(this);\x0a    };\x0a    ConnectableSubscriber.prototype._unsubscribe = function () {\x0a        var connectable = this.connectable;\x0a        if (connectable) {\x0a            this.connectable = null;\x0a            var connection = connectable._connection;\x0a            connectable._refCount = 0;\x0a            connectable._subject = null;\x0a            connectable._connection = null;\x0a            if (connection) {\x0a                connection.unsubscribe();\x0a            }\x0a        }\x0a    };\x0a    return ConnectableSubscriber;\x0a}(__WEBPACK_IMPORTED_MODULE_0__Subject__[\x22b\x22 /* SubjectSubscriber */]));\x0avar RefCountOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\x0a    function RefCountOperator(connectable) {\x0a        this.connectable = connectable;\x0a    }\x0a    RefCountOperator.prototype.call = function (subscriber, source) {\x0a        var connectable = this.connectable;\x0a        connectable._refCount++;\x0a        var refCounter = new RefCountSubscriber(subscriber, connectable);\x0a        var subscription = source.subscribe(refCounter);\x0a        if (!refCounter.closed) {\x0a            refCounter.connection = connectable.connect();\x0a        }\x0a        return subscription;\x0a    };\x0a    return RefCountOperator;\x0a}());\x0avar RefCountSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\x0a    __extends(RefCountSubscriber, _super);\x0a    function RefCountSubscriber(destination, connectable) {\x0a        _super.call(this, destination);\x0a        this.connectable = connectable;\x0a    }\x0a    RefCountSubscriber.prototype._unsubscribe = function () {\x0a        var connectable = this.connectable;\x0a        if (!connectable) {\x0a            this.connection = null;\x0a            return;\x0a        }\x0a        this.connectable = null;\x0a        var refCount = connectable._refCount;\x0a        if (refCount \x3c= 0) {\x0a            this.connection = null;\x0a            return;\x0a        }\x0a        connectable._refCount = refCount - 1;\x0a        if (refCount \x3e 1) {\x0a            this.connection = null;\x0a            return;\x0a        }\x0a        ///\x0a        // Compare the local RefCountSubscriber\x27s connection Subscription to the\x0a        // connection Subscription on the shared ConnectableObservable. In cases\x0a        // where the ConnectableObservable source synchronously emits values, and\x0a        // the RefCountSubscriber\x27s downstream Observers synchronously unsubscribe,\x0a        // execution continues to here before the RefCountOperator has a chance to\x0a        // supply the RefCountSubscriber with the shared connection Subscription.\x0a        // For example:\x0a        // ```\x0a        // Observable.range(0, 10)\x0a        //   .publish()\x0a        //   .refCount()\x0a        //   .take(5)\x0a        //   .subscribe();\x0a        // ```\x0a        // In order to account for this case, RefCountSubscriber should only dispose\x0a        // the ConnectableObservable\x27s shared connection Subscription if the\x0a        // connection Subscription exists, *and* either:\x0a        //   a. RefCountSubscriber doesn\x27t have a reference to the shared connection\x0a        //      Subscription yet, or,\x0a        //   b. RefCountSubscriber\x27s connection Subscription reference is identical\x0a        //      to the shared connection Subscription\x0a        ///\x0a        var connection = this.connection;\x0a        var sharedConnection = connectable._connection;\x0a        this.connection = null;\x0a        if (sharedConnection && (!connection || sharedConnection === connection)) {\x0a            sharedConnection.unsubscribe();\x0a        }\x0a    };\x0a    return RefCountSubscriber;\x0a}(__WEBPACK_IMPORTED_MODULE_2__Subscriber__[\x22a\x22 /* Subscriber */]));\x0a//# sourceMappingURL=ConnectableObservable.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/observable/EmptyObservable.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return EmptyObservable; });\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(\x22../../../../rxjs/_esm5/Observable.js\x22);\x0a/** PURE_IMPORTS_START .._Observable PURE_IMPORTS_END */\x0avar __extends = (this && this.__extends) || function (d, b) {\x0a    for (var p in b)\x0a        if (b.hasOwnProperty(p))\x0a            d[p] = b[p];\x0a    function __() { this.constructor = d; }\x0a    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\x0a};\x0a\x0a/**\x0a * We need this JSDoc comment for affecting ESDoc.\x0a * @extends {Ignored}\x0a * @hide true\x0a */\x0avar EmptyObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\x0a    __extends(EmptyObservable, _super);\x0a    function EmptyObservable(scheduler) {\x0a        _super.call(this);\x0a        this.scheduler = scheduler;\x0a    }\x0a    /**\x0a     * Creates an Observable that emits no items to the Observer and immediately\x0a     * emits a complete notification.\x0a     *\x0a     * \x3cspan class=\x22informal\x22\x3eJust emits \x27complete\x27, and nothing else.\x0a     * \x3c/span\x3e\x0a     *\x0a     * \x3cimg src=\x22./img/empty.png\x22 width=\x22100%\x22\x3e\x0a     *\x0a     * This static operator is useful for creating a simple Observable that only\x0a     * emits the complete notification. It can be used for composing with other\x0a     * Observables, such as in a {@link mergeMap}.\x0a     *\x0a     * @example \x3ccaption\x3eEmit the number 7, then complete.\x3c/caption\x3e\x0a     * var result = Rx.Observable.empty().startWith(7);\x0a     * result.subscribe(x =\x3e console.log(x));\x0a     *\x0a     * @example \x3ccaption\x3eMap and flatten only odd numbers to the sequence \x27a\x27, \x27b\x27, \x27c\x27\x3c/caption\x3e\x0a     * var interval = Rx.Observable.interval(1000);\x0a     * var result = interval.mergeMap(x =\x3e\x0a     *   x % 2 === 1 ? Rx.Observable.of(\x27a\x27, \x27b\x27, \x27c\x27) : Rx.Observable.empty()\x0a     * );\x0a     * result.subscribe(x =\x3e console.log(x));\x0a     *\x0a     * // Results in the following to the console:\x0a     * // x is equal to the count on the interval eg(0,1,2,3,...)\x0a     * // x will occur every 1000ms\x0a     * // if x % 2 is equal to 1 print abc\x0a     * // if x % 2 is not equal to 1 nothing will be output\x0a     *\x0a     * @see {@link create}\x0a     * @see {@link never}\x0a     * @see {@link of}\x0a     * @see {@link throw}\x0a     *\x0a     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\x0a     * the emission of the complete notification.\x0a     * @return {Observable} An \x22empty\x22 Observable: emits only the complete\x0a     * notification.\x0a     * @static true\x0a     * @name empty\x0a     * @owner Observable\x0a     */\x0a    EmptyObservable.create = function (scheduler) {\x0a        return new EmptyObservable(scheduler);\x0a    };\x0a    EmptyObservable.dispatch = function (arg) {\x0a        var subscriber = arg.subscriber;\x0a        subscriber.complete();\x0a    };\x0a    EmptyObservable.prototype._subscribe = function (subscriber) {\x0a        var scheduler = this.scheduler;\x0a        if (scheduler) {\x0a            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });\x0a        }\x0a        else {\x0a            subscriber.complete();\x0a        }\x0a    };\x0a    return EmptyObservable;\x0a}(__WEBPACK_IMPORTED_MODULE_0__Observable__[\x22a\x22 /* Observable */]));\x0a//# sourceMappingURL=EmptyObservable.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/observable/ForkJoinObservable.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return ForkJoinObservable; });\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(\x22../../../../rxjs/_esm5/Observable.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__EmptyObservable__ = __webpack_require__(\x22../../../../rxjs/_esm5/observable/EmptyObservable.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_isArray__ = __webpack_require__(\x22../../../../rxjs/_esm5/util/isArray.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__ = __webpack_require__(\x22../../../../rxjs/_esm5/util/subscribeToResult.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__OuterSubscriber__ = __webpack_require__(\x22../../../../rxjs/_esm5/OuterSubscriber.js\x22);\x0a/** PURE_IMPORTS_START .._Observable,._EmptyObservable,.._util_isArray,.._util_subscribeToResult,.._OuterSubscriber PURE_IMPORTS_END */\x0avar __extends = (this && this.__extends) || function (d, b) {\x0a    for (var p in b)\x0a        if (b.hasOwnProperty(p))\x0a            d[p] = b[p];\x0a    function __() { this.constructor = d; }\x0a    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\x0a};\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * We need this JSDoc comment for affecting ESDoc.\x0a * @extends {Ignored}\x0a * @hide true\x0a */\x0avar ForkJoinObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\x0a    __extends(ForkJoinObservable, _super);\x0a    function ForkJoinObservable(sources, resultSelector) {\x0a        _super.call(this);\x0a        this.sources = sources;\x0a        this.resultSelector = resultSelector;\x0a    }\x0a    /* tslint:enable:max-line-length */\x0a    /**\x0a     * Joins last values emitted by passed Observables.\x0a     *\x0a     * \x3cspan class=\x22informal\x22\x3eWait for Observables to complete and then combine last values they emitted.\x3c/span\x3e\x0a     *\x0a     * \x3cimg src=\x22./img/forkJoin.png\x22 width=\x22100%\x22\x3e\x0a     *\x0a     * `forkJoin` is an operator that takes any number of Observables which can be passed either as an array\x0a     * or directly as arguments. If no input Observables are provided, resulting stream will complete\x0a     * immediately.\x0a     *\x0a     * `forkJoin` will wait for all passed Observables to complete and then it will emit an array with last\x0a     * values from corresponding Observables. So if you pass `n` Observables to the operator, resulting\x0a     * array will have `n` values, where first value is the last thing emitted by the first Observable,\x0a     * second value is the last thing emitted by the second Observable and so on. That means `forkJoin` will\x0a     * not emit more than once and it will complete after that. If you need to emit combined values not only\x0a     * at the end of lifecycle of passed Observables, but also throughout it, try out {@link combineLatest}\x0a     * or {@link zip} instead.\x0a     *\x0a     * In order for resulting array to have the same length as the number of input Observables, whenever any of\x0a     * that Observables completes without emitting any value, `forkJoin` will complete at that moment as well\x0a     * and it will not emit anything either, even if it already has some last values from other Observables.\x0a     * Conversely, if there is an Observable that never completes, `forkJoin` will never complete as well,\x0a     * unless at any point some other Observable completes without emitting value, which brings us back to\x0a     * the previous case. Overall, in order for `forkJoin` to emit a value, all Observables passed as arguments\x0a     * have to emit something at least once and complete.\x0a     *\x0a     * If any input Observable errors at some point, `forkJoin` will error as well and all other Observables\x0a     * will be immediately unsubscribed.\x0a     *\x0a     * Optionally `forkJoin` accepts project function, that will be called with values which normally\x0a     * would land in emitted array. Whatever is returned by project function, will appear in output\x0a     * Observable instead. This means that default project can be thought of as a function that takes\x0a     * all its arguments and puts them into an array. Note that project function will be called only\x0a     * when output Observable is supposed to emit a result.\x0a     *\x0a     * @example \x3ccaption\x3eUse forkJoin with operator emitting immediately\x3c/caption\x3e\x0a     * const observable = Rx.Observable.forkJoin(\x0a     *   Rx.Observable.of(1, 2, 3, 4),\x0a     *   Rx.Observable.of(5, 6, 7, 8)\x0a     * );\x0a     * observable.subscribe(\x0a     *   value =\x3e console.log(value),\x0a     *   err =\x3e {},\x0a     *   () =\x3e console.log(\x27This is how it ends!\x27)\x0a     * );\x0a     *\x0a     * // Logs:\x0a     * // [4, 8]\x0a     * // \x22This is how it ends!\x22\x0a     *\x0a     *\x0a     * @example \x3ccaption\x3eUse forkJoin with operator emitting after some time\x3c/caption\x3e\x0a     * const observable = Rx.Observable.forkJoin(\x0a     *   Rx.Observable.interval(1000).take(3), // emit 0, 1, 2 every second and complete\x0a     *   Rx.Observable.interval(500).take(4) // emit 0, 1, 2, 3 every half a second and complete\x0a     * );\x0a     * observable.subscribe(\x0a     *   value =\x3e console.log(value),\x0a     *   err =\x3e {},\x0a     *   () =\x3e console.log(\x27This is how it ends!\x27)\x0a     * );\x0a     *\x0a     * // Logs:\x0a     * // [2, 3] after 3 seconds\x0a     * // \x22This is how it ends!\x22 immediately after\x0a     *\x0a     *\x0a     * @example \x3ccaption\x3eUse forkJoin with project function\x3c/caption\x3e\x0a     * const observable = Rx.Observable.forkJoin(\x0a     *   Rx.Observable.interval(1000).take(3), // emit 0, 1, 2 every second and complete\x0a     *   Rx.Observable.interval(500).take(4), // emit 0, 1, 2, 3 every half a second and complete\x0a     *   (n, m) =\x3e n + m\x0a     * );\x0a     * observable.subscribe(\x0a     *   value =\x3e console.log(value),\x0a     *   err =\x3e {},\x0a     *   () =\x3e console.log(\x27This is how it ends!\x27)\x0a     * );\x0a     *\x0a     * // Logs:\x0a     * // 5 after 3 seconds\x0a     * // \x22This is how it ends!\x22 immediately after\x0a     *\x0a     * @see {@link combineLatest}\x0a     * @see {@link zip}\x0a     *\x0a     * @param {...SubscribableOrPromise} sources Any number of Observables provided either as an array or as an arguments\x0a     * passed directly to the operator.\x0a     * @param {function} [project] Function that takes values emitted by input Observables and returns value\x0a     * that will appear in resulting Observable instead of default array.\x0a     * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\x0a     * or value from project function.\x0a     * @static true\x0a     * @name forkJoin\x0a     * @owner Observable\x0a     */\x0a    ForkJoinObservable.create = function () {\x0a        var sources = [];\x0a        for (var _i = 0; _i \x3c arguments.length; _i++) {\x0a            sources[_i - 0] = arguments[_i];\x0a        }\x0a        if (sources === null || arguments.length === 0) {\x0a            return new __WEBPACK_IMPORTED_MODULE_1__EmptyObservable__[\x22a\x22 /* EmptyObservable */]();\x0a        }\x0a        var resultSelector = null;\x0a        if (typeof sources[sources.length - 1] === \x27function\x27) {\x0a            resultSelector = sources.pop();\x0a        }\x0a        // if the first and only other argument besides the resultSelector is an array\x0a        // assume it\x27s been called with `forkJoin([obs1, obs2, obs3], resultSelector)`\x0a        if (sources.length === 1 && Object(__WEBPACK_IMPORTED_MODULE_2__util_isArray__[\x22a\x22 /* isArray */])(sources[0])) {\x0a            sources = sources[0];\x0a        }\x0a        if (sources.length === 0) {\x0a            return new __WEBPACK_IMPORTED_MODULE_1__EmptyObservable__[\x22a\x22 /* EmptyObservable */]();\x0a        }\x0a        return new ForkJoinObservable(sources, resultSelector);\x0a    };\x0a    ForkJoinObservable.prototype._subscribe = function (subscriber) {\x0a        return new ForkJoinSubscriber(subscriber, this.sources, this.resultSelector);\x0a    };\x0a    return ForkJoinObservable;\x0a}(__WEBPACK_IMPORTED_MODULE_0__Observable__[\x22a\x22 /* Observable */]));\x0a/**\x0a * We need this JSDoc comment for affecting ESDoc.\x0a * @ignore\x0a * @extends {Ignored}\x0a */\x0avar ForkJoinSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\x0a    __extends(ForkJoinSubscriber, _super);\x0a    function ForkJoinSubscriber(destination, sources, resultSelector) {\x0a        _super.call(this, destination);\x0a        this.sources = sources;\x0a        this.resultSelector = resultSelector;\x0a        this.completed = 0;\x0a        this.haveValues = 0;\x0a        var len = sources.length;\x0a        this.total = len;\x0a        this.values = new Array(len);\x0a        for (var i = 0; i \x3c len; i++) {\x0a            var source = sources[i];\x0a            var innerSubscription = Object(__WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__[\x22a\x22 /* subscribeToResult */])(this, source, null, i);\x0a            if (innerSubscription) {\x0a                innerSubscription.outerIndex = i;\x0a                this.add(innerSubscription);\x0a            }\x0a        }\x0a    }\x0a    ForkJoinSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\x0a        this.values[outerIndex] = innerValue;\x0a        if (!innerSub._hasValue) {\x0a            innerSub._hasValue = true;\x0a            this.haveValues++;\x0a        }\x0a    };\x0a    ForkJoinSubscriber.prototype.notifyComplete = function (innerSub) {\x0a        var destination = this.destination;\x0a        var _a = this, haveValues = _a.haveValues, resultSelector = _a.resultSelector, values = _a.values;\x0a        var len = values.length;\x0a        if (!innerSub._hasValue) {\x0a            destination.complete();\x0a            return;\x0a        }\x0a        this.completed++;\x0a        if (this.completed !== len) {\x0a            return;\x0a        }\x0a        if (haveValues === len) {\x0a            var value = resultSelector ? resultSelector.apply(this, values) : values;\x0a            destination.next(value);\x0a        }\x0a        destination.complete();\x0a    };\x0a    return ForkJoinSubscriber;\x0a}(__WEBPACK_IMPORTED_MODULE_4__OuterSubscriber__[\x22a\x22 /* OuterSubscriber */]));\x0a//# sourceMappingURL=ForkJoinObservable.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/observable/FromObservable.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return FromObservable; });\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_isArray__ = __webpack_require__(\x22../../../../rxjs/_esm5/util/isArray.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_isArrayLike__ = __webpack_require__(\x22../../../../rxjs/_esm5/util/isArrayLike.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_isPromise__ = __webpack_require__(\x22../../../../rxjs/_esm5/util/isPromise.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__PromiseObservable__ = __webpack_require__(\x22../../../../rxjs/_esm5/observable/PromiseObservable.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__IteratorObservable__ = __webpack_require__(\x22../../../../rxjs/_esm5/observable/IteratorObservable.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ArrayObservable__ = __webpack_require__(\x22../../../../rxjs/_esm5/observable/ArrayObservable.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ArrayLikeObservable__ = __webpack_require__(\x22../../../../rxjs/_esm5/observable/ArrayLikeObservable.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__symbol_iterator__ = __webpack_require__(\x22../../../../rxjs/_esm5/symbol/iterator.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__Observable__ = __webpack_require__(\x22../../../../rxjs/_esm5/Observable.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__operators_observeOn__ = __webpack_require__(\x22../../../../rxjs/_esm5/operators/observeOn.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__symbol_observable__ = __webpack_require__(\x22../../../../rxjs/_esm5/symbol/observable.js\x22);\x0a/** PURE_IMPORTS_START .._util_isArray,.._util_isArrayLike,.._util_isPromise,._PromiseObservable,._IteratorObservable,._ArrayObservable,._ArrayLikeObservable,.._symbol_iterator,.._Observable,.._operators_observeOn,.._symbol_observable PURE_IMPORTS_END */\x0avar __extends = (this && this.__extends) || function (d, b) {\x0a    for (var p in b)\x0a        if (b.hasOwnProperty(p))\x0a            d[p] = b[p];\x0a    function __() { this.constructor = d; }\x0a    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\x0a};\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * We need this JSDoc comment for affecting ESDoc.\x0a * @extends {Ignored}\x0a * @hide true\x0a */\x0avar FromObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\x0a    __extends(FromObservable, _super);\x0a    function FromObservable(ish, scheduler) {\x0a        _super.call(this, null);\x0a        this.ish = ish;\x0a        this.scheduler = scheduler;\x0a    }\x0a    /**\x0a     * Creates an Observable from an Array, an array-like object, a Promise, an\x0a     * iterable object, or an Observable-like object.\x0a     *\x0a     * \x3cspan class=\x22informal\x22\x3eConverts almost anything to an Observable.\x3c/span\x3e\x0a     *\x0a     * \x3cimg src=\x22./img/from.png\x22 width=\x22100%\x22\x3e\x0a     *\x0a     * Convert various other objects and data types into Observables. `from`\x0a     * converts a Promise or an array-like or an\x0a     * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\x0a     * object into an Observable that emits the items in that promise or array or\x0a     * iterable. A String, in this context, is treated as an array of characters.\x0a     * Observable-like objects (contains a function named with the ES2015 Symbol\x0a     * for Observable) can also be converted through this operator.\x0a     *\x0a     * @example \x3ccaption\x3eConverts an array to an Observable\x3c/caption\x3e\x0a     * var array = [10, 20, 30];\x0a     * var result = Rx.Observable.from(array);\x0a     * result.subscribe(x =\x3e console.log(x));\x0a     *\x0a     * // Results in the following:\x0a     * // 10 20 30\x0a     *\x0a     * @example \x3ccaption\x3eConvert an infinite iterable (from a generator) to an Observable\x3c/caption\x3e\x0a     * function* generateDoubles(seed) {\x0a     *   var i = seed;\x0a     *   while (true) {\x0a     *     yield i;\x0a     *     i = 2 * i; // double it\x0a     *   }\x0a     * }\x0a     *\x0a     * var iterator = generateDoubles(3);\x0a     * var result = Rx.Observable.from(iterator).take(10);\x0a     * result.subscribe(x =\x3e console.log(x));\x0a     *\x0a     * // Results in the following:\x0a     * // 3 6 12 24 48 96 192 384 768 1536\x0a     *\x0a     * @see {@link create}\x0a     * @see {@link fromEvent}\x0a     * @see {@link fromEventPattern}\x0a     * @see {@link fromPromise}\x0a     *\x0a     * @param {ObservableInput\x3cT\x3e} ish A subscribable object, a Promise, an\x0a     * Observable-like, an Array, an iterable or an array-like object to be\x0a     * converted.\x0a     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\x0a     * emissions of values.\x0a     * @return {Observable\x3cT\x3e} The Observable whose values are originally from the\x0a     * input object that was converted.\x0a     * @static true\x0a     * @name from\x0a     * @owner Observable\x0a     */\x0a    FromObservable.create = function (ish, scheduler) {\x0a        if (ish != null) {\x0a            if (typeof ish[__WEBPACK_IMPORTED_MODULE_10__symbol_observable__[\x22a\x22 /* observable */]] === \x27function\x27) {\x0a                if (ish instanceof __WEBPACK_IMPORTED_MODULE_8__Observable__[\x22a\x22 /* Observable */] && !scheduler) {\x0a                    return ish;\x0a                }\x0a                return new FromObservable(ish, scheduler);\x0a            }\x0a            else if (Object(__WEBPACK_IMPORTED_MODULE_0__util_isArray__[\x22a\x22 /* isArray */])(ish)) {\x0a                return new __WEBPACK_IMPORTED_MODULE_5__ArrayObservable__[\x22a\x22 /* ArrayObservable */](ish, scheduler);\x0a            }\x0a            else if (Object(__WEBPACK_IMPORTED_MODULE_2__util_isPromise__[\x22a\x22 /* isPromise */])(ish)) {\x0a                return new __WEBPACK_IMPORTED_MODULE_3__PromiseObservable__[\x22a\x22 /* PromiseObservable */](ish, scheduler);\x0a            }\x0a            else if (typeof ish[__WEBPACK_IMPORTED_MODULE_7__symbol_iterator__[\x22a\x22 /* iterator */]] === \x27function\x27 || typeof ish === \x27string\x27) {\x0a                return new __WEBPACK_IMPORTED_MODULE_4__IteratorObservable__[\x22a\x22 /* IteratorObservable */](ish, scheduler);\x0a            }\x0a            else if (Object(__WEBPACK_IMPORTED_MODULE_1__util_isArrayLike__[\x22a\x22 /* isArrayLike */])(ish)) {\x0a                return new __WEBPACK_IMPORTED_MODULE_6__ArrayLikeObservable__[\x22a\x22 /* ArrayLikeObservable */](ish, scheduler);\x0a            }\x0a        }\x0a        throw new TypeError((ish !== null && typeof ish || ish) + \x27 is not observable\x27);\x0a    };\x0a    FromObservable.prototype._subscribe = function (subscriber) {\x0a        var ish = this.ish;\x0a        var scheduler = this.scheduler;\x0a        if (scheduler == null) {\x0a            return ish[__WEBPACK_IMPORTED_MODULE_10__symbol_observable__[\x22a\x22 /* observable */]]().subscribe(subscriber);\x0a        }\x0a        else {\x0a            return ish[__WEBPACK_IMPORTED_MODULE_10__symbol_observable__[\x22a\x22 /* observable */]]().subscribe(new __WEBPACK_IMPORTED_MODULE_9__operators_observeOn__[\x22a\x22 /* ObserveOnSubscriber */](subscriber, scheduler, 0));\x0a        }\x0a    };\x0a    return FromObservable;\x0a}(__WEBPACK_IMPORTED_MODULE_8__Observable__[\x22a\x22 /* Observable */]));\x0a//# sourceMappingURL=FromObservable.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/observable/IteratorObservable.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return IteratorObservable; });\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_root__ = __webpack_require__(\x22../../../../rxjs/_esm5/util/root.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Observable__ = __webpack_require__(\x22../../../../rxjs/_esm5/Observable.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__symbol_iterator__ = __webpack_require__(\x22../../../../rxjs/_esm5/symbol/iterator.js\x22);\x0a/** PURE_IMPORTS_START .._util_root,.._Observable,.._symbol_iterator PURE_IMPORTS_END */\x0avar __extends = (this && this.__extends) || function (d, b) {\x0a    for (var p in b)\x0a        if (b.hasOwnProperty(p))\x0a            d[p] = b[p];\x0a    function __() { this.constructor = d; }\x0a    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\x0a};\x0a\x0a\x0a\x0a/**\x0a * We need this JSDoc comment for affecting ESDoc.\x0a * @extends {Ignored}\x0a * @hide true\x0a */\x0avar IteratorObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\x0a    __extends(IteratorObservable, _super);\x0a    function IteratorObservable(iterator, scheduler) {\x0a        _super.call(this);\x0a        this.scheduler = scheduler;\x0a        if (iterator == null) {\x0a            throw new Error(\x27iterator cannot be null.\x27);\x0a        }\x0a        this.iterator = getIterator(iterator);\x0a    }\x0a    IteratorObservable.create = function (iterator, scheduler) {\x0a        return new IteratorObservable(iterator, scheduler);\x0a    };\x0a    IteratorObservable.dispatch = function (state) {\x0a        var index = state.index, hasError = state.hasError, iterator = state.iterator, subscriber = state.subscriber;\x0a        if (hasError) {\x0a            subscriber.error(state.error);\x0a            return;\x0a        }\x0a        var result = iterator.next();\x0a        if (result.done) {\x0a            subscriber.complete();\x0a            return;\x0a        }\x0a        subscriber.next(result.value);\x0a        state.index = index + 1;\x0a        if (subscriber.closed) {\x0a            if (typeof iterator.return === \x27function\x27) {\x0a                iterator.return();\x0a            }\x0a            return;\x0a        }\x0a        this.schedule(state);\x0a    };\x0a    IteratorObservable.prototype._subscribe = function (subscriber) {\x0a        var index = 0;\x0a        var _a = this, iterator = _a.iterator, scheduler = _a.scheduler;\x0a        if (scheduler) {\x0a            return scheduler.schedule(IteratorObservable.dispatch, 0, {\x0a                index: index, iterator: iterator, subscriber: subscriber\x0a            });\x0a        }\x0a        else {\x0a            do {\x0a                var result = iterator.next();\x0a                if (result.done) {\x0a                    subscriber.complete();\x0a                    break;\x0a                }\x0a                else {\x0a                    subscriber.next(result.value);\x0a                }\x0a                if (subscriber.closed) {\x0a                    if (typeof iterator.return === \x27function\x27) {\x0a                        iterator.return();\x0a                    }\x0a                    break;\x0a                }\x0a            } while (true);\x0a        }\x0a    };\x0a    return IteratorObservable;\x0a}(__WEBPACK_IMPORTED_MODULE_1__Observable__[\x22a\x22 /* Observable */]));\x0avar StringIterator = /*@__PURE__*/ (/*@__PURE__*/ function () {\x0a    function StringIterator(str, idx, len) {\x0a        if (idx === void 0) {\x0a            idx = 0;\x0a        }\x0a        if (len === void 0) {\x0a            len = str.length;\x0a        }\x0a        this.str = str;\x0a        this.idx = idx;\x0a        this.len = len;\x0a    }\x0a    StringIterator.prototype[__WEBPACK_IMPORTED_MODULE_2__symbol_iterator__[\x22a\x22 /* iterator */]] = function () { return (this); };\x0a    StringIterator.prototype.next = function () {\x0a        return this.idx \x3c this.len ? {\x0a            done: false,\x0a            value: this.str.charAt(this.idx++)\x0a        } : {\x0a            done: true,\x0a            value: undefined\x0a        };\x0a    };\x0a    return StringIterator;\x0a}());\x0avar ArrayIterator = /*@__PURE__*/ (/*@__PURE__*/ function () {\x0a    function ArrayIterator(arr, idx, len) {\x0a        if (idx === void 0) {\x0a            idx = 0;\x0a        }\x0a        if (len === void 0) {\x0a            len = toLength(arr);\x0a        }\x0a        this.arr = arr;\x0a        this.idx = idx;\x0a        this.len = len;\x0a    }\x0a    ArrayIterator.prototype[__WEBPACK_IMPORTED_MODULE_2__symbol_iterator__[\x22a\x22 /* iterator */]] = function () { return this; };\x0a    ArrayIterator.prototype.next = function () {\x0a        return this.idx \x3c this.len ? {\x0a            done: false,\x0a            value: this.arr[this.idx++]\x0a        } : {\x0a            done: true,\x0a            value: undefined\x0a        };\x0a    };\x0a    return ArrayIterator;\x0a}());\x0afunction getIterator(obj) {\x0a    var i = obj[__WEBPACK_IMPORTED_MODULE_2__symbol_iterator__[\x22a\x22 /* iterator */]];\x0a    if (!i && typeof obj === \x27string\x27) {\x0a        return new StringIterator(obj);\x0a    }\x0a    if (!i && obj.length !== undefined) {\x0a        return new ArrayIterator(obj);\x0a    }\x0a    if (!i) {\x0a        throw new TypeError(\x27object is not iterable\x27);\x0a    }\x0a    return obj[__WEBPACK_IMPORTED_MODULE_2__symbol_iterator__[\x22a\x22 /* iterator */]]();\x0a}\x0avar maxSafeInteger = /*@__PURE__*/ Math.pow(2, 53) - 1;\x0afunction toLength(o) {\x0a    var len = +o.length;\x0a    if (isNaN(len)) {\x0a        return 0;\x0a    }\x0a    if (len === 0 || !numberIsFinite(len)) {\x0a        return len;\x0a    }\x0a    len = sign(len) * Math.floor(Math.abs(len));\x0a    if (len \x3c= 0) {\x0a        return 0;\x0a    }\x0a    if (len \x3e maxSafeInteger) {\x0a        return maxSafeInteger;\x0a    }\x0a    return len;\x0a}\x0afunction numberIsFinite(value) {\x0a    return typeof value === \x27number\x27 && __WEBPACK_IMPORTED_MODULE_0__util_root__[\x22a\x22 /* root */].isFinite(value);\x0a}\x0afunction sign(value) {\x0a    var valueAsNumber = +value;\x0a    if (valueAsNumber === 0) {\x0a        return valueAsNumber;\x0a    }\x0a    if (isNaN(valueAsNumber)) {\x0a        return valueAsNumber;\x0a    }\x0a    return valueAsNumber \x3c 0 ? -1 : 1;\x0a}\x0a//# sourceMappingURL=IteratorObservable.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/observable/PromiseObservable.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return PromiseObservable; });\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_root__ = __webpack_require__(\x22../../../../rxjs/_esm5/util/root.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Observable__ = __webpack_require__(\x22../../../../rxjs/_esm5/Observable.js\x22);\x0a/** PURE_IMPORTS_START .._util_root,.._Observable PURE_IMPORTS_END */\x0avar __extends = (this && this.__extends) || function (d, b) {\x0a    for (var p in b)\x0a        if (b.hasOwnProperty(p))\x0a            d[p] = b[p];\x0a    function __() { this.constructor = d; }\x0a    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\x0a};\x0a\x0a\x0a/**\x0a * We need this JSDoc comment for affecting ESDoc.\x0a * @extends {Ignored}\x0a * @hide true\x0a */\x0avar PromiseObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\x0a    __extends(PromiseObservable, _super);\x0a    function PromiseObservable(promise, scheduler) {\x0a        _super.call(this);\x0a        this.promise = promise;\x0a        this.scheduler = scheduler;\x0a    }\x0a    /**\x0a     * Converts a Promise to an Observable.\x0a     *\x0a     * \x3cspan class=\x22informal\x22\x3eReturns an Observable that just emits the Promise\x27s\x0a     * resolved value, then completes.\x3c/span\x3e\x0a     *\x0a     * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\x0a     * Observable. If the Promise resolves with a value, the output Observable\x0a     * emits that resolved value as a `next`, and then completes. If the Promise\x0a     * is rejected, then the output Observable emits the corresponding Error.\x0a     *\x0a     * @example \x3ccaption\x3eConvert the Promise returned by Fetch to an Observable\x3c/caption\x3e\x0a     * var result = Rx.Observable.fromPromise(fetch(\x27http://myserver.com/\x27));\x0a     * result.subscribe(x =\x3e console.log(x), e =\x3e console.error(e));\x0a     *\x0a     * @see {@link bindCallback}\x0a     * @see {@link from}\x0a     *\x0a     * @param {PromiseLike\x3cT\x3e} promise The promise to be converted.\x0a     * @param {Scheduler} [scheduler] An optional IScheduler to use for scheduling\x0a     * the delivery of the resolved value (or the rejection).\x0a     * @return {Observable\x3cT\x3e} An Observable which wraps the Promise.\x0a     * @static true\x0a     * @name fromPromise\x0a     * @owner Observable\x0a     */\x0a    PromiseObservable.create = function (promise, scheduler) {\x0a        return new PromiseObservable(promise, scheduler);\x0a    };\x0a    PromiseObservable.prototype._subscribe = function (subscriber) {\x0a        var _this = this;\x0a        var promise = this.promise;\x0a        var scheduler = this.scheduler;\x0a        if (scheduler == null) {\x0a            if (this._isScalar) {\x0a                if (!subscriber.closed) {\x0a                    subscriber.next(this.value);\x0a                    subscriber.complete();\x0a                }\x0a            }\x0a            else {\x0a                promise.then(function (value) {\x0a                    _this.value = value;\x0a                    _this._isScalar = true;\x0a                    if (!subscriber.closed) {\x0a                        subscriber.next(value);\x0a                        subscriber.complete();\x0a                    }\x0a                }, function (err) {\x0a                    if (!subscriber.closed) {\x0a                        subscriber.error(err);\x0a                    }\x0a                })\x0a                    .then(null, function (err) {\x0a                    // escape the promise trap, throw unhandled errors\x0a                    __WEBPACK_IMPORTED_MODULE_0__util_root__[\x22a\x22 /* root */].setTimeout(function () { throw err; });\x0a                });\x0a            }\x0a        }\x0a        else {\x0a            if (this._isScalar) {\x0a                if (!subscriber.closed) {\x0a                    return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber: subscriber });\x0a                }\x0a            }\x0a            else {\x0a                promise.then(function (value) {\x0a                    _this.value = value;\x0a                    _this._isScalar = true;\x0a                    if (!subscriber.closed) {\x0a                        subscriber.add(scheduler.schedule(dispatchNext, 0, { value: value, subscriber: subscriber }));\x0a                    }\x0a                }, function (err) {\x0a                    if (!subscriber.closed) {\x0a                        subscriber.add(scheduler.schedule(dispatchError, 0, { err: err, subscriber: subscriber }));\x0a                    }\x0a                })\x0a                    .then(null, function (err) {\x0a                    // escape the promise trap, throw unhandled errors\x0a                    __WEBPACK_IMPORTED_MODULE_0__util_root__[\x22a\x22 /* root */].setTimeout(function () { throw err; });\x0a                });\x0a            }\x0a        }\x0a    };\x0a    return PromiseObservable;\x0a}(__WEBPACK_IMPORTED_MODULE_1__Observable__[\x22a\x22 /* Observable */]));\x0afunction dispatchNext(arg) {\x0a    var value = arg.value, subscriber = arg.subscriber;\x0a    if (!subscriber.closed) {\x0a        subscriber.next(value);\x0a        subscriber.complete();\x0a    }\x0a}\x0afunction dispatchError(arg) {\x0a    var err = arg.err, subscriber = arg.subscriber;\x0a    if (!subscriber.closed) {\x0a        subscriber.error(err);\x0a    }\x0a}\x0a//# sourceMappingURL=PromiseObservable.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/observable/ScalarObservable.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return ScalarObservable; });\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(\x22../../../../rxjs/_esm5/Observable.js\x22);\x0a/** PURE_IMPORTS_START .._Observable PURE_IMPORTS_END */\x0avar __extends = (this && this.__extends) || function (d, b) {\x0a    for (var p in b)\x0a        if (b.hasOwnProperty(p))\x0a            d[p] = b[p];\x0a    function __() { this.constructor = d; }\x0a    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\x0a};\x0a\x0a/**\x0a * We need this JSDoc comment for affecting ESDoc.\x0a * @extends {Ignored}\x0a * @hide true\x0a */\x0avar ScalarObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\x0a    __extends(ScalarObservable, _super);\x0a    function ScalarObservable(value, scheduler) {\x0a        _super.call(this);\x0a        this.value = value;\x0a        this.scheduler = scheduler;\x0a        this._isScalar = true;\x0a        if (scheduler) {\x0a            this._isScalar = false;\x0a        }\x0a    }\x0a    ScalarObservable.create = function (value, scheduler) {\x0a        return new ScalarObservable(value, scheduler);\x0a    };\x0a    ScalarObservable.dispatch = function (state) {\x0a        var done = state.done, value = state.value, subscriber = state.subscriber;\x0a        if (done) {\x0a            subscriber.complete();\x0a            return;\x0a        }\x0a        subscriber.next(value);\x0a        if (subscriber.closed) {\x0a            return;\x0a        }\x0a        state.done = true;\x0a        this.schedule(state);\x0a    };\x0a    ScalarObservable.prototype._subscribe = function (subscriber) {\x0a        var value = this.value;\x0a        var scheduler = this.scheduler;\x0a        if (scheduler) {\x0a            return scheduler.schedule(ScalarObservable.dispatch, 0, {\x0a                done: false, value: value, subscriber: subscriber\x0a            });\x0a        }\x0a        else {\x0a            subscriber.next(value);\x0a            if (!subscriber.closed) {\x0a                subscriber.complete();\x0a            }\x0a        }\x0a    };\x0a    return ScalarObservable;\x0a}(__WEBPACK_IMPORTED_MODULE_0__Observable__[\x22a\x22 /* Observable */]));\x0a//# sourceMappingURL=ScalarObservable.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/observable/forkJoin.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return forkJoin; });\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ForkJoinObservable__ = __webpack_require__(\x22../../../../rxjs/_esm5/observable/ForkJoinObservable.js\x22);\x0a/** PURE_IMPORTS_START ._ForkJoinObservable PURE_IMPORTS_END */\x0a\x0avar forkJoin = __WEBPACK_IMPORTED_MODULE_0__ForkJoinObservable__[\x22a\x22 /* ForkJoinObservable */].create;\x0a//# sourceMappingURL=forkJoin.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/observable/from.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return from; });\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__FromObservable__ = __webpack_require__(\x22../../../../rxjs/_esm5/observable/FromObservable.js\x22);\x0a/** PURE_IMPORTS_START ._FromObservable PURE_IMPORTS_END */\x0a\x0avar from = __WEBPACK_IMPORTED_MODULE_0__FromObservable__[\x22a\x22 /* FromObservable */].create;\x0a//# sourceMappingURL=from.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/observable/fromPromise.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return fromPromise; });\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__PromiseObservable__ = __webpack_require__(\x22../../../../rxjs/_esm5/observable/PromiseObservable.js\x22);\x0a/** PURE_IMPORTS_START ._PromiseObservable PURE_IMPORTS_END */\x0a\x0avar fromPromise = __WEBPACK_IMPORTED_MODULE_0__PromiseObservable__[\x22a\x22 /* PromiseObservable */].create;\x0a//# sourceMappingURL=fromPromise.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/observable/merge.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return merge; });\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__operator_merge__ = __webpack_require__(\x22../../../../rxjs/_esm5/operator/merge.js\x22);\x0a/** PURE_IMPORTS_START .._operator_merge PURE_IMPORTS_END */\x0a\x0avar merge = __WEBPACK_IMPORTED_MODULE_0__operator_merge__[\x22a\x22 /* mergeStatic */];\x0a//# sourceMappingURL=merge.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/observable/of.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return of; });\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ArrayObservable__ = __webpack_require__(\x22../../../../rxjs/_esm5/observable/ArrayObservable.js\x22);\x0a/** PURE_IMPORTS_START ._ArrayObservable PURE_IMPORTS_END */\x0a\x0avar of = __WEBPACK_IMPORTED_MODULE_0__ArrayObservable__[\x22a\x22 /* ArrayObservable */].of;\x0a//# sourceMappingURL=of.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operator/catch.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (immutable) */ __webpack_exports__[\x22a\x22] = _catch;\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__operators_catchError__ = __webpack_require__(\x22../../../../rxjs/_esm5/operators/catchError.js\x22);\x0a/** PURE_IMPORTS_START .._operators_catchError PURE_IMPORTS_END */\x0a\x0a/**\x0a * Catches errors on the observable to be handled by returning a new observable or throwing an error.\x0a *\x0a * \x3cimg src=\x22./img/catch.png\x22 width=\x22100%\x22\x3e\x0a *\x0a * @example \x3ccaption\x3eContinues with a different Observable when there\x27s an error\x3c/caption\x3e\x0a *\x0a * Observable.of(1, 2, 3, 4, 5)\x0a *   .map(n =\x3e {\x0a * \x09   if (n == 4) {\x0a * \x09     throw \x27four!\x27;\x0a *     }\x0a *\x09   return n;\x0a *   })\x0a *   .catch(err =\x3e Observable.of(\x27I\x27, \x27II\x27, \x27III\x27, \x27IV\x27, \x27V\x27))\x0a *   .subscribe(x =\x3e console.log(x));\x0a *   // 1, 2, 3, I, II, III, IV, V\x0a *\x0a * @example \x3ccaption\x3eRetries the caught source Observable again in case of error, similar to retry() operator\x3c/caption\x3e\x0a *\x0a * Observable.of(1, 2, 3, 4, 5)\x0a *   .map(n =\x3e {\x0a * \x09   if (n === 4) {\x0a * \x09     throw \x27four!\x27;\x0a *     }\x0a * \x09   return n;\x0a *   })\x0a *   .catch((err, caught) =\x3e caught)\x0a *   .take(30)\x0a *   .subscribe(x =\x3e console.log(x));\x0a *   // 1, 2, 3, 1, 2, 3, ...\x0a *\x0a * @example \x3ccaption\x3eThrows a new error when the source Observable throws an error\x3c/caption\x3e\x0a *\x0a * Observable.of(1, 2, 3, 4, 5)\x0a *   .map(n =\x3e {\x0a *     if (n == 4) {\x0a *       throw \x27four!\x27;\x0a *     }\x0a *     return n;\x0a *   })\x0a *   .catch(err =\x3e {\x0a *     throw \x27error in source. Details: \x27 + err;\x0a *   })\x0a *   .subscribe(\x0a *     x =\x3e console.log(x),\x0a *     err =\x3e console.log(err)\x0a *   );\x0a *   // 1, 2, 3, error in source. Details: four!\x0a *\x0a * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\x0a *  is the source observable, in case you\x27d like to \x22retry\x22 that observable by returning it again. Whatever observable\x0a *  is returned by the `selector` will be used to continue the observable chain.\x0a * @return {Observable} An observable that originates from either the source or the observable returned by the\x0a *  catch `selector` function.\x0a * @method catch\x0a * @name catch\x0a * @owner Observable\x0a */\x0afunction _catch(selector) {\x0a    return Object(__WEBPACK_IMPORTED_MODULE_0__operators_catchError__[\x22a\x22 /* catchError */])(selector)(this);\x0a}\x0a//# sourceMappingURL=catch.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operator/concatAll.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (immutable) */ __webpack_exports__[\x22a\x22] = concatAll;\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__operators_concatAll__ = __webpack_require__(\x22../../../../rxjs/_esm5/operators/concatAll.js\x22);\x0a/** PURE_IMPORTS_START .._operators_concatAll PURE_IMPORTS_END */\x0a\x0a/* tslint:enable:max-line-length */\x0a/**\x0a * Converts a higher-order Observable into a first-order Observable by\x0a * concatenating the inner Observables in order.\x0a *\x0a * \x3cspan class=\x22informal\x22\x3eFlattens an Observable-of-Observables by putting one\x0a * inner Observable after the other.\x3c/span\x3e\x0a *\x0a * \x3cimg src=\x22./img/concatAll.png\x22 width=\x22100%\x22\x3e\x0a *\x0a * Joins every Observable emitted by the source (a higher-order Observable), in\x0a * a serial fashion. It subscribes to each inner Observable only after the\x0a * previous inner Observable has completed, and merges all of their values into\x0a * the returned observable.\x0a *\x0a * __Warning:__ If the source Observable emits Observables quickly and\x0a * endlessly, and the inner Observables it emits generally complete slower than\x0a * the source emits, you can run into memory issues as the incoming Observables\x0a * collect in an unbounded buffer.\x0a *\x0a * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\x0a * to `1`.\x0a *\x0a * @example \x3ccaption\x3eFor each click event, tick every second from 0 to 3, with no concurrency\x3c/caption\x3e\x0a * var clicks = Rx.Observable.fromEvent(document, \x27click\x27);\x0a * var higherOrder = clicks.map(ev =\x3e Rx.Observable.interval(1000).take(4));\x0a * var firstOrder = higherOrder.concatAll();\x0a * firstOrder.subscribe(x =\x3e console.log(x));\x0a *\x0a * // Results in the following:\x0a * // (results are not concurrent)\x0a * // For every click on the \x22document\x22 it will emit values 0 to 3 spaced\x0a * // on a 1000ms interval\x0a * // one click = 1000ms-\x3e 0 -1000ms-\x3e 1 -1000ms-\x3e 2 -1000ms-\x3e 3\x0a *\x0a * @see {@link combineAll}\x0a * @see {@link concat}\x0a * @see {@link concatMap}\x0a * @see {@link concatMapTo}\x0a * @see {@link exhaust}\x0a * @see {@link mergeAll}\x0a * @see {@link switch}\x0a * @see {@link zipAll}\x0a *\x0a * @return {Observable} An Observable emitting values from all the inner\x0a * Observables concatenated.\x0a * @method concatAll\x0a * @owner Observable\x0a */\x0afunction concatAll() {\x0a    return Object(__WEBPACK_IMPORTED_MODULE_0__operators_concatAll__[\x22a\x22 /* concatAll */])()(this);\x0a}\x0a//# sourceMappingURL=concatAll.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operator/concatMap.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (immutable) */ __webpack_exports__[\x22a\x22] = concatMap;\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__operators_concatMap__ = __webpack_require__(\x22../../../../rxjs/_esm5/operators/concatMap.js\x22);\x0a/** PURE_IMPORTS_START .._operators_concatMap PURE_IMPORTS_END */\x0a\x0a/* tslint:enable:max-line-length */\x0a/**\x0a * Projects each source value to an Observable which is merged in the output\x0a * Observable, in a serialized fashion waiting for each one to complete before\x0a * merging the next.\x0a *\x0a * \x3cspan class=\x22informal\x22\x3eMaps each value to an Observable, then flattens all of\x0a * these inner Observables using {@link concatAll}.\x3c/span\x3e\x0a *\x0a * \x3cimg src=\x22./img/concatMap.png\x22 width=\x22100%\x22\x3e\x0a *\x0a * Returns an Observable that emits items based on applying a function that you\x0a * supply to each item emitted by the source Observable, where that function\x0a * returns an (so-called \x22inner\x22) Observable. Each new inner Observable is\x0a * concatenated with the previous inner Observable.\x0a *\x0a * __Warning:__ if source values arrive endlessly and faster than their\x0a * corresponding inner Observables can complete, it will result in memory issues\x0a * as inner Observables amass in an unbounded buffer waiting for their turn to\x0a * be subscribed to.\x0a *\x0a * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\x0a * to `1`.\x0a *\x0a * @example \x3ccaption\x3eFor each click event, tick every second from 0 to 3, with no concurrency\x3c/caption\x3e\x0a * var clicks = Rx.Observable.fromEvent(document, \x27click\x27);\x0a * var result = clicks.concatMap(ev =\x3e Rx.Observable.interval(1000).take(4));\x0a * result.subscribe(x =\x3e console.log(x));\x0a *\x0a * // Results in the following:\x0a * // (results are not concurrent)\x0a * // For every click on the \x22document\x22 it will emit values 0 to 3 spaced\x0a * // on a 1000ms interval\x0a * // one click = 1000ms-\x3e 0 -1000ms-\x3e 1 -1000ms-\x3e 2 -1000ms-\x3e 3\x0a *\x0a * @see {@link concat}\x0a * @see {@link concatAll}\x0a * @see {@link concatMapTo}\x0a * @see {@link exhaustMap}\x0a * @see {@link mergeMap}\x0a * @see {@link switchMap}\x0a *\x0a * @param {function(value: T, ?index: number): ObservableInput} project A function\x0a * that, when applied to an item emitted by the source Observable, returns an\x0a * Observable.\x0a * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\x0a * A function to produce the value on the output Observable based on the values\x0a * and the indices of the source (outer) emission and the inner Observable\x0a * emission. The arguments passed to this function are:\x0a * - `outerValue`: the value that came from the source\x0a * - `innerValue`: the value that came from the projected Observable\x0a * - `outerIndex`: the \x22index\x22 of the value that came from the source\x0a * - `innerIndex`: the \x22index\x22 of the value from the projected Observable\x0a * @return {Observable} An Observable that emits the result of applying the\x0a * projection function (and the optional `resultSelector`) to each item emitted\x0a * by the source Observable and taking values from each projected inner\x0a * Observable sequentially.\x0a * @method concatMap\x0a * @owner Observable\x0a */\x0afunction concatMap(project, resultSelector) {\x0a    return Object(__WEBPACK_IMPORTED_MODULE_0__operators_concatMap__[\x22a\x22 /* concatMap */])(project, resultSelector)(this);\x0a}\x0a//# sourceMappingURL=concatMap.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operator/delay.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (immutable) */ __webpack_exports__[\x22a\x22] = delay;\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__scheduler_async__ = __webpack_require__(\x22../../../../rxjs/_esm5/scheduler/async.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__operators_delay__ = __webpack_require__(\x22../../../../rxjs/_esm5/operators/delay.js\x22);\x0a/** PURE_IMPORTS_START .._scheduler_async,.._operators_delay PURE_IMPORTS_END */\x0a\x0a\x0a/**\x0a * Delays the emission of items from the source Observable by a given timeout or\x0a * until a given Date.\x0a *\x0a * \x3cspan class=\x22informal\x22\x3eTime shifts each item by some specified amount of\x0a * milliseconds.\x3c/span\x3e\x0a *\x0a * \x3cimg src=\x22./img/delay.png\x22 width=\x22100%\x22\x3e\x0a *\x0a * If the delay argument is a Number, this operator time shifts the source\x0a * Observable by that amount of time expressed in milliseconds. The relative\x0a * time intervals between the values are preserved.\x0a *\x0a * If the delay argument is a Date, this operator time shifts the start of the\x0a * Observable execution until the given date occurs.\x0a *\x0a * @example \x3ccaption\x3eDelay each click by one second\x3c/caption\x3e\x0a * var clicks = Rx.Observable.fromEvent(document, \x27click\x27);\x0a * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\x0a * delayedClicks.subscribe(x =\x3e console.log(x));\x0a *\x0a * @example \x3ccaption\x3eDelay all clicks until a future date happens\x3c/caption\x3e\x0a * var clicks = Rx.Observable.fromEvent(document, \x27click\x27);\x0a * var date = new Date(\x27March 15, 2050 12:00:00\x27); // in the future\x0a * var delayedClicks = clicks.delay(date); // click emitted only after that date\x0a * delayedClicks.subscribe(x =\x3e console.log(x));\x0a *\x0a * @see {@link debounceTime}\x0a * @see {@link delayWhen}\x0a *\x0a * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\x0a * a `Date` until which the emission of the source items is delayed.\x0a * @param {Scheduler} [scheduler=async] The IScheduler to use for\x0a * managing the timers that handle the time-shift for each item.\x0a * @return {Observable} An Observable that delays the emissions of the source\x0a * Observable by the specified timeout or Date.\x0a * @method delay\x0a * @owner Observable\x0a */\x0afunction delay(delay, scheduler) {\x0a    if (scheduler === void 0) {\x0a        scheduler = __WEBPACK_IMPORTED_MODULE_0__scheduler_async__[\x22a\x22 /* async */];\x0a    }\x0a    return Object(__WEBPACK_IMPORTED_MODULE_1__operators_delay__[\x22a\x22 /* delay */])(delay, scheduler)(this);\x0a}\x0a//# sourceMappingURL=delay.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operator/do.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (immutable) */ __webpack_exports__[\x22a\x22] = _do;\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__operators_tap__ = __webpack_require__(\x22../../../../rxjs/_esm5/operators/tap.js\x22);\x0a/** PURE_IMPORTS_START .._operators_tap PURE_IMPORTS_END */\x0a\x0a/* tslint:enable:max-line-length */\x0a/**\x0a * Perform a side effect for every emission on the source Observable, but return\x0a * an Observable that is identical to the source.\x0a *\x0a * \x3cspan class=\x22informal\x22\x3eIntercepts each emission on the source and runs a\x0a * function, but returns an output which is identical to the source as long as errors don\x27t occur.\x3c/span\x3e\x0a *\x0a * \x3cimg src=\x22./img/do.png\x22 width=\x22100%\x22\x3e\x0a *\x0a * Returns a mirrored Observable of the source Observable, but modified so that\x0a * the provided Observer is called to perform a side effect for every value,\x0a * error, and completion emitted by the source. Any errors that are thrown in\x0a * the aforementioned Observer or handlers are safely sent down the error path\x0a * of the output Observable.\x0a *\x0a * This operator is useful for debugging your Observables for the correct values\x0a * or performing other side effects.\x0a *\x0a * Note: this is different to a `subscribe` on the Observable. If the Observable\x0a * returned by `do` is not subscribed, the side effects specified by the\x0a * Observer will never happen. `do` therefore simply spies on existing\x0a * execution, it does not trigger an execution to happen like `subscribe` does.\x0a *\x0a * @example \x3ccaption\x3eMap every click to the clientX position of that click, while also logging the click event\x3c/caption\x3e\x0a * var clicks = Rx.Observable.fromEvent(document, \x27click\x27);\x0a * var positions = clicks\x0a *   .do(ev =\x3e console.log(ev))\x0a *   .map(ev =\x3e ev.clientX);\x0a * positions.subscribe(x =\x3e console.log(x));\x0a *\x0a * @see {@link map}\x0a * @see {@link subscribe}\x0a *\x0a * @param {Observer|function} [nextOrObserver] A normal Observer object or a\x0a * callback for `next`.\x0a * @param {function} [error] Callback for errors in the source.\x0a * @param {function} [complete] Callback for the completion of the source.\x0a * @return {Observable} An Observable identical to the source, but runs the\x0a * specified Observer or callback(s) for each item.\x0a * @method do\x0a * @name do\x0a * @owner Observable\x0a */\x0afunction _do(nextOrObserver, error, complete) {\x0a    return Object(__WEBPACK_IMPORTED_MODULE_0__operators_tap__[\x22a\x22 /* tap */])(nextOrObserver, error, complete)(this);\x0a}\x0a//# sourceMappingURL=do.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operator/every.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (immutable) */ __webpack_exports__[\x22a\x22] = every;\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__operators_every__ = __webpack_require__(\x22../../../../rxjs/_esm5/operators/every.js\x22);\x0a/** PURE_IMPORTS_START .._operators_every PURE_IMPORTS_END */\x0a\x0a/**\x0a * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\x0a *\x0a * @example \x3ccaption\x3eA simple example emitting true if all elements are less than 5, false otherwise\x3c/caption\x3e\x0a *  Observable.of(1, 2, 3, 4, 5, 6)\x0a *     .every(x =\x3e x \x3c 5)\x0a *     .subscribe(x =\x3e console.log(x)); // -\x3e false\x0a *\x0a * @param {function} predicate A function for determining if an item meets a specified condition.\x0a * @param {any} [thisArg] Optional object to use for `this` in the callback.\x0a * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\x0a * @method every\x0a * @owner Observable\x0a */\x0afunction every(predicate, thisArg) {\x0a    return Object(__WEBPACK_IMPORTED_MODULE_0__operators_every__[\x22a\x22 /* every */])(predicate, thisArg)(this);\x0a}\x0a//# sourceMappingURL=every.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operator/filter.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (immutable) */ __webpack_exports__[\x22a\x22] = filter;\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__operators_filter__ = __webpack_require__(\x22../../../../rxjs/_esm5/operators/filter.js\x22);\x0a/** PURE_IMPORTS_START .._operators_filter PURE_IMPORTS_END */\x0a\x0a/* tslint:enable:max-line-length */\x0a/**\x0a * Filter items emitted by the source Observable by only emitting those that\x0a * satisfy a specified predicate.\x0a *\x0a * \x3cspan class=\x22informal\x22\x3eLike\x0a * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\x0a * it only emits a value from the source if it passes a criterion function.\x3c/span\x3e\x0a *\x0a * \x3cimg src=\x22./img/filter.png\x22 width=\x22100%\x22\x3e\x0a *\x0a * Similar to the well-known `Array.prototype.filter` method, this operator\x0a * takes values from the source Observable, passes them through a `predicate`\x0a * function and only emits those values that yielded `true`.\x0a *\x0a * @example \x3ccaption\x3eEmit only click events whose target was a DIV element\x3c/caption\x3e\x0a * var clicks = Rx.Observable.fromEvent(document, \x27click\x27);\x0a * var clicksOnDivs = clicks.filter(ev =\x3e ev.target.tagName === \x27DIV\x27);\x0a * clicksOnDivs.subscribe(x =\x3e console.log(x));\x0a *\x0a * @see {@link distinct}\x0a * @see {@link distinctUntilChanged}\x0a * @see {@link distinctUntilKeyChanged}\x0a * @see {@link ignoreElements}\x0a * @see {@link partition}\x0a * @see {@link skip}\x0a *\x0a * @param {function(value: T, index: number): boolean} predicate A function that\x0a * evaluates each value emitted by the source Observable. If it returns `true`,\x0a * the value is emitted, if `false` the value is not passed to the output\x0a * Observable. The `index` parameter is the number `i` for the i-th source\x0a * emission that has happened since the subscription, starting from the number\x0a * `0`.\x0a * @param {any} [thisArg] An optional argument to determine the value of `this`\x0a * in the `predicate` function.\x0a * @return {Observable} An Observable of values from the source that were\x0a * allowed by the `predicate` function.\x0a * @method filter\x0a * @owner Observable\x0a */\x0afunction filter(predicate, thisArg) {\x0a    return Object(__WEBPACK_IMPORTED_MODULE_0__operators_filter__[\x22a\x22 /* filter */])(predicate, thisArg)(this);\x0a}\x0a//# sourceMappingURL=filter.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operator/first.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (immutable) */ __webpack_exports__[\x22a\x22] = first;\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__operators_first__ = __webpack_require__(\x22../../../../rxjs/_esm5/operators/first.js\x22);\x0a/** PURE_IMPORTS_START .._operators_first PURE_IMPORTS_END */\x0a\x0a/**\x0a * Emits only the first value (or the first value that meets some condition)\x0a * emitted by the source Observable.\x0a *\x0a * \x3cspan class=\x22informal\x22\x3eEmits only the first value. Or emits only the first\x0a * value that passes some test.\x3c/span\x3e\x0a *\x0a * \x3cimg src=\x22./img/first.png\x22 width=\x22100%\x22\x3e\x0a *\x0a * If called with no arguments, `first` emits the first value of the source\x0a * Observable, then completes. If called with a `predicate` function, `first`\x0a * emits the first value of the source that matches the specified condition. It\x0a * may also take a `resultSelector` function to produce the output value from\x0a * the input value, and a `defaultValue` to emit in case the source completes\x0a * before it is able to emit a valid value. Throws an error if `defaultValue`\x0a * was not provided and a matching element is not found.\x0a *\x0a * @example \x3ccaption\x3eEmit only the first click that happens on the DOM\x3c/caption\x3e\x0a * var clicks = Rx.Observable.fromEvent(document, \x27click\x27);\x0a * var result = clicks.first();\x0a * result.subscribe(x =\x3e console.log(x));\x0a *\x0a * @example \x3ccaption\x3eEmits the first click that happens on a DIV\x3c/caption\x3e\x0a * var clicks = Rx.Observable.fromEvent(document, \x27click\x27);\x0a * var result = clicks.first(ev =\x3e ev.target.tagName === \x27DIV\x27);\x0a * result.subscribe(x =\x3e console.log(x));\x0a *\x0a * @see {@link filter}\x0a * @see {@link find}\x0a * @see {@link take}\x0a *\x0a * @throws {EmptyError} Delivers an EmptyError to the Observer\x27s `error`\x0a * callback if the Observable completes before any `next` notification was sent.\x0a *\x0a * @param {function(value: T, index: number, source: Observable\x3cT\x3e): boolean} [predicate]\x0a * An optional function called with each item to test for condition matching.\x0a * @param {function(value: T, index: number): R} [resultSelector] A function to\x0a * produce the value on the output Observable based on the values\x0a * and the indices of the source Observable. The arguments passed to this\x0a * function are:\x0a * - `value`: the value that was emitted on the source.\x0a * - `index`: the \x22index\x22 of the value from the source.\x0a * @param {R} [defaultValue] The default value emitted in case no valid value\x0a * was found on the source.\x0a * @return {Observable\x3cT|R\x3e} An Observable of the first item that matches the\x0a * condition.\x0a * @method first\x0a * @owner Observable\x0a */\x0afunction first(predicate, resultSelector, defaultValue) {\x0a    return Object(__WEBPACK_IMPORTED_MODULE_0__operators_first__[\x22a\x22 /* first */])(predicate, resultSelector, defaultValue)(this);\x0a}\x0a//# sourceMappingURL=first.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operator/last.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (immutable) */ __webpack_exports__[\x22a\x22] = last;\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__operators_last__ = __webpack_require__(\x22../../../../rxjs/_esm5/operators/last.js\x22);\x0a/** PURE_IMPORTS_START .._operators_last PURE_IMPORTS_END */\x0a\x0a/* tslint:enable:max-line-length */\x0a/**\x0a * Returns an Observable that emits only the last item emitted by the source Observable.\x0a * It optionally takes a predicate function as a parameter, in which case, rather than emitting\x0a * the last item from the source Observable, the resulting Observable will emit the last item\x0a * from the source Observable that satisfies the predicate.\x0a *\x0a * \x3cimg src=\x22./img/last.png\x22 width=\x22100%\x22\x3e\x0a *\x0a * @throws {EmptyError} Delivers an EmptyError to the Observer\x27s `error`\x0a * callback if the Observable completes before any `next` notification was sent.\x0a * @param {function} predicate - The condition any source emitted item has to satisfy.\x0a * @return {Observable} An Observable that emits only the last item satisfying the given condition\x0a * from the source, or an NoSuchElementException if no such items are emitted.\x0a * @throws - Throws if no items that match the predicate are emitted by the source Observable.\x0a * @method last\x0a * @owner Observable\x0a */\x0afunction last(predicate, resultSelector, defaultValue) {\x0a    return Object(__WEBPACK_IMPORTED_MODULE_0__operators_last__[\x22a\x22 /* last */])(predicate, resultSelector, defaultValue)(this);\x0a}\x0a//# sourceMappingURL=last.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operator/map.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (immutable) */ __webpack_exports__[\x22a\x22] = map;\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__operators_map__ = __webpack_require__(\x22../../../../rxjs/_esm5/operators/map.js\x22);\x0a/** PURE_IMPORTS_START .._operators_map PURE_IMPORTS_END */\x0a\x0a/**\x0a * Applies a given `project` function to each value emitted by the source\x0a * Observable, and emits the resulting values as an Observable.\x0a *\x0a * \x3cspan class=\x22informal\x22\x3eLike [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\x0a * it passes each source value through a transformation function to get\x0a * corresponding output values.\x3c/span\x3e\x0a *\x0a * \x3cimg src=\x22./img/map.png\x22 width=\x22100%\x22\x3e\x0a *\x0a * Similar to the well known `Array.prototype.map` function, this operator\x0a * applies a projection to each value and emits that projection in the output\x0a * Observable.\x0a *\x0a * @example \x3ccaption\x3eMap every click to the clientX position of that click\x3c/caption\x3e\x0a * var clicks = Rx.Observable.fromEvent(document, \x27click\x27);\x0a * var positions = clicks.map(ev =\x3e ev.clientX);\x0a * positions.subscribe(x =\x3e console.log(x));\x0a *\x0a * @see {@link mapTo}\x0a * @see {@link pluck}\x0a *\x0a * @param {function(value: T, index: number): R} project The function to apply\x0a * to each `value` emitted by the source Observable. The `index` parameter is\x0a * the number `i` for the i-th emission that has happened since the\x0a * subscription, starting from the number `0`.\x0a * @param {any} [thisArg] An optional argument to define what `this` is in the\x0a * `project` function.\x0a * @return {Observable\x3cR\x3e} An Observable that emits the values from the source\x0a * Observable transformed by the given `project` function.\x0a * @method map\x0a * @owner Observable\x0a */\x0afunction map(project, thisArg) {\x0a    return Object(__WEBPACK_IMPORTED_MODULE_0__operators_map__[\x22a\x22 /* map */])(project, thisArg)(this);\x0a}\x0a//# sourceMappingURL=map.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operator/merge.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* unused harmony export merge */\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__operators_merge__ = __webpack_require__(\x22../../../../rxjs/_esm5/operators/merge.js\x22);\x0a/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return __WEBPACK_IMPORTED_MODULE_0__operators_merge__[\x22b\x22]; });\x0a/** PURE_IMPORTS_START .._operators_merge PURE_IMPORTS_END */\x0a\x0a\x0a/* tslint:enable:max-line-length */\x0a/**\x0a * Creates an output Observable which concurrently emits all values from every\x0a * given input Observable.\x0a *\x0a * \x3cspan class=\x22informal\x22\x3eFlattens multiple Observables together by blending\x0a * their values into one Observable.\x3c/span\x3e\x0a *\x0a * \x3cimg src=\x22./img/merge.png\x22 width=\x22100%\x22\x3e\x0a *\x0a * `merge` subscribes to each given input Observable (either the source or an\x0a * Observable given as argument), and simply forwards (without doing any\x0a * transformation) all the values from all the input Observables to the output\x0a * Observable. The output Observable only completes once all input Observables\x0a * have completed. Any error delivered by an input Observable will be immediately\x0a * emitted on the output Observable.\x0a *\x0a * @example \x3ccaption\x3eMerge together two Observables: 1s interval and clicks\x3c/caption\x3e\x0a * var clicks = Rx.Observable.fromEvent(document, \x27click\x27);\x0a * var timer = Rx.Observable.interval(1000);\x0a * var clicksOrTimer = clicks.merge(timer);\x0a * clicksOrTimer.subscribe(x =\x3e console.log(x));\x0a *\x0a * @example \x3ccaption\x3eMerge together 3 Observables, but only 2 run concurrently\x3c/caption\x3e\x0a * var timer1 = Rx.Observable.interval(1000).take(10);\x0a * var timer2 = Rx.Observable.interval(2000).take(6);\x0a * var timer3 = Rx.Observable.interval(500).take(10);\x0a * var concurrent = 2; // the argument\x0a * var merged = timer1.merge(timer2, timer3, concurrent);\x0a * merged.subscribe(x =\x3e console.log(x));\x0a *\x0a * @see {@link mergeAll}\x0a * @see {@link mergeMap}\x0a * @see {@link mergeMapTo}\x0a * @see {@link mergeScan}\x0a *\x0a * @param {ObservableInput} other An input Observable to merge with the source\x0a * Observable. More than one input Observables may be given as argument.\x0a * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\x0a * Observables being subscribed to concurrently.\x0a * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\x0a * concurrency of input Observables.\x0a * @return {Observable} An Observable that emits items that are the result of\x0a * every input Observable.\x0a * @method merge\x0a * @owner Observable\x0a */\x0afunction merge() {\x0a    var observables = [];\x0a    for (var _i = 0; _i \x3c arguments.length; _i++) {\x0a        observables[_i - 0] = arguments[_i];\x0a    }\x0a    return __WEBPACK_IMPORTED_MODULE_0__operators_merge__[\x22a\x22 /* merge */].apply(void 0, observables)(this);\x0a}\x0a//# sourceMappingURL=merge.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operator/mergeAll.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (immutable) */ __webpack_exports__[\x22a\x22] = mergeAll;\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__operators_mergeAll__ = __webpack_require__(\x22../../../../rxjs/_esm5/operators/mergeAll.js\x22);\x0a/** PURE_IMPORTS_START .._operators_mergeAll PURE_IMPORTS_END */\x0a\x0a/**\x0a * Converts a higher-order Observable into a first-order Observable which\x0a * concurrently delivers all values that are emitted on the inner Observables.\x0a *\x0a * \x3cspan class=\x22informal\x22\x3eFlattens an Observable-of-Observables.\x3c/span\x3e\x0a *\x0a * \x3cimg src=\x22./img/mergeAll.png\x22 width=\x22100%\x22\x3e\x0a *\x0a * `mergeAll` subscribes to an Observable that emits Observables, also known as\x0a * a higher-order Observable. Each time it observes one of these emitted inner\x0a * Observables, it subscribes to that and delivers all the values from the\x0a * inner Observable on the output Observable. The output Observable only\x0a * completes once all inner Observables have completed. Any error delivered by\x0a * a inner Observable will be immediately emitted on the output Observable.\x0a *\x0a * @example \x3ccaption\x3eSpawn a new interval Observable for each click event, and blend their outputs as one Observable\x3c/caption\x3e\x0a * var clicks = Rx.Observable.fromEvent(document, \x27click\x27);\x0a * var higherOrder = clicks.map((ev) =\x3e Rx.Observable.interval(1000));\x0a * var firstOrder = higherOrder.mergeAll();\x0a * firstOrder.subscribe(x =\x3e console.log(x));\x0a *\x0a * @example \x3ccaption\x3eCount from 0 to 9 every second for each click, but only allow 2 concurrent timers\x3c/caption\x3e\x0a * var clicks = Rx.Observable.fromEvent(document, \x27click\x27);\x0a * var higherOrder = clicks.map((ev) =\x3e Rx.Observable.interval(1000).take(10));\x0a * var firstOrder = higherOrder.mergeAll(2);\x0a * firstOrder.subscribe(x =\x3e console.log(x));\x0a *\x0a * @see {@link combineAll}\x0a * @see {@link concatAll}\x0a * @see {@link exhaust}\x0a * @see {@link merge}\x0a * @see {@link mergeMap}\x0a * @see {@link mergeMapTo}\x0a * @see {@link mergeScan}\x0a * @see {@link switch}\x0a * @see {@link zipAll}\x0a *\x0a * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\x0a * Observables being subscribed to concurrently.\x0a * @return {Observable} An Observable that emits values coming from all the\x0a * inner Observables emitted by the source Observable.\x0a * @method mergeAll\x0a * @owner Observable\x0a */\x0afunction mergeAll(concurrent) {\x0a    if (concurrent === void 0) {\x0a        concurrent = Number.POSITIVE_INFINITY;\x0a    }\x0a    return Object(__WEBPACK_IMPORTED_MODULE_0__operators_mergeAll__[\x22a\x22 /* mergeAll */])(concurrent)(this);\x0a}\x0a//# sourceMappingURL=mergeAll.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operator/mergeMap.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (immutable) */ __webpack_exports__[\x22a\x22] = mergeMap;\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__operators_mergeMap__ = __webpack_require__(\x22../../../../rxjs/_esm5/operators/mergeMap.js\x22);\x0a/** PURE_IMPORTS_START .._operators_mergeMap PURE_IMPORTS_END */\x0a\x0a/* tslint:enable:max-line-length */\x0a/**\x0a * Projects each source value to an Observable which is merged in the output\x0a * Observable.\x0a *\x0a * \x3cspan class=\x22informal\x22\x3eMaps each value to an Observable, then flattens all of\x0a * these inner Observables using {@link mergeAll}.\x3c/span\x3e\x0a *\x0a * \x3cimg src=\x22./img/mergeMap.png\x22 width=\x22100%\x22\x3e\x0a *\x0a * Returns an Observable that emits items based on applying a function that you\x0a * supply to each item emitted by the source Observable, where that function\x0a * returns an Observable, and then merging those resulting Observables and\x0a * emitting the results of this merger.\x0a *\x0a * @example \x3ccaption\x3eMap and flatten each letter to an Observable ticking every 1 second\x3c/caption\x3e\x0a * var letters = Rx.Observable.of(\x27a\x27, \x27b\x27, \x27c\x27);\x0a * var result = letters.mergeMap(x =\x3e\x0a *   Rx.Observable.interval(1000).map(i =\x3e x+i)\x0a * );\x0a * result.subscribe(x =\x3e console.log(x));\x0a *\x0a * // Results in the following:\x0a * // a0\x0a * // b0\x0a * // c0\x0a * // a1\x0a * // b1\x0a * // c1\x0a * // continues to list a,b,c with respective ascending integers\x0a *\x0a * @see {@link concatMap}\x0a * @see {@link exhaustMap}\x0a * @see {@link merge}\x0a * @see {@link mergeAll}\x0a * @see {@link mergeMapTo}\x0a * @see {@link mergeScan}\x0a * @see {@link switchMap}\x0a *\x0a * @param {function(value: T, ?index: number): ObservableInput} project A function\x0a * that, when applied to an item emitted by the source Observable, returns an\x0a * Observable.\x0a * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\x0a * A function to produce the value on the output Observable based on the values\x0a * and the indices of the source (outer) emission and the inner Observable\x0a * emission. The arguments passed to this function are:\x0a * - `outerValue`: the value that came from the source\x0a * - `innerValue`: the value that came from the projected Observable\x0a * - `outerIndex`: the \x22index\x22 of the value that came from the source\x0a * - `innerIndex`: the \x22index\x22 of the value from the projected Observable\x0a * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\x0a * Observables being subscribed to concurrently.\x0a * @return {Observable} An Observable that emits the result of applying the\x0a * projection function (and the optional `resultSelector`) to each item emitted\x0a * by the source Observable and merging the results of the Observables obtained\x0a * from this transformation.\x0a * @method mergeMap\x0a * @owner Observable\x0a */\x0afunction mergeMap(project, resultSelector, concurrent) {\x0a    if (concurrent === void 0) {\x0a        concurrent = Number.POSITIVE_INFINITY;\x0a    }\x0a    return Object(__WEBPACK_IMPORTED_MODULE_0__operators_mergeMap__[\x22a\x22 /* mergeMap */])(project, resultSelector, concurrent)(this);\x0a}\x0a//# sourceMappingURL=mergeMap.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operator/reduce.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (immutable) */ __webpack_exports__[\x22a\x22] = reduce;\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__operators_reduce__ = __webpack_require__(\x22../../../../rxjs/_esm5/operators/reduce.js\x22);\x0a/** PURE_IMPORTS_START .._operators_reduce PURE_IMPORTS_END */\x0a\x0a/* tslint:enable:max-line-length */\x0a/**\x0a * Applies an accumulator function over the source Observable, and returns the\x0a * accumulated result when the source completes, given an optional seed value.\x0a *\x0a * \x3cspan class=\x22informal\x22\x3eCombines together all values emitted on the source,\x0a * using an accumulator function that knows how to join a new source value into\x0a * the accumulation from the past.\x3c/span\x3e\x0a *\x0a * \x3cimg src=\x22./img/reduce.png\x22 width=\x22100%\x22\x3e\x0a *\x0a * Like\x0a * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\x0a * `reduce` applies an `accumulator` function against an accumulation and each\x0a * value of the source Observable (from the past) to reduce it to a single\x0a * value, emitted on the output Observable. Note that `reduce` will only emit\x0a * one value, only when the source Observable completes. It is equivalent to\x0a * applying operator {@link scan} followed by operator {@link last}.\x0a *\x0a * Returns an Observable that applies a specified `accumulator` function to each\x0a * item emitted by the source Observable. If a `seed` value is specified, then\x0a * that value will be used as the initial value for the accumulator. If no seed\x0a * value is specified, the first item of the source is used as the seed.\x0a *\x0a * @example \x3ccaption\x3eCount the number of click events that happened in 5 seconds\x3c/caption\x3e\x0a * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, \x27click\x27)\x0a *   .takeUntil(Rx.Observable.interval(5000));\x0a * var ones = clicksInFiveSeconds.mapTo(1);\x0a * var seed = 0;\x0a * var count = ones.reduce((acc, one) =\x3e acc + one, seed);\x0a * count.subscribe(x =\x3e console.log(x));\x0a *\x0a * @see {@link count}\x0a * @see {@link expand}\x0a * @see {@link mergeScan}\x0a * @see {@link scan}\x0a *\x0a * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\x0a * called on each source value.\x0a * @param {R} [seed] The initial accumulation value.\x0a * @return {Observable\x3cR\x3e} An Observable that emits a single value that is the\x0a * result of accumulating the values emitted by the source Observable.\x0a * @method reduce\x0a * @owner Observable\x0a */\x0afunction reduce(accumulator, seed) {\x0a    // providing a seed of `undefined` *should* be valid and trigger\x0a    // hasSeed! so don\x27t use `seed !== undefined` checks!\x0a    // For this reason, we have to check it here at the original call site\x0a    // otherwise inside Operator/Subscriber we won\x27t know if `undefined`\x0a    // means they didn\x27t provide anything or if they literally provided `undefined`\x0a    if (arguments.length \x3e= 2) {\x0a        return Object(__WEBPACK_IMPORTED_MODULE_0__operators_reduce__[\x22a\x22 /* reduce */])(accumulator, seed)(this);\x0a    }\x0a    return Object(__WEBPACK_IMPORTED_MODULE_0__operators_reduce__[\x22a\x22 /* reduce */])(accumulator)(this);\x0a}\x0a//# sourceMappingURL=reduce.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operator/share.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (immutable) */ __webpack_exports__[\x22a\x22] = share;\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__operators_share__ = __webpack_require__(\x22../../../../rxjs/_esm5/operators/share.js\x22);\x0a/** PURE_IMPORTS_START .._operators_share PURE_IMPORTS_END */\x0a\x0a/**\x0a * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\x0a * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\x0a * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\x0a *\x0a * This behaves similarly to .publish().refCount(), with a behavior difference when the source observable emits complete.\x0a * .publish().refCount() will not resubscribe to the original source, however .share() will resubscribe to the original source.\x0a * Observable.of(\x22test\x22).publish().refCount() will not re-emit \x22test\x22 on new subscriptions, Observable.of(\x22test\x22).share() will\x0a * re-emit \x22test\x22 to new subscriptions.\x0a *\x0a * \x3cimg src=\x22./img/share.png\x22 width=\x22100%\x22\x3e\x0a *\x0a * @return {Observable\x3cT\x3e} An Observable that upon connection causes the source Observable to emit items to its Observers.\x0a * @method share\x0a * @owner Observable\x0a */\x0afunction share() {\x0a    return Object(__WEBPACK_IMPORTED_MODULE_0__operators_share__[\x22a\x22 /* share */])()(this);\x0a}\x0a;\x0a//# sourceMappingURL=share.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operators/catchError.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (immutable) */ __webpack_exports__[\x22a\x22] = catchError;\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__OuterSubscriber__ = __webpack_require__(\x22../../../../rxjs/_esm5/OuterSubscriber.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_subscribeToResult__ = __webpack_require__(\x22../../../../rxjs/_esm5/util/subscribeToResult.js\x22);\x0a/** PURE_IMPORTS_START .._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\x0avar __extends = (this && this.__extends) || function (d, b) {\x0a    for (var p in b)\x0a        if (b.hasOwnProperty(p))\x0a            d[p] = b[p];\x0a    function __() { this.constructor = d; }\x0a    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\x0a};\x0a\x0a\x0a/**\x0a * Catches errors on the observable to be handled by returning a new observable or throwing an error.\x0a *\x0a * \x3cimg src=\x22./img/catch.png\x22 width=\x22100%\x22\x3e\x0a *\x0a * @example \x3ccaption\x3eContinues with a different Observable when there\x27s an error\x3c/caption\x3e\x0a *\x0a * Observable.of(1, 2, 3, 4, 5)\x0a *   .map(n =\x3e {\x0a * \x09   if (n == 4) {\x0a * \x09     throw \x27four!\x27;\x0a *     }\x0a *\x09   return n;\x0a *   })\x0a *   .catch(err =\x3e Observable.of(\x27I\x27, \x27II\x27, \x27III\x27, \x27IV\x27, \x27V\x27))\x0a *   .subscribe(x =\x3e console.log(x));\x0a *   // 1, 2, 3, I, II, III, IV, V\x0a *\x0a * @example \x3ccaption\x3eRetries the caught source Observable again in case of error, similar to retry() operator\x3c/caption\x3e\x0a *\x0a * Observable.of(1, 2, 3, 4, 5)\x0a *   .map(n =\x3e {\x0a * \x09   if (n === 4) {\x0a * \x09     throw \x27four!\x27;\x0a *     }\x0a * \x09   return n;\x0a *   })\x0a *   .catch((err, caught) =\x3e caught)\x0a *   .take(30)\x0a *   .subscribe(x =\x3e console.log(x));\x0a *   // 1, 2, 3, 1, 2, 3, ...\x0a *\x0a * @example \x3ccaption\x3eThrows a new error when the source Observable throws an error\x3c/caption\x3e\x0a *\x0a * Observable.of(1, 2, 3, 4, 5)\x0a *   .map(n =\x3e {\x0a *     if (n == 4) {\x0a *       throw \x27four!\x27;\x0a *     }\x0a *     return n;\x0a *   })\x0a *   .catch(err =\x3e {\x0a *     throw \x27error in source. Details: \x27 + err;\x0a *   })\x0a *   .subscribe(\x0a *     x =\x3e console.log(x),\x0a *     err =\x3e console.log(err)\x0a *   );\x0a *   // 1, 2, 3, error in source. Details: four!\x0a *\x0a * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\x0a *  is the source observable, in case you\x27d like to \x22retry\x22 that observable by returning it again. Whatever observable\x0a *  is returned by the `selector` will be used to continue the observable chain.\x0a * @return {Observable} An observable that originates from either the source or the observable returned by the\x0a *  catch `selector` function.\x0a * @name catchError\x0a */\x0afunction catchError(selector) {\x0a    return function catchErrorOperatorFunction(source) {\x0a        var operator = new CatchOperator(selector);\x0a        var caught = source.lift(operator);\x0a        return (operator.caught = caught);\x0a    };\x0a}\x0avar CatchOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\x0a    function CatchOperator(selector) {\x0a        this.selector = selector;\x0a    }\x0a    CatchOperator.prototype.call = function (subscriber, source) {\x0a        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\x0a    };\x0a    return CatchOperator;\x0a}());\x0a/**\x0a * We need this JSDoc comment for affecting ESDoc.\x0a * @ignore\x0a * @extends {Ignored}\x0a */\x0avar CatchSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\x0a    __extends(CatchSubscriber, _super);\x0a    function CatchSubscriber(destination, selector, caught) {\x0a        _super.call(this, destination);\x0a        this.selector = selector;\x0a        this.caught = caught;\x0a    }\x0a    // NOTE: overriding `error` instead of `_error` because we don\x27t want\x0a    // to have this flag this subscriber as `isStopped`. We can mimic the\x0a    // behavior of the RetrySubscriber (from the `retry` operator), where\x0a    // we unsubscribe from our source chain, reset our Subscriber flags,\x0a    // then subscribe to the selector result.\x0a    CatchSubscriber.prototype.error = function (err) {\x0a        if (!this.isStopped) {\x0a            var result = void 0;\x0a            try {\x0a                result = this.selector(err, this.caught);\x0a            }\x0a            catch (err2) {\x0a                _super.prototype.error.call(this, err2);\x0a                return;\x0a            }\x0a            this._unsubscribeAndRecycle();\x0a            this.add(Object(__WEBPACK_IMPORTED_MODULE_1__util_subscribeToResult__[\x22a\x22 /* subscribeToResult */])(this, result));\x0a        }\x0a    };\x0a    return CatchSubscriber;\x0a}(__WEBPACK_IMPORTED_MODULE_0__OuterSubscriber__[\x22a\x22 /* OuterSubscriber */]));\x0a//# sourceMappingURL=catchError.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operators/concatAll.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (immutable) */ __webpack_exports__[\x22a\x22] = concatAll;\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mergeAll__ = __webpack_require__(\x22../../../../rxjs/_esm5/operators/mergeAll.js\x22);\x0a/** PURE_IMPORTS_START ._mergeAll PURE_IMPORTS_END */\x0a\x0a/**\x0a * Converts a higher-order Observable into a first-order Observable by\x0a * concatenating the inner Observables in order.\x0a *\x0a * \x3cspan class=\x22informal\x22\x3eFlattens an Observable-of-Observables by putting one\x0a * inner Observable after the other.\x3c/span\x3e\x0a *\x0a * \x3cimg src=\x22./img/concatAll.png\x22 width=\x22100%\x22\x3e\x0a *\x0a * Joins every Observable emitted by the source (a higher-order Observable), in\x0a * a serial fashion. It subscribes to each inner Observable only after the\x0a * previous inner Observable has completed, and merges all of their values into\x0a * the returned observable.\x0a *\x0a * __Warning:__ If the source Observable emits Observables quickly and\x0a * endlessly, and the inner Observables it emits generally complete slower than\x0a * the source emits, you can run into memory issues as the incoming Observables\x0a * collect in an unbounded buffer.\x0a *\x0a * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\x0a * to `1`.\x0a *\x0a * @example \x3ccaption\x3eFor each click event, tick every second from 0 to 3, with no concurrency\x3c/caption\x3e\x0a * var clicks = Rx.Observable.fromEvent(document, \x27click\x27);\x0a * var higherOrder = clicks.map(ev =\x3e Rx.Observable.interval(1000).take(4));\x0a * var firstOrder = higherOrder.concatAll();\x0a * firstOrder.subscribe(x =\x3e console.log(x));\x0a *\x0a * // Results in the following:\x0a * // (results are not concurrent)\x0a * // For every click on the \x22document\x22 it will emit values 0 to 3 spaced\x0a * // on a 1000ms interval\x0a * // one click = 1000ms-\x3e 0 -1000ms-\x3e 1 -1000ms-\x3e 2 -1000ms-\x3e 3\x0a *\x0a * @see {@link combineAll}\x0a * @see {@link concat}\x0a * @see {@link concatMap}\x0a * @see {@link concatMapTo}\x0a * @see {@link exhaust}\x0a * @see {@link mergeAll}\x0a * @see {@link switch}\x0a * @see {@link zipAll}\x0a *\x0a * @return {Observable} An Observable emitting values from all the inner\x0a * Observables concatenated.\x0a * @method concatAll\x0a * @owner Observable\x0a */\x0afunction concatAll() {\x0a    return Object(__WEBPACK_IMPORTED_MODULE_0__mergeAll__[\x22a\x22 /* mergeAll */])(1);\x0a}\x0a//# sourceMappingURL=concatAll.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operators/concatMap.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (immutable) */ __webpack_exports__[\x22a\x22] = concatMap;\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mergeMap__ = __webpack_require__(\x22../../../../rxjs/_esm5/operators/mergeMap.js\x22);\x0a/** PURE_IMPORTS_START ._mergeMap PURE_IMPORTS_END */\x0a\x0a/* tslint:enable:max-line-length */\x0a/**\x0a * Projects each source value to an Observable which is merged in the output\x0a * Observable, in a serialized fashion waiting for each one to complete before\x0a * merging the next.\x0a *\x0a * \x3cspan class=\x22informal\x22\x3eMaps each value to an Observable, then flattens all of\x0a * these inner Observables using {@link concatAll}.\x3c/span\x3e\x0a *\x0a * \x3cimg src=\x22./img/concatMap.png\x22 width=\x22100%\x22\x3e\x0a *\x0a * Returns an Observable that emits items based on applying a function that you\x0a * supply to each item emitted by the source Observable, where that function\x0a * returns an (so-called \x22inner\x22) Observable. Each new inner Observable is\x0a * concatenated with the previous inner Observable.\x0a *\x0a * __Warning:__ if source values arrive endlessly and faster than their\x0a * corresponding inner Observables can complete, it will result in memory issues\x0a * as inner Observables amass in an unbounded buffer waiting for their turn to\x0a * be subscribed to.\x0a *\x0a * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\x0a * to `1`.\x0a *\x0a * @example \x3ccaption\x3eFor each click event, tick every second from 0 to 3, with no concurrency\x3c/caption\x3e\x0a * var clicks = Rx.Observable.fromEvent(document, \x27click\x27);\x0a * var result = clicks.concatMap(ev =\x3e Rx.Observable.interval(1000).take(4));\x0a * result.subscribe(x =\x3e console.log(x));\x0a *\x0a * // Results in the following:\x0a * // (results are not concurrent)\x0a * // For every click on the \x22document\x22 it will emit values 0 to 3 spaced\x0a * // on a 1000ms interval\x0a * // one click = 1000ms-\x3e 0 -1000ms-\x3e 1 -1000ms-\x3e 2 -1000ms-\x3e 3\x0a *\x0a * @see {@link concat}\x0a * @see {@link concatAll}\x0a * @see {@link concatMapTo}\x0a * @see {@link exhaustMap}\x0a * @see {@link mergeMap}\x0a * @see {@link switchMap}\x0a *\x0a * @param {function(value: T, ?index: number): ObservableInput} project A function\x0a * that, when applied to an item emitted by the source Observable, returns an\x0a * Observable.\x0a * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\x0a * A function to produce the value on the output Observable based on the values\x0a * and the indices of the source (outer) emission and the inner Observable\x0a * emission. The arguments passed to this function are:\x0a * - `outerValue`: the value that came from the source\x0a * - `innerValue`: the value that came from the projected Observable\x0a * - `outerIndex`: the \x22index\x22 of the value that came from the source\x0a * - `innerIndex`: the \x22index\x22 of the value from the projected Observable\x0a * @return {Observable} An Observable that emits the result of applying the\x0a * projection function (and the optional `resultSelector`) to each item emitted\x0a * by the source Observable and taking values from each projected inner\x0a * Observable sequentially.\x0a * @method concatMap\x0a * @owner Observable\x0a */\x0afunction concatMap(project, resultSelector) {\x0a    return Object(__WEBPACK_IMPORTED_MODULE_0__mergeMap__[\x22a\x22 /* mergeMap */])(project, resultSelector, 1);\x0a}\x0a//# sourceMappingURL=concatMap.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operators/defaultIfEmpty.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (immutable) */ __webpack_exports__[\x22a\x22] = defaultIfEmpty;\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Subscriber__ = __webpack_require__(\x22../../../../rxjs/_esm5/Subscriber.js\x22);\x0a/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\x0avar __extends = (this && this.__extends) || function (d, b) {\x0a    for (var p in b)\x0a        if (b.hasOwnProperty(p))\x0a            d[p] = b[p];\x0a    function __() { this.constructor = d; }\x0a    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\x0a};\x0a\x0a/* tslint:enable:max-line-length */\x0a/**\x0a * Emits a given value if the source Observable completes without emitting any\x0a * `next` value, otherwise mirrors the source Observable.\x0a *\x0a * \x3cspan class=\x22informal\x22\x3eIf the source Observable turns out to be empty, then\x0a * this operator will emit a default value.\x3c/span\x3e\x0a *\x0a * \x3cimg src=\x22./img/defaultIfEmpty.png\x22 width=\x22100%\x22\x3e\x0a *\x0a * `defaultIfEmpty` emits the values emitted by the source Observable or a\x0a * specified default value if the source Observable is empty (completes without\x0a * having emitted any `next` value).\x0a *\x0a * @example \x3ccaption\x3eIf no clicks happen in 5 seconds, then emit \x22no clicks\x22\x3c/caption\x3e\x0a * var clicks = Rx.Observable.fromEvent(document, \x27click\x27);\x0a * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\x0a * var result = clicksBeforeFive.defaultIfEmpty(\x27no clicks\x27);\x0a * result.subscribe(x =\x3e console.log(x));\x0a *\x0a * @see {@link empty}\x0a * @see {@link last}\x0a *\x0a * @param {any} [defaultValue=null] The default value used if the source\x0a * Observable is empty.\x0a * @return {Observable} An Observable that emits either the specified\x0a * `defaultValue` if the source Observable emits no items, or the values emitted\x0a * by the source Observable.\x0a * @method defaultIfEmpty\x0a * @owner Observable\x0a */\x0afunction defaultIfEmpty(defaultValue) {\x0a    if (defaultValue === void 0) {\x0a        defaultValue = null;\x0a    }\x0a    return function (source) { return source.lift(new DefaultIfEmptyOperator(defaultValue)); };\x0a}\x0avar DefaultIfEmptyOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\x0a    function DefaultIfEmptyOperator(defaultValue) {\x0a        this.defaultValue = defaultValue;\x0a    }\x0a    DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {\x0a        return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\x0a    };\x0a    return DefaultIfEmptyOperator;\x0a}());\x0a/**\x0a * We need this JSDoc comment for affecting ESDoc.\x0a * @ignore\x0a * @extends {Ignored}\x0a */\x0avar DefaultIfEmptySubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\x0a    __extends(DefaultIfEmptySubscriber, _super);\x0a    function DefaultIfEmptySubscriber(destination, defaultValue) {\x0a        _super.call(this, destination);\x0a        this.defaultValue = defaultValue;\x0a        this.isEmpty = true;\x0a    }\x0a    DefaultIfEmptySubscriber.prototype._next = function (value) {\x0a        this.isEmpty = false;\x0a        this.destination.next(value);\x0a    };\x0a    DefaultIfEmptySubscriber.prototype._complete = function () {\x0a        if (this.isEmpty) {\x0a            this.destination.next(this.defaultValue);\x0a        }\x0a        this.destination.complete();\x0a    };\x0a    return DefaultIfEmptySubscriber;\x0a}(__WEBPACK_IMPORTED_MODULE_0__Subscriber__[\x22a\x22 /* Subscriber */]));\x0a//# sourceMappingURL=defaultIfEmpty.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operators/delay.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (immutable) */ __webpack_exports__[\x22a\x22] = delay;\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__scheduler_async__ = __webpack_require__(\x22../../../../rxjs/_esm5/scheduler/async.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_isDate__ = __webpack_require__(\x22../../../../rxjs/_esm5/util/isDate.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Subscriber__ = __webpack_require__(\x22../../../../rxjs/_esm5/Subscriber.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Notification__ = __webpack_require__(\x22../../../../rxjs/_esm5/Notification.js\x22);\x0a/** PURE_IMPORTS_START .._scheduler_async,.._util_isDate,.._Subscriber,.._Notification PURE_IMPORTS_END */\x0avar __extends = (this && this.__extends) || function (d, b) {\x0a    for (var p in b)\x0a        if (b.hasOwnProperty(p))\x0a            d[p] = b[p];\x0a    function __() { this.constructor = d; }\x0a    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\x0a};\x0a\x0a\x0a\x0a\x0a/**\x0a * Delays the emission of items from the source Observable by a given timeout or\x0a * until a given Date.\x0a *\x0a * \x3cspan class=\x22informal\x22\x3eTime shifts each item by some specified amount of\x0a * milliseconds.\x3c/span\x3e\x0a *\x0a * \x3cimg src=\x22./img/delay.png\x22 width=\x22100%\x22\x3e\x0a *\x0a * If the delay argument is a Number, this operator time shifts the source\x0a * Observable by that amount of time expressed in milliseconds. The relative\x0a * time intervals between the values are preserved.\x0a *\x0a * If the delay argument is a Date, this operator time shifts the start of the\x0a * Observable execution until the given date occurs.\x0a *\x0a * @example \x3ccaption\x3eDelay each click by one second\x3c/caption\x3e\x0a * var clicks = Rx.Observable.fromEvent(document, \x27click\x27);\x0a * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\x0a * delayedClicks.subscribe(x =\x3e console.log(x));\x0a *\x0a * @example \x3ccaption\x3eDelay all clicks until a future date happens\x3c/caption\x3e\x0a * var clicks = Rx.Observable.fromEvent(document, \x27click\x27);\x0a * var date = new Date(\x27March 15, 2050 12:00:00\x27); // in the future\x0a * var delayedClicks = clicks.delay(date); // click emitted only after that date\x0a * delayedClicks.subscribe(x =\x3e console.log(x));\x0a *\x0a * @see {@link debounceTime}\x0a * @see {@link delayWhen}\x0a *\x0a * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\x0a * a `Date` until which the emission of the source items is delayed.\x0a * @param {Scheduler} [scheduler=async] The IScheduler to use for\x0a * managing the timers that handle the time-shift for each item.\x0a * @return {Observable} An Observable that delays the emissions of the source\x0a * Observable by the specified timeout or Date.\x0a * @method delay\x0a * @owner Observable\x0a */\x0afunction delay(delay, scheduler) {\x0a    if (scheduler === void 0) {\x0a        scheduler = __WEBPACK_IMPORTED_MODULE_0__scheduler_async__[\x22a\x22 /* async */];\x0a    }\x0a    var absoluteDelay = Object(__WEBPACK_IMPORTED_MODULE_1__util_isDate__[\x22a\x22 /* isDate */])(delay);\x0a    var delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\x0a    return function (source) { return source.lift(new DelayOperator(delayFor, scheduler)); };\x0a}\x0avar DelayOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\x0a    function DelayOperator(delay, scheduler) {\x0a        this.delay = delay;\x0a        this.scheduler = scheduler;\x0a    }\x0a    DelayOperator.prototype.call = function (subscriber, source) {\x0a        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\x0a    };\x0a    return DelayOperator;\x0a}());\x0a/**\x0a * We need this JSDoc comment for affecting ESDoc.\x0a * @ignore\x0a * @extends {Ignored}\x0a */\x0avar DelaySubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\x0a    __extends(DelaySubscriber, _super);\x0a    function DelaySubscriber(destination, delay, scheduler) {\x0a        _super.call(this, destination);\x0a        this.delay = delay;\x0a        this.scheduler = scheduler;\x0a        this.queue = [];\x0a        this.active = false;\x0a        this.errored = false;\x0a    }\x0a    DelaySubscriber.dispatch = function (state) {\x0a        var source = state.source;\x0a        var queue = source.queue;\x0a        var scheduler = state.scheduler;\x0a        var destination = state.destination;\x0a        while (queue.length \x3e 0 && (queue[0].time - scheduler.now()) \x3c= 0) {\x0a            queue.shift().notification.observe(destination);\x0a        }\x0a        if (queue.length \x3e 0) {\x0a            var delay_1 = Math.max(0, queue[0].time - scheduler.now());\x0a            this.schedule(state, delay_1);\x0a        }\x0a        else {\x0a            source.active = false;\x0a        }\x0a    };\x0a    DelaySubscriber.prototype._schedule = function (scheduler) {\x0a        this.active = true;\x0a        this.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\x0a            source: this, destination: this.destination, scheduler: scheduler\x0a        }));\x0a    };\x0a    DelaySubscriber.prototype.scheduleNotification = function (notification) {\x0a        if (this.errored === true) {\x0a            return;\x0a        }\x0a        var scheduler = this.scheduler;\x0a        var message = new DelayMessage(scheduler.now() + this.delay, notification);\x0a        this.queue.push(message);\x0a        if (this.active === false) {\x0a            this._schedule(scheduler);\x0a        }\x0a    };\x0a    DelaySubscriber.prototype._next = function (value) {\x0a        this.scheduleNotification(__WEBPACK_IMPORTED_MODULE_3__Notification__[\x22a\x22 /* Notification */].createNext(value));\x0a    };\x0a    DelaySubscriber.prototype._error = function (err) {\x0a        this.errored = true;\x0a        this.queue = [];\x0a        this.destination.error(err);\x0a    };\x0a    DelaySubscriber.prototype._complete = function () {\x0a        this.scheduleNotification(__WEBPACK_IMPORTED_MODULE_3__Notification__[\x22a\x22 /* Notification */].createComplete());\x0a    };\x0a    return DelaySubscriber;\x0a}(__WEBPACK_IMPORTED_MODULE_2__Subscriber__[\x22a\x22 /* Subscriber */]));\x0avar DelayMessage = /*@__PURE__*/ (/*@__PURE__*/ function () {\x0a    function DelayMessage(time, notification) {\x0a        this.time = time;\x0a        this.notification = notification;\x0a    }\x0a    return DelayMessage;\x0a}());\x0a//# sourceMappingURL=delay.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operators/every.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (immutable) */ __webpack_exports__[\x22a\x22] = every;\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Subscriber__ = __webpack_require__(\x22../../../../rxjs/_esm5/Subscriber.js\x22);\x0a/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\x0avar __extends = (this && this.__extends) || function (d, b) {\x0a    for (var p in b)\x0a        if (b.hasOwnProperty(p))\x0a            d[p] = b[p];\x0a    function __() { this.constructor = d; }\x0a    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\x0a};\x0a\x0a/**\x0a * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\x0a *\x0a * @example \x3ccaption\x3eA simple example emitting true if all elements are less than 5, false otherwise\x3c/caption\x3e\x0a *  Observable.of(1, 2, 3, 4, 5, 6)\x0a *     .every(x =\x3e x \x3c 5)\x0a *     .subscribe(x =\x3e console.log(x)); // -\x3e false\x0a *\x0a * @param {function} predicate A function for determining if an item meets a specified condition.\x0a * @param {any} [thisArg] Optional object to use for `this` in the callback.\x0a * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\x0a * @method every\x0a * @owner Observable\x0a */\x0afunction every(predicate, thisArg) {\x0a    return function (source) { return source.lift(new EveryOperator(predicate, thisArg, source)); };\x0a}\x0avar EveryOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\x0a    function EveryOperator(predicate, thisArg, source) {\x0a        this.predicate = predicate;\x0a        this.thisArg = thisArg;\x0a        this.source = source;\x0a    }\x0a    EveryOperator.prototype.call = function (observer, source) {\x0a        return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\x0a    };\x0a    return EveryOperator;\x0a}());\x0a/**\x0a * We need this JSDoc comment for affecting ESDoc.\x0a * @ignore\x0a * @extends {Ignored}\x0a */\x0avar EverySubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\x0a    __extends(EverySubscriber, _super);\x0a    function EverySubscriber(destination, predicate, thisArg, source) {\x0a        _super.call(this, destination);\x0a        this.predicate = predicate;\x0a        this.thisArg = thisArg;\x0a        this.source = source;\x0a        this.index = 0;\x0a        this.thisArg = thisArg || this;\x0a    }\x0a    EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {\x0a        this.destination.next(everyValueMatch);\x0a        this.destination.complete();\x0a    };\x0a    EverySubscriber.prototype._next = function (value) {\x0a        var result = false;\x0a        try {\x0a            result = this.predicate.call(this.thisArg, value, this.index++, this.source);\x0a        }\x0a        catch (err) {\x0a            this.destination.error(err);\x0a            return;\x0a        }\x0a        if (!result) {\x0a            this.notifyComplete(false);\x0a        }\x0a    };\x0a    EverySubscriber.prototype._complete = function () {\x0a        this.notifyComplete(true);\x0a    };\x0a    return EverySubscriber;\x0a}(__WEBPACK_IMPORTED_MODULE_0__Subscriber__[\x22a\x22 /* Subscriber */]));\x0a//# sourceMappingURL=every.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operators/filter.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (immutable) */ __webpack_exports__[\x22a\x22] = filter;\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Subscriber__ = __webpack_require__(\x22../../../../rxjs/_esm5/Subscriber.js\x22);\x0a/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\x0avar __extends = (this && this.__extends) || function (d, b) {\x0a    for (var p in b)\x0a        if (b.hasOwnProperty(p))\x0a            d[p] = b[p];\x0a    function __() { this.constructor = d; }\x0a    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\x0a};\x0a\x0a/* tslint:enable:max-line-length */\x0a/**\x0a * Filter items emitted by the source Observable by only emitting those that\x0a * satisfy a specified predicate.\x0a *\x0a * \x3cspan class=\x22informal\x22\x3eLike\x0a * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\x0a * it only emits a value from the source if it passes a criterion function.\x3c/span\x3e\x0a *\x0a * \x3cimg src=\x22./img/filter.png\x22 width=\x22100%\x22\x3e\x0a *\x0a * Similar to the well-known `Array.prototype.filter` method, this operator\x0a * takes values from the source Observable, passes them through a `predicate`\x0a * function and only emits those values that yielded `true`.\x0a *\x0a * @example \x3ccaption\x3eEmit only click events whose target was a DIV element\x3c/caption\x3e\x0a * var clicks = Rx.Observable.fromEvent(document, \x27click\x27);\x0a * var clicksOnDivs = clicks.filter(ev =\x3e ev.target.tagName === \x27DIV\x27);\x0a * clicksOnDivs.subscribe(x =\x3e console.log(x));\x0a *\x0a * @see {@link distinct}\x0a * @see {@link distinctUntilChanged}\x0a * @see {@link distinctUntilKeyChanged}\x0a * @see {@link ignoreElements}\x0a * @see {@link partition}\x0a * @see {@link skip}\x0a *\x0a * @param {function(value: T, index: number): boolean} predicate A function that\x0a * evaluates each value emitted by the source Observable. If it returns `true`,\x0a * the value is emitted, if `false` the value is not passed to the output\x0a * Observable. The `index` parameter is the number `i` for the i-th source\x0a * emission that has happened since the subscription, starting from the number\x0a * `0`.\x0a * @param {any} [thisArg] An optional argument to determine the value of `this`\x0a * in the `predicate` function.\x0a * @return {Observable} An Observable of values from the source that were\x0a * allowed by the `predicate` function.\x0a * @method filter\x0a * @owner Observable\x0a */\x0afunction filter(predicate, thisArg) {\x0a    return function filterOperatorFunction(source) {\x0a        return source.lift(new FilterOperator(predicate, thisArg));\x0a    };\x0a}\x0avar FilterOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\x0a    function FilterOperator(predicate, thisArg) {\x0a        this.predicate = predicate;\x0a        this.thisArg = thisArg;\x0a    }\x0a    FilterOperator.prototype.call = function (subscriber, source) {\x0a        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\x0a    };\x0a    return FilterOperator;\x0a}());\x0a/**\x0a * We need this JSDoc comment for affecting ESDoc.\x0a * @ignore\x0a * @extends {Ignored}\x0a */\x0avar FilterSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\x0a    __extends(FilterSubscriber, _super);\x0a    function FilterSubscriber(destination, predicate, thisArg) {\x0a        _super.call(this, destination);\x0a        this.predicate = predicate;\x0a        this.thisArg = thisArg;\x0a        this.count = 0;\x0a    }\x0a    // the try catch block below is left specifically for\x0a    // optimization and perf reasons. a tryCatcher is not necessary here.\x0a    FilterSubscriber.prototype._next = function (value) {\x0a        var result;\x0a        try {\x0a            result = this.predicate.call(this.thisArg, value, this.count++);\x0a        }\x0a        catch (err) {\x0a            this.destination.error(err);\x0a            return;\x0a        }\x0a        if (result) {\x0a            this.destination.next(value);\x0a        }\x0a    };\x0a    return FilterSubscriber;\x0a}(__WEBPACK_IMPORTED_MODULE_0__Subscriber__[\x22a\x22 /* Subscriber */]));\x0a//# sourceMappingURL=filter.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operators/first.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (immutable) */ __webpack_exports__[\x22a\x22] = first;\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Subscriber__ = __webpack_require__(\x22../../../../rxjs/_esm5/Subscriber.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_EmptyError__ = __webpack_require__(\x22../../../../rxjs/_esm5/util/EmptyError.js\x22);\x0a/** PURE_IMPORTS_START .._Subscriber,.._util_EmptyError PURE_IMPORTS_END */\x0avar __extends = (this && this.__extends) || function (d, b) {\x0a    for (var p in b)\x0a        if (b.hasOwnProperty(p))\x0a            d[p] = b[p];\x0a    function __() { this.constructor = d; }\x0a    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\x0a};\x0a\x0a\x0a/**\x0a * Emits only the first value (or the first value that meets some condition)\x0a * emitted by the source Observable.\x0a *\x0a * \x3cspan class=\x22informal\x22\x3eEmits only the first value. Or emits only the first\x0a * value that passes some test.\x3c/span\x3e\x0a *\x0a * \x3cimg src=\x22./img/first.png\x22 width=\x22100%\x22\x3e\x0a *\x0a * If called with no arguments, `first` emits the first value of the source\x0a * Observable, then completes. If called with a `predicate` function, `first`\x0a * emits the first value of the source that matches the specified condition. It\x0a * may also take a `resultSelector` function to produce the output value from\x0a * the input value, and a `defaultValue` to emit in case the source completes\x0a * before it is able to emit a valid value. Throws an error if `defaultValue`\x0a * was not provided and a matching element is not found.\x0a *\x0a * @example \x3ccaption\x3eEmit only the first click that happens on the DOM\x3c/caption\x3e\x0a * var clicks = Rx.Observable.fromEvent(document, \x27click\x27);\x0a * var result = clicks.first();\x0a * result.subscribe(x =\x3e console.log(x));\x0a *\x0a * @example \x3ccaption\x3eEmits the first click that happens on a DIV\x3c/caption\x3e\x0a * var clicks = Rx.Observable.fromEvent(document, \x27click\x27);\x0a * var result = clicks.first(ev =\x3e ev.target.tagName === \x27DIV\x27);\x0a * result.subscribe(x =\x3e console.log(x));\x0a *\x0a * @see {@link filter}\x0a * @see {@link find}\x0a * @see {@link take}\x0a *\x0a * @throws {EmptyError} Delivers an EmptyError to the Observer\x27s `error`\x0a * callback if the Observable completes before any `next` notification was sent.\x0a *\x0a * @param {function(value: T, index: number, source: Observable\x3cT\x3e): boolean} [predicate]\x0a * An optional function called with each item to test for condition matching.\x0a * @param {function(value: T, index: number): R} [resultSelector] A function to\x0a * produce the value on the output Observable based on the values\x0a * and the indices of the source Observable. The arguments passed to this\x0a * function are:\x0a * - `value`: the value that was emitted on the source.\x0a * - `index`: the \x22index\x22 of the value from the source.\x0a * @param {R} [defaultValue] The default value emitted in case no valid value\x0a * was found on the source.\x0a * @return {Observable\x3cT|R\x3e} An Observable of the first item that matches the\x0a * condition.\x0a * @method first\x0a * @owner Observable\x0a */\x0afunction first(predicate, resultSelector, defaultValue) {\x0a    return function (source) { return source.lift(new FirstOperator(predicate, resultSelector, defaultValue, source)); };\x0a}\x0avar FirstOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\x0a    function FirstOperator(predicate, resultSelector, defaultValue, source) {\x0a        this.predicate = predicate;\x0a        this.resultSelector = resultSelector;\x0a        this.defaultValue = defaultValue;\x0a        this.source = source;\x0a    }\x0a    FirstOperator.prototype.call = function (observer, source) {\x0a        return source.subscribe(new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\x0a    };\x0a    return FirstOperator;\x0a}());\x0a/**\x0a * We need this JSDoc comment for affecting ESDoc.\x0a * @ignore\x0a * @extends {Ignored}\x0a */\x0avar FirstSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\x0a    __extends(FirstSubscriber, _super);\x0a    function FirstSubscriber(destination, predicate, resultSelector, defaultValue, source) {\x0a        _super.call(this, destination);\x0a        this.predicate = predicate;\x0a        this.resultSelector = resultSelector;\x0a        this.defaultValue = defaultValue;\x0a        this.source = source;\x0a        this.index = 0;\x0a        this.hasCompleted = false;\x0a        this._emitted = false;\x0a    }\x0a    FirstSubscriber.prototype._next = function (value) {\x0a        var index = this.index++;\x0a        if (this.predicate) {\x0a            this._tryPredicate(value, index);\x0a        }\x0a        else {\x0a            this._emit(value, index);\x0a        }\x0a    };\x0a    FirstSubscriber.prototype._tryPredicate = function (value, index) {\x0a        var result;\x0a        try {\x0a            result = this.predicate(value, index, this.source);\x0a        }\x0a        catch (err) {\x0a            this.destination.error(err);\x0a            return;\x0a        }\x0a        if (result) {\x0a            this._emit(value, index);\x0a        }\x0a    };\x0a    FirstSubscriber.prototype._emit = function (value, index) {\x0a        if (this.resultSelector) {\x0a            this._tryResultSelector(value, index);\x0a            return;\x0a        }\x0a        this._emitFinal(value);\x0a    };\x0a    FirstSubscriber.prototype._tryResultSelector = function (value, index) {\x0a        var result;\x0a        try {\x0a            result = this.resultSelector(value, index);\x0a        }\x0a        catch (err) {\x0a            this.destination.error(err);\x0a            return;\x0a        }\x0a        this._emitFinal(result);\x0a    };\x0a    FirstSubscriber.prototype._emitFinal = function (value) {\x0a        var destination = this.destination;\x0a        if (!this._emitted) {\x0a            this._emitted = true;\x0a            destination.next(value);\x0a            destination.complete();\x0a            this.hasCompleted = true;\x0a        }\x0a    };\x0a    FirstSubscriber.prototype._complete = function () {\x0a        var destination = this.destination;\x0a        if (!this.hasCompleted && typeof this.defaultValue !== \x27undefined\x27) {\x0a            destination.next(this.defaultValue);\x0a            destination.complete();\x0a        }\x0a        else if (!this.hasCompleted) {\x0a            destination.error(new __WEBPACK_IMPORTED_MODULE_1__util_EmptyError__[\x22a\x22 /* EmptyError */]);\x0a        }\x0a    };\x0a    return FirstSubscriber;\x0a}(__WEBPACK_IMPORTED_MODULE_0__Subscriber__[\x22a\x22 /* Subscriber */]));\x0a//# sourceMappingURL=first.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operators/last.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (immutable) */ __webpack_exports__[\x22a\x22] = last;\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Subscriber__ = __webpack_require__(\x22../../../../rxjs/_esm5/Subscriber.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_EmptyError__ = __webpack_require__(\x22../../../../rxjs/_esm5/util/EmptyError.js\x22);\x0a/** PURE_IMPORTS_START .._Subscriber,.._util_EmptyError PURE_IMPORTS_END */\x0avar __extends = (this && this.__extends) || function (d, b) {\x0a    for (var p in b)\x0a        if (b.hasOwnProperty(p))\x0a            d[p] = b[p];\x0a    function __() { this.constructor = d; }\x0a    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\x0a};\x0a\x0a\x0a/* tslint:enable:max-line-length */\x0a/**\x0a * Returns an Observable that emits only the last item emitted by the source Observable.\x0a * It optionally takes a predicate function as a parameter, in which case, rather than emitting\x0a * the last item from the source Observable, the resulting Observable will emit the last item\x0a * from the source Observable that satisfies the predicate.\x0a *\x0a * \x3cimg src=\x22./img/last.png\x22 width=\x22100%\x22\x3e\x0a *\x0a * @throws {EmptyError} Delivers an EmptyError to the Observer\x27s `error`\x0a * callback if the Observable completes before any `next` notification was sent.\x0a * @param {function} predicate - The condition any source emitted item has to satisfy.\x0a * @return {Observable} An Observable that emits only the last item satisfying the given condition\x0a * from the source, or an NoSuchElementException if no such items are emitted.\x0a * @throws - Throws if no items that match the predicate are emitted by the source Observable.\x0a * @method last\x0a * @owner Observable\x0a */\x0afunction last(predicate, resultSelector, defaultValue) {\x0a    return function (source) { return source.lift(new LastOperator(predicate, resultSelector, defaultValue, source)); };\x0a}\x0avar LastOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\x0a    function LastOperator(predicate, resultSelector, defaultValue, source) {\x0a        this.predicate = predicate;\x0a        this.resultSelector = resultSelector;\x0a        this.defaultValue = defaultValue;\x0a        this.source = source;\x0a    }\x0a    LastOperator.prototype.call = function (observer, source) {\x0a        return source.subscribe(new LastSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\x0a    };\x0a    return LastOperator;\x0a}());\x0a/**\x0a * We need this JSDoc comment for affecting ESDoc.\x0a * @ignore\x0a * @extends {Ignored}\x0a */\x0avar LastSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\x0a    __extends(LastSubscriber, _super);\x0a    function LastSubscriber(destination, predicate, resultSelector, defaultValue, source) {\x0a        _super.call(this, destination);\x0a        this.predicate = predicate;\x0a        this.resultSelector = resultSelector;\x0a        this.defaultValue = defaultValue;\x0a        this.source = source;\x0a        this.hasValue = false;\x0a        this.index = 0;\x0a        if (typeof defaultValue !== \x27undefined\x27) {\x0a            this.lastValue = defaultValue;\x0a            this.hasValue = true;\x0a        }\x0a    }\x0a    LastSubscriber.prototype._next = function (value) {\x0a        var index = this.index++;\x0a        if (this.predicate) {\x0a            this._tryPredicate(value, index);\x0a        }\x0a        else {\x0a            if (this.resultSelector) {\x0a                this._tryResultSelector(value, index);\x0a                return;\x0a            }\x0a            this.lastValue = value;\x0a            this.hasValue = true;\x0a        }\x0a    };\x0a    LastSubscriber.prototype._tryPredicate = function (value, index) {\x0a        var result;\x0a        try {\x0a            result = this.predicate(value, index, this.source);\x0a        }\x0a        catch (err) {\x0a            this.destination.error(err);\x0a            return;\x0a        }\x0a        if (result) {\x0a            if (this.resultSelector) {\x0a                this._tryResultSelector(value, index);\x0a                return;\x0a            }\x0a            this.lastValue = value;\x0a            this.hasValue = true;\x0a        }\x0a    };\x0a    LastSubscriber.prototype._tryResultSelector = function (value, index) {\x0a        var result;\x0a        try {\x0a            result = this.resultSelector(value, index);\x0a        }\x0a        catch (err) {\x0a            this.destination.error(err);\x0a            return;\x0a        }\x0a        this.lastValue = result;\x0a        this.hasValue = true;\x0a    };\x0a    LastSubscriber.prototype._complete = function () {\x0a        var destination = this.destination;\x0a        if (this.hasValue) {\x0a            destination.next(this.lastValue);\x0a            destination.complete();\x0a        }\x0a        else {\x0a            destination.error(new __WEBPACK_IMPORTED_MODULE_1__util_EmptyError__[\x22a\x22 /* EmptyError */]);\x0a        }\x0a    };\x0a    return LastSubscriber;\x0a}(__WEBPACK_IMPORTED_MODULE_0__Subscriber__[\x22a\x22 /* Subscriber */]));\x0a//# sourceMappingURL=last.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operators/map.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (immutable) */ __webpack_exports__[\x22a\x22] = map;\x0a/* unused harmony export MapOperator */\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Subscriber__ = __webpack_require__(\x22../../../../rxjs/_esm5/Subscriber.js\x22);\x0a/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\x0avar __extends = (this && this.__extends) || function (d, b) {\x0a    for (var p in b)\x0a        if (b.hasOwnProperty(p))\x0a            d[p] = b[p];\x0a    function __() { this.constructor = d; }\x0a    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\x0a};\x0a\x0a/**\x0a * Applies a given `project` function to each value emitted by the source\x0a * Observable, and emits the resulting values as an Observable.\x0a *\x0a * \x3cspan class=\x22informal\x22\x3eLike [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\x0a * it passes each source value through a transformation function to get\x0a * corresponding output values.\x3c/span\x3e\x0a *\x0a * \x3cimg src=\x22./img/map.png\x22 width=\x22100%\x22\x3e\x0a *\x0a * Similar to the well known `Array.prototype.map` function, this operator\x0a * applies a projection to each value and emits that projection in the output\x0a * Observable.\x0a *\x0a * @example \x3ccaption\x3eMap every click to the clientX position of that click\x3c/caption\x3e\x0a * var clicks = Rx.Observable.fromEvent(document, \x27click\x27);\x0a * var positions = clicks.map(ev =\x3e ev.clientX);\x0a * positions.subscribe(x =\x3e console.log(x));\x0a *\x0a * @see {@link mapTo}\x0a * @see {@link pluck}\x0a *\x0a * @param {function(value: T, index: number): R} project The function to apply\x0a * to each `value` emitted by the source Observable. The `index` parameter is\x0a * the number `i` for the i-th emission that has happened since the\x0a * subscription, starting from the number `0`.\x0a * @param {any} [thisArg] An optional argument to define what `this` is in the\x0a * `project` function.\x0a * @return {Observable\x3cR\x3e} An Observable that emits the values from the source\x0a * Observable transformed by the given `project` function.\x0a * @method map\x0a * @owner Observable\x0a */\x0afunction map(project, thisArg) {\x0a    return function mapOperation(source) {\x0a        if (typeof project !== \x27function\x27) {\x0a            throw new TypeError(\x27argument is not a function. Are you looking for `mapTo()`?\x27);\x0a        }\x0a        return source.lift(new MapOperator(project, thisArg));\x0a    };\x0a}\x0avar MapOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\x0a    function MapOperator(project, thisArg) {\x0a        this.project = project;\x0a        this.thisArg = thisArg;\x0a    }\x0a    MapOperator.prototype.call = function (subscriber, source) {\x0a        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\x0a    };\x0a    return MapOperator;\x0a}());\x0a/**\x0a * We need this JSDoc comment for affecting ESDoc.\x0a * @ignore\x0a * @extends {Ignored}\x0a */\x0avar MapSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\x0a    __extends(MapSubscriber, _super);\x0a    function MapSubscriber(destination, project, thisArg) {\x0a        _super.call(this, destination);\x0a        this.project = project;\x0a        this.count = 0;\x0a        this.thisArg = thisArg || this;\x0a    }\x0a    // NOTE: This looks unoptimized, but it\x27s actually purposefully NOT\x0a    // using try/catch optimizations.\x0a    MapSubscriber.prototype._next = function (value) {\x0a        var result;\x0a        try {\x0a            result = this.project.call(this.thisArg, value, this.count++);\x0a        }\x0a        catch (err) {\x0a            this.destination.error(err);\x0a            return;\x0a        }\x0a        this.destination.next(result);\x0a    };\x0a    return MapSubscriber;\x0a}(__WEBPACK_IMPORTED_MODULE_0__Subscriber__[\x22a\x22 /* Subscriber */]));\x0a//# sourceMappingURL=map.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operators/merge.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (immutable) */ __webpack_exports__[\x22a\x22] = merge;\x0a/* harmony export (immutable) */ __webpack_exports__[\x22b\x22] = mergeStatic;\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(\x22../../../../rxjs/_esm5/Observable.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__observable_ArrayObservable__ = __webpack_require__(\x22../../../../rxjs/_esm5/observable/ArrayObservable.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mergeAll__ = __webpack_require__(\x22../../../../rxjs/_esm5/operators/mergeAll.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_isScheduler__ = __webpack_require__(\x22../../../../rxjs/_esm5/util/isScheduler.js\x22);\x0a/** PURE_IMPORTS_START .._Observable,.._observable_ArrayObservable,._mergeAll,.._util_isScheduler PURE_IMPORTS_END */\x0a\x0a\x0a\x0a\x0a/* tslint:enable:max-line-length */\x0afunction merge() {\x0a    var observables = [];\x0a    for (var _i = 0; _i \x3c arguments.length; _i++) {\x0a        observables[_i - 0] = arguments[_i];\x0a    }\x0a    return function (source) { return source.lift.call(mergeStatic.apply(void 0, [source].concat(observables))); };\x0a}\x0a/* tslint:enable:max-line-length */\x0a/**\x0a * Creates an output Observable which concurrently emits all values from every\x0a * given input Observable.\x0a *\x0a * \x3cspan class=\x22informal\x22\x3eFlattens multiple Observables together by blending\x0a * their values into one Observable.\x3c/span\x3e\x0a *\x0a * \x3cimg src=\x22./img/merge.png\x22 width=\x22100%\x22\x3e\x0a *\x0a * `merge` subscribes to each given input Observable (as arguments), and simply\x0a * forwards (without doing any transformation) all the values from all the input\x0a * Observables to the output Observable. The output Observable only completes\x0a * once all input Observables have completed. Any error delivered by an input\x0a * Observable will be immediately emitted on the output Observable.\x0a *\x0a * @example \x3ccaption\x3eMerge together two Observables: 1s interval and clicks\x3c/caption\x3e\x0a * var clicks = Rx.Observable.fromEvent(document, \x27click\x27);\x0a * var timer = Rx.Observable.interval(1000);\x0a * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\x0a * clicksOrTimer.subscribe(x =\x3e console.log(x));\x0a *\x0a * // Results in the following:\x0a * // timer will emit ascending values, one every second(1000ms) to console\x0a * // clicks logs MouseEvents to console everytime the \x22document\x22 is clicked\x0a * // Since the two streams are merged you see these happening\x0a * // as they occur.\x0a *\x0a * @example \x3ccaption\x3eMerge together 3 Observables, but only 2 run concurrently\x3c/caption\x3e\x0a * var timer1 = Rx.Observable.interval(1000).take(10);\x0a * var timer2 = Rx.Observable.interval(2000).take(6);\x0a * var timer3 = Rx.Observable.interval(500).take(10);\x0a * var concurrent = 2; // the argument\x0a * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\x0a * merged.subscribe(x =\x3e console.log(x));\x0a *\x0a * // Results in the following:\x0a * // - First timer1 and timer2 will run concurrently\x0a * // - timer1 will emit a value every 1000ms for 10 iterations\x0a * // - timer2 will emit a value every 2000ms for 6 iterations\x0a * // - after timer1 hits it\x27s max iteration, timer2 will\x0a * //   continue, and timer3 will start to run concurrently with timer2\x0a * // - when timer2 hits it\x27s max iteration it terminates, and\x0a * //   timer3 will continue to emit a value every 500ms until it is complete\x0a *\x0a * @see {@link mergeAll}\x0a * @see {@link mergeMap}\x0a * @see {@link mergeMapTo}\x0a * @see {@link mergeScan}\x0a *\x0a * @param {...ObservableInput} observables Input Observables to merge together.\x0a * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\x0a * Observables being subscribed to concurrently.\x0a * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\x0a * concurrency of input Observables.\x0a * @return {Observable} an Observable that emits items that are the result of\x0a * every input Observable.\x0a * @static true\x0a * @name merge\x0a * @owner Observable\x0a */\x0afunction mergeStatic() {\x0a    var observables = [];\x0a    for (var _i = 0; _i \x3c arguments.length; _i++) {\x0a        observables[_i - 0] = arguments[_i];\x0a    }\x0a    var concurrent = Number.POSITIVE_INFINITY;\x0a    var scheduler = null;\x0a    var last = observables[observables.length - 1];\x0a    if (Object(__WEBPACK_IMPORTED_MODULE_3__util_isScheduler__[\x22a\x22 /* isScheduler */])(last)) {\x0a        scheduler = observables.pop();\x0a        if (observables.length \x3e 1 && typeof observables[observables.length - 1] === \x27number\x27) {\x0a            concurrent = observables.pop();\x0a        }\x0a    }\x0a    else if (typeof last === \x27number\x27) {\x0a        concurrent = observables.pop();\x0a    }\x0a    if (scheduler === null && observables.length === 1 && observables[0] instanceof __WEBPACK_IMPORTED_MODULE_0__Observable__[\x22a\x22 /* Observable */]) {\x0a        return observables[0];\x0a    }\x0a    return Object(__WEBPACK_IMPORTED_MODULE_2__mergeAll__[\x22a\x22 /* mergeAll */])(concurrent)(new __WEBPACK_IMPORTED_MODULE_1__observable_ArrayObservable__[\x22a\x22 /* ArrayObservable */](observables, scheduler));\x0a}\x0a//# sourceMappingURL=merge.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operators/mergeAll.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (immutable) */ __webpack_exports__[\x22a\x22] = mergeAll;\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mergeMap__ = __webpack_require__(\x22../../../../rxjs/_esm5/operators/mergeMap.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_identity__ = __webpack_require__(\x22../../../../rxjs/_esm5/util/identity.js\x22);\x0a/** PURE_IMPORTS_START ._mergeMap,.._util_identity PURE_IMPORTS_END */\x0a\x0a\x0a/**\x0a * Converts a higher-order Observable into a first-order Observable which\x0a * concurrently delivers all values that are emitted on the inner Observables.\x0a *\x0a * \x3cspan class=\x22informal\x22\x3eFlattens an Observable-of-Observables.\x3c/span\x3e\x0a *\x0a * \x3cimg src=\x22./img/mergeAll.png\x22 width=\x22100%\x22\x3e\x0a *\x0a * `mergeAll` subscribes to an Observable that emits Observables, also known as\x0a * a higher-order Observable. Each time it observes one of these emitted inner\x0a * Observables, it subscribes to that and delivers all the values from the\x0a * inner Observable on the output Observable. The output Observable only\x0a * completes once all inner Observables have completed. Any error delivered by\x0a * a inner Observable will be immediately emitted on the output Observable.\x0a *\x0a * @example \x3ccaption\x3eSpawn a new interval Observable for each click event, and blend their outputs as one Observable\x3c/caption\x3e\x0a * var clicks = Rx.Observable.fromEvent(document, \x27click\x27);\x0a * var higherOrder = clicks.map((ev) =\x3e Rx.Observable.interval(1000));\x0a * var firstOrder = higherOrder.mergeAll();\x0a * firstOrder.subscribe(x =\x3e console.log(x));\x0a *\x0a * @example \x3ccaption\x3eCount from 0 to 9 every second for each click, but only allow 2 concurrent timers\x3c/caption\x3e\x0a * var clicks = Rx.Observable.fromEvent(document, \x27click\x27);\x0a * var higherOrder = clicks.map((ev) =\x3e Rx.Observable.interval(1000).take(10));\x0a * var firstOrder = higherOrder.mergeAll(2);\x0a * firstOrder.subscribe(x =\x3e console.log(x));\x0a *\x0a * @see {@link combineAll}\x0a * @see {@link concatAll}\x0a * @see {@link exhaust}\x0a * @see {@link merge}\x0a * @see {@link mergeMap}\x0a * @see {@link mergeMapTo}\x0a * @see {@link mergeScan}\x0a * @see {@link switch}\x0a * @see {@link zipAll}\x0a *\x0a * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\x0a * Observables being subscribed to concurrently.\x0a * @return {Observable} An Observable that emits values coming from all the\x0a * inner Observables emitted by the source Observable.\x0a * @method mergeAll\x0a * @owner Observable\x0a */\x0afunction mergeAll(concurrent) {\x0a    if (concurrent === void 0) {\x0a        concurrent = Number.POSITIVE_INFINITY;\x0a    }\x0a    return Object(__WEBPACK_IMPORTED_MODULE_0__mergeMap__[\x22a\x22 /* mergeMap */])(__WEBPACK_IMPORTED_MODULE_1__util_identity__[\x22a\x22 /* identity */], null, concurrent);\x0a}\x0a//# sourceMappingURL=mergeAll.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operators/mergeMap.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (immutable) */ __webpack_exports__[\x22a\x22] = mergeMap;\x0a/* unused harmony export MergeMapOperator */\x0a/* unused harmony export MergeMapSubscriber */\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_subscribeToResult__ = __webpack_require__(\x22../../../../rxjs/_esm5/util/subscribeToResult.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__ = __webpack_require__(\x22../../../../rxjs/_esm5/OuterSubscriber.js\x22);\x0a/** PURE_IMPORTS_START .._util_subscribeToResult,.._OuterSubscriber PURE_IMPORTS_END */\x0avar __extends = (this && this.__extends) || function (d, b) {\x0a    for (var p in b)\x0a        if (b.hasOwnProperty(p))\x0a            d[p] = b[p];\x0a    function __() { this.constructor = d; }\x0a    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\x0a};\x0a\x0a\x0a/* tslint:enable:max-line-length */\x0a/**\x0a * Projects each source value to an Observable which is merged in the output\x0a * Observable.\x0a *\x0a * \x3cspan class=\x22informal\x22\x3eMaps each value to an Observable, then flattens all of\x0a * these inner Observables using {@link mergeAll}.\x3c/span\x3e\x0a *\x0a * \x3cimg src=\x22./img/mergeMap.png\x22 width=\x22100%\x22\x3e\x0a *\x0a * Returns an Observable that emits items based on applying a function that you\x0a * supply to each item emitted by the source Observable, where that function\x0a * returns an Observable, and then merging those resulting Observables and\x0a * emitting the results of this merger.\x0a *\x0a * @example \x3ccaption\x3eMap and flatten each letter to an Observable ticking every 1 second\x3c/caption\x3e\x0a * var letters = Rx.Observable.of(\x27a\x27, \x27b\x27, \x27c\x27);\x0a * var result = letters.mergeMap(x =\x3e\x0a *   Rx.Observable.interval(1000).map(i =\x3e x+i)\x0a * );\x0a * result.subscribe(x =\x3e console.log(x));\x0a *\x0a * // Results in the following:\x0a * // a0\x0a * // b0\x0a * // c0\x0a * // a1\x0a * // b1\x0a * // c1\x0a * // continues to list a,b,c with respective ascending integers\x0a *\x0a * @see {@link concatMap}\x0a * @see {@link exhaustMap}\x0a * @see {@link merge}\x0a * @see {@link mergeAll}\x0a * @see {@link mergeMapTo}\x0a * @see {@link mergeScan}\x0a * @see {@link switchMap}\x0a *\x0a * @param {function(value: T, ?index: number): ObservableInput} project A function\x0a * that, when applied to an item emitted by the source Observable, returns an\x0a * Observable.\x0a * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\x0a * A function to produce the value on the output Observable based on the values\x0a * and the indices of the source (outer) emission and the inner Observable\x0a * emission. The arguments passed to this function are:\x0a * - `outerValue`: the value that came from the source\x0a * - `innerValue`: the value that came from the projected Observable\x0a * - `outerIndex`: the \x22index\x22 of the value that came from the source\x0a * - `innerIndex`: the \x22index\x22 of the value from the projected Observable\x0a * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\x0a * Observables being subscribed to concurrently.\x0a * @return {Observable} An Observable that emits the result of applying the\x0a * projection function (and the optional `resultSelector`) to each item emitted\x0a * by the source Observable and merging the results of the Observables obtained\x0a * from this transformation.\x0a * @method mergeMap\x0a * @owner Observable\x0a */\x0afunction mergeMap(project, resultSelector, concurrent) {\x0a    if (concurrent === void 0) {\x0a        concurrent = Number.POSITIVE_INFINITY;\x0a    }\x0a    return function mergeMapOperatorFunction(source) {\x0a        if (typeof resultSelector === \x27number\x27) {\x0a            concurrent = resultSelector;\x0a            resultSelector = null;\x0a        }\x0a        return source.lift(new MergeMapOperator(project, resultSelector, concurrent));\x0a    };\x0a}\x0avar MergeMapOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\x0a    function MergeMapOperator(project, resultSelector, concurrent) {\x0a        if (concurrent === void 0) {\x0a            concurrent = Number.POSITIVE_INFINITY;\x0a        }\x0a        this.project = project;\x0a        this.resultSelector = resultSelector;\x0a        this.concurrent = concurrent;\x0a    }\x0a    MergeMapOperator.prototype.call = function (observer, source) {\x0a        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));\x0a    };\x0a    return MergeMapOperator;\x0a}());\x0a/**\x0a * We need this JSDoc comment for affecting ESDoc.\x0a * @ignore\x0a * @extends {Ignored}\x0a */\x0avar MergeMapSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\x0a    __extends(MergeMapSubscriber, _super);\x0a    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {\x0a        if (concurrent === void 0) {\x0a            concurrent = Number.POSITIVE_INFINITY;\x0a        }\x0a        _super.call(this, destination);\x0a        this.project = project;\x0a        this.resultSelector = resultSelector;\x0a        this.concurrent = concurrent;\x0a        this.hasCompleted = false;\x0a        this.buffer = [];\x0a        this.active = 0;\x0a        this.index = 0;\x0a    }\x0a    MergeMapSubscriber.prototype._next = function (value) {\x0a        if (this.active \x3c this.concurrent) {\x0a            this._tryNext(value);\x0a        }\x0a        else {\x0a            this.buffer.push(value);\x0a        }\x0a    };\x0a    MergeMapSubscriber.prototype._tryNext = function (value) {\x0a        var result;\x0a        var index = this.index++;\x0a        try {\x0a            result = this.project(value, index);\x0a        }\x0a        catch (err) {\x0a            this.destination.error(err);\x0a            return;\x0a        }\x0a        this.active++;\x0a        this._innerSub(result, value, index);\x0a    };\x0a    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\x0a        this.add(Object(__WEBPACK_IMPORTED_MODULE_0__util_subscribeToResult__[\x22a\x22 /* subscribeToResult */])(this, ish, value, index));\x0a    };\x0a    MergeMapSubscriber.prototype._complete = function () {\x0a        this.hasCompleted = true;\x0a        if (this.active === 0 && this.buffer.length === 0) {\x0a            this.destination.complete();\x0a        }\x0a    };\x0a    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\x0a        if (this.resultSelector) {\x0a            this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\x0a        }\x0a        else {\x0a            this.destination.next(innerValue);\x0a        }\x0a    };\x0a    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\x0a        var result;\x0a        try {\x0a            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\x0a        }\x0a        catch (err) {\x0a            this.destination.error(err);\x0a            return;\x0a        }\x0a        this.destination.next(result);\x0a    };\x0a    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\x0a        var buffer = this.buffer;\x0a        this.remove(innerSub);\x0a        this.active--;\x0a        if (buffer.length \x3e 0) {\x0a            this._next(buffer.shift());\x0a        }\x0a        else if (this.active === 0 && this.hasCompleted) {\x0a            this.destination.complete();\x0a        }\x0a    };\x0a    return MergeMapSubscriber;\x0a}(__WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__[\x22a\x22 /* OuterSubscriber */]));\x0a//# sourceMappingURL=mergeMap.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operators/multicast.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (immutable) */ __webpack_exports__[\x22a\x22] = multicast;\x0a/* unused harmony export MulticastOperator */\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__observable_ConnectableObservable__ = __webpack_require__(\x22../../../../rxjs/_esm5/observable/ConnectableObservable.js\x22);\x0a/** PURE_IMPORTS_START .._observable_ConnectableObservable PURE_IMPORTS_END */\x0a\x0a/* tslint:enable:max-line-length */\x0a/**\x0a * Returns an Observable that emits the results of invoking a specified selector on items\x0a * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\x0a *\x0a * \x3cimg src=\x22./img/multicast.png\x22 width=\x22100%\x22\x3e\x0a *\x0a * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\x0a * which the source sequence\x27s elements will be multicast to the selector function\x0a * or Subject to push source elements into.\x0a * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\x0a * as many times as needed, without causing multiple subscriptions to the source stream.\x0a * Subscribers to the given source will receive all notifications of the source from the\x0a * time of the subscription forward.\x0a * @return {Observable} An Observable that emits the results of invoking the selector\x0a * on the items emitted by a `ConnectableObservable` that shares a single subscription to\x0a * the underlying stream.\x0a * @method multicast\x0a * @owner Observable\x0a */\x0afunction multicast(subjectOrSubjectFactory, selector) {\x0a    return function multicastOperatorFunction(source) {\x0a        var subjectFactory;\x0a        if (typeof subjectOrSubjectFactory === \x27function\x27) {\x0a            subjectFactory = subjectOrSubjectFactory;\x0a        }\x0a        else {\x0a            subjectFactory = function subjectFactory() {\x0a                return subjectOrSubjectFactory;\x0a            };\x0a        }\x0a        if (typeof selector === \x27function\x27) {\x0a            return source.lift(new MulticastOperator(subjectFactory, selector));\x0a        }\x0a        var connectable = Object.create(source, __WEBPACK_IMPORTED_MODULE_0__observable_ConnectableObservable__[\x22a\x22 /* connectableObservableDescriptor */]);\x0a        connectable.source = source;\x0a        connectable.subjectFactory = subjectFactory;\x0a        return connectable;\x0a    };\x0a}\x0avar MulticastOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\x0a    function MulticastOperator(subjectFactory, selector) {\x0a        this.subjectFactory = subjectFactory;\x0a        this.selector = selector;\x0a    }\x0a    MulticastOperator.prototype.call = function (subscriber, source) {\x0a        var selector = this.selector;\x0a        var subject = this.subjectFactory();\x0a        var subscription = selector(subject).subscribe(subscriber);\x0a        subscription.add(source.subscribe(subject));\x0a        return subscription;\x0a    };\x0a    return MulticastOperator;\x0a}());\x0a//# sourceMappingURL=multicast.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operators/observeOn.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* unused harmony export observeOn */\x0a/* unused harmony export ObserveOnOperator */\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return ObserveOnSubscriber; });\x0a/* unused harmony export ObserveOnMessage */\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Subscriber__ = __webpack_require__(\x22../../../../rxjs/_esm5/Subscriber.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Notification__ = __webpack_require__(\x22../../../../rxjs/_esm5/Notification.js\x22);\x0a/** PURE_IMPORTS_START .._Subscriber,.._Notification PURE_IMPORTS_END */\x0avar __extends = (this && this.__extends) || function (d, b) {\x0a    for (var p in b)\x0a        if (b.hasOwnProperty(p))\x0a            d[p] = b[p];\x0a    function __() { this.constructor = d; }\x0a    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\x0a};\x0a\x0a\x0a/**\x0a *\x0a * Re-emits all notifications from source Observable with specified scheduler.\x0a *\x0a * \x3cspan class=\x22informal\x22\x3eEnsure a specific scheduler is used, from outside of an Observable.\x3c/span\x3e\x0a *\x0a * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\x0a * notifications emitted by the source Observable. It might be useful, if you do not have control over\x0a * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\x0a *\x0a * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\x0a * but rescheduled with provided scheduler. Note that this doesn\x27t mean that source Observables internal\x0a * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\x0a * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\x0a * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\x0a * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\x0a * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\x0a * little bit more, to ensure that they are emitted at expected moments.\x0a *\x0a * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\x0a * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\x0a * will delay all notifications - including error notifications - while `delay` will pass through error\x0a * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\x0a * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\x0a * for notification emissions in general.\x0a *\x0a * @example \x3ccaption\x3eEnsure values in subscribe are called just before browser repaint.\x3c/caption\x3e\x0a * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\x0a *                                               // with async scheduler by default...\x0a *\x0a * intervals\x0a * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\x0a * .subscribe(val =\x3e {                           // scheduler to ensure smooth animation.\x0a *   someDiv.style.height = val + \x27px\x27;\x0a * });\x0a *\x0a * @see {@link delay}\x0a *\x0a * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.\x0a * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\x0a * @return {Observable\x3cT\x3e} Observable that emits the same notifications as the source Observable,\x0a * but with provided scheduler.\x0a *\x0a * @method observeOn\x0a * @owner Observable\x0a */\x0afunction observeOn(scheduler, delay) {\x0a    if (delay === void 0) {\x0a        delay = 0;\x0a    }\x0a    return function observeOnOperatorFunction(source) {\x0a        return source.lift(new ObserveOnOperator(scheduler, delay));\x0a    };\x0a}\x0avar ObserveOnOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\x0a    function ObserveOnOperator(scheduler, delay) {\x0a        if (delay === void 0) {\x0a            delay = 0;\x0a        }\x0a        this.scheduler = scheduler;\x0a        this.delay = delay;\x0a    }\x0a    ObserveOnOperator.prototype.call = function (subscriber, source) {\x0a        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\x0a    };\x0a    return ObserveOnOperator;\x0a}());\x0a/**\x0a * We need this JSDoc comment for affecting ESDoc.\x0a * @ignore\x0a * @extends {Ignored}\x0a */\x0avar ObserveOnSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\x0a    __extends(ObserveOnSubscriber, _super);\x0a    function ObserveOnSubscriber(destination, scheduler, delay) {\x0a        if (delay === void 0) {\x0a            delay = 0;\x0a        }\x0a        _super.call(this, destination);\x0a        this.scheduler = scheduler;\x0a        this.delay = delay;\x0a    }\x0a    ObserveOnSubscriber.dispatch = function (arg) {\x0a        var notification = arg.notification, destination = arg.destination;\x0a        notification.observe(destination);\x0a        this.unsubscribe();\x0a    };\x0a    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\x0a        this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\x0a    };\x0a    ObserveOnSubscriber.prototype._next = function (value) {\x0a        this.scheduleMessage(__WEBPACK_IMPORTED_MODULE_1__Notification__[\x22a\x22 /* Notification */].createNext(value));\x0a    };\x0a    ObserveOnSubscriber.prototype._error = function (err) {\x0a        this.scheduleMessage(__WEBPACK_IMPORTED_MODULE_1__Notification__[\x22a\x22 /* Notification */].createError(err));\x0a    };\x0a    ObserveOnSubscriber.prototype._complete = function () {\x0a        this.scheduleMessage(__WEBPACK_IMPORTED_MODULE_1__Notification__[\x22a\x22 /* Notification */].createComplete());\x0a    };\x0a    return ObserveOnSubscriber;\x0a}(__WEBPACK_IMPORTED_MODULE_0__Subscriber__[\x22a\x22 /* Subscriber */]));\x0avar ObserveOnMessage = /*@__PURE__*/ (/*@__PURE__*/ function () {\x0a    function ObserveOnMessage(notification, destination) {\x0a        this.notification = notification;\x0a        this.destination = destination;\x0a    }\x0a    return ObserveOnMessage;\x0a}());\x0a//# sourceMappingURL=observeOn.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operators/reduce.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (immutable) */ __webpack_exports__[\x22a\x22] = reduce;\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__scan__ = __webpack_require__(\x22../../../../rxjs/_esm5/operators/scan.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__takeLast__ = __webpack_require__(\x22../../../../rxjs/_esm5/operators/takeLast.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__defaultIfEmpty__ = __webpack_require__(\x22../../../../rxjs/_esm5/operators/defaultIfEmpty.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_pipe__ = __webpack_require__(\x22../../../../rxjs/_esm5/util/pipe.js\x22);\x0a/** PURE_IMPORTS_START ._scan,._takeLast,._defaultIfEmpty,.._util_pipe PURE_IMPORTS_END */\x0a\x0a\x0a\x0a\x0a/* tslint:enable:max-line-length */\x0a/**\x0a * Applies an accumulator function over the source Observable, and returns the\x0a * accumulated result when the source completes, given an optional seed value.\x0a *\x0a * \x3cspan class=\x22informal\x22\x3eCombines together all values emitted on the source,\x0a * using an accumulator function that knows how to join a new source value into\x0a * the accumulation from the past.\x3c/span\x3e\x0a *\x0a * \x3cimg src=\x22./img/reduce.png\x22 width=\x22100%\x22\x3e\x0a *\x0a * Like\x0a * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\x0a * `reduce` applies an `accumulator` function against an accumulation and each\x0a * value of the source Observable (from the past) to reduce it to a single\x0a * value, emitted on the output Observable. Note that `reduce` will only emit\x0a * one value, only when the source Observable completes. It is equivalent to\x0a * applying operator {@link scan} followed by operator {@link last}.\x0a *\x0a * Returns an Observable that applies a specified `accumulator` function to each\x0a * item emitted by the source Observable. If a `seed` value is specified, then\x0a * that value will be used as the initial value for the accumulator. If no seed\x0a * value is specified, the first item of the source is used as the seed.\x0a *\x0a * @example \x3ccaption\x3eCount the number of click events that happened in 5 seconds\x3c/caption\x3e\x0a * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, \x27click\x27)\x0a *   .takeUntil(Rx.Observable.interval(5000));\x0a * var ones = clicksInFiveSeconds.mapTo(1);\x0a * var seed = 0;\x0a * var count = ones.reduce((acc, one) =\x3e acc + one, seed);\x0a * count.subscribe(x =\x3e console.log(x));\x0a *\x0a * @see {@link count}\x0a * @see {@link expand}\x0a * @see {@link mergeScan}\x0a * @see {@link scan}\x0a *\x0a * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\x0a * called on each source value.\x0a * @param {R} [seed] The initial accumulation value.\x0a * @return {Observable\x3cR\x3e} An Observable that emits a single value that is the\x0a * result of accumulating the values emitted by the source Observable.\x0a * @method reduce\x0a * @owner Observable\x0a */\x0afunction reduce(accumulator, seed) {\x0a    // providing a seed of `undefined` *should* be valid and trigger\x0a    // hasSeed! so don\x27t use `seed !== undefined` checks!\x0a    // For this reason, we have to check it here at the original call site\x0a    // otherwise inside Operator/Subscriber we won\x27t know if `undefined`\x0a    // means they didn\x27t provide anything or if they literally provided `undefined`\x0a    if (arguments.length \x3e= 2) {\x0a        return function reduceOperatorFunctionWithSeed(source) {\x0a            return Object(__WEBPACK_IMPORTED_MODULE_3__util_pipe__[\x22a\x22 /* pipe */])(Object(__WEBPACK_IMPORTED_MODULE_0__scan__[\x22a\x22 /* scan */])(accumulator, seed), Object(__WEBPACK_IMPORTED_MODULE_1__takeLast__[\x22a\x22 /* takeLast */])(1), Object(__WEBPACK_IMPORTED_MODULE_2__defaultIfEmpty__[\x22a\x22 /* defaultIfEmpty */])(seed))(source);\x0a        };\x0a    }\x0a    return function reduceOperatorFunction(source) {\x0a        return Object(__WEBPACK_IMPORTED_MODULE_3__util_pipe__[\x22a\x22 /* pipe */])(Object(__WEBPACK_IMPORTED_MODULE_0__scan__[\x22a\x22 /* scan */])(function (acc, value, index) {\x0a            return accumulator(acc, value, index + 1);\x0a        }), Object(__WEBPACK_IMPORTED_MODULE_1__takeLast__[\x22a\x22 /* takeLast */])(1))(source);\x0a    };\x0a}\x0a//# sourceMappingURL=reduce.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operators/refCount.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (immutable) */ __webpack_exports__[\x22a\x22] = refCount;\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Subscriber__ = __webpack_require__(\x22../../../../rxjs/_esm5/Subscriber.js\x22);\x0a/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\x0avar __extends = (this && this.__extends) || function (d, b) {\x0a    for (var p in b)\x0a        if (b.hasOwnProperty(p))\x0a            d[p] = b[p];\x0a    function __() { this.constructor = d; }\x0a    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\x0a};\x0a\x0afunction refCount() {\x0a    return function refCountOperatorFunction(source) {\x0a        return source.lift(new RefCountOperator(source));\x0a    };\x0a}\x0avar RefCountOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\x0a    function RefCountOperator(connectable) {\x0a        this.connectable = connectable;\x0a    }\x0a    RefCountOperator.prototype.call = function (subscriber, source) {\x0a        var connectable = this.connectable;\x0a        connectable._refCount++;\x0a        var refCounter = new RefCountSubscriber(subscriber, connectable);\x0a        var subscription = source.subscribe(refCounter);\x0a        if (!refCounter.closed) {\x0a            refCounter.connection = connectable.connect();\x0a        }\x0a        return subscription;\x0a    };\x0a    return RefCountOperator;\x0a}());\x0avar RefCountSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\x0a    __extends(RefCountSubscriber, _super);\x0a    function RefCountSubscriber(destination, connectable) {\x0a        _super.call(this, destination);\x0a        this.connectable = connectable;\x0a    }\x0a    RefCountSubscriber.prototype._unsubscribe = function () {\x0a        var connectable = this.connectable;\x0a        if (!connectable) {\x0a            this.connection = null;\x0a            return;\x0a        }\x0a        this.connectable = null;\x0a        var refCount = connectable._refCount;\x0a        if (refCount \x3c= 0) {\x0a            this.connection = null;\x0a            return;\x0a        }\x0a        connectable._refCount = refCount - 1;\x0a        if (refCount \x3e 1) {\x0a            this.connection = null;\x0a            return;\x0a        }\x0a        ///\x0a        // Compare the local RefCountSubscriber\x27s connection Subscription to the\x0a        // connection Subscription on the shared ConnectableObservable. In cases\x0a        // where the ConnectableObservable source synchronously emits values, and\x0a        // the RefCountSubscriber\x27s downstream Observers synchronously unsubscribe,\x0a        // execution continues to here before the RefCountOperator has a chance to\x0a        // supply the RefCountSubscriber with the shared connection Subscription.\x0a        // For example:\x0a        // ```\x0a        // Observable.range(0, 10)\x0a        //   .publish()\x0a        //   .refCount()\x0a        //   .take(5)\x0a        //   .subscribe();\x0a        // ```\x0a        // In order to account for this case, RefCountSubscriber should only dispose\x0a        // the ConnectableObservable\x27s shared connection Subscription if the\x0a        // connection Subscription exists, *and* either:\x0a        //   a. RefCountSubscriber doesn\x27t have a reference to the shared connection\x0a        //      Subscription yet, or,\x0a        //   b. RefCountSubscriber\x27s connection Subscription reference is identical\x0a        //      to the shared connection Subscription\x0a        ///\x0a        var connection = this.connection;\x0a        var sharedConnection = connectable._connection;\x0a        this.connection = null;\x0a        if (sharedConnection && (!connection || sharedConnection === connection)) {\x0a            sharedConnection.unsubscribe();\x0a        }\x0a    };\x0a    return RefCountSubscriber;\x0a}(__WEBPACK_IMPORTED_MODULE_0__Subscriber__[\x22a\x22 /* Subscriber */]));\x0a//# sourceMappingURL=refCount.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operators/scan.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (immutable) */ __webpack_exports__[\x22a\x22] = scan;\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Subscriber__ = __webpack_require__(\x22../../../../rxjs/_esm5/Subscriber.js\x22);\x0a/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\x0avar __extends = (this && this.__extends) || function (d, b) {\x0a    for (var p in b)\x0a        if (b.hasOwnProperty(p))\x0a            d[p] = b[p];\x0a    function __() { this.constructor = d; }\x0a    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\x0a};\x0a\x0a/* tslint:enable:max-line-length */\x0a/**\x0a * Applies an accumulator function over the source Observable, and returns each\x0a * intermediate result, with an optional seed value.\x0a *\x0a * \x3cspan class=\x22informal\x22\x3eIt\x27s like {@link reduce}, but emits the current\x0a * accumulation whenever the source emits a value.\x3c/span\x3e\x0a *\x0a * \x3cimg src=\x22./img/scan.png\x22 width=\x22100%\x22\x3e\x0a *\x0a * Combines together all values emitted on the source, using an accumulator\x0a * function that knows how to join a new source value into the accumulation from\x0a * the past. Is similar to {@link reduce}, but emits the intermediate\x0a * accumulations.\x0a *\x0a * Returns an Observable that applies a specified `accumulator` function to each\x0a * item emitted by the source Observable. If a `seed` value is specified, then\x0a * that value will be used as the initial value for the accumulator. If no seed\x0a * value is specified, the first item of the source is used as the seed.\x0a *\x0a * @example \x3ccaption\x3eCount the number of click events\x3c/caption\x3e\x0a * var clicks = Rx.Observable.fromEvent(document, \x27click\x27);\x0a * var ones = clicks.mapTo(1);\x0a * var seed = 0;\x0a * var count = ones.scan((acc, one) =\x3e acc + one, seed);\x0a * count.subscribe(x =\x3e console.log(x));\x0a *\x0a * @see {@link expand}\x0a * @see {@link mergeScan}\x0a * @see {@link reduce}\x0a *\x0a * @param {function(acc: R, value: T, index: number): R} accumulator\x0a * The accumulator function called on each source value.\x0a * @param {T|R} [seed] The initial accumulation value.\x0a * @return {Observable\x3cR\x3e} An observable of the accumulated values.\x0a * @method scan\x0a * @owner Observable\x0a */\x0afunction scan(accumulator, seed) {\x0a    var hasSeed = false;\x0a    // providing a seed of `undefined` *should* be valid and trigger\x0a    // hasSeed! so don\x27t use `seed !== undefined` checks!\x0a    // For this reason, we have to check it here at the original call site\x0a    // otherwise inside Operator/Subscriber we won\x27t know if `undefined`\x0a    // means they didn\x27t provide anything or if they literally provided `undefined`\x0a    if (arguments.length \x3e= 2) {\x0a        hasSeed = true;\x0a    }\x0a    return function scanOperatorFunction(source) {\x0a        return source.lift(new ScanOperator(accumulator, seed, hasSeed));\x0a    };\x0a}\x0avar ScanOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\x0a    function ScanOperator(accumulator, seed, hasSeed) {\x0a        if (hasSeed === void 0) {\x0a            hasSeed = false;\x0a        }\x0a        this.accumulator = accumulator;\x0a        this.seed = seed;\x0a        this.hasSeed = hasSeed;\x0a    }\x0a    ScanOperator.prototype.call = function (subscriber, source) {\x0a        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\x0a    };\x0a    return ScanOperator;\x0a}());\x0a/**\x0a * We need this JSDoc comment for affecting ESDoc.\x0a * @ignore\x0a * @extends {Ignored}\x0a */\x0avar ScanSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\x0a    __extends(ScanSubscriber, _super);\x0a    function ScanSubscriber(destination, accumulator, _seed, hasSeed) {\x0a        _super.call(this, destination);\x0a        this.accumulator = accumulator;\x0a        this._seed = _seed;\x0a        this.hasSeed = hasSeed;\x0a        this.index = 0;\x0a    }\x0a    Object.defineProperty(ScanSubscriber.prototype, \x22seed\x22, {\x0a        get: function () {\x0a            return this._seed;\x0a        },\x0a        set: function (value) {\x0a            this.hasSeed = true;\x0a            this._seed = value;\x0a        },\x0a        enumerable: true,\x0a        configurable: true\x0a    });\x0a    ScanSubscriber.prototype._next = function (value) {\x0a        if (!this.hasSeed) {\x0a            this.seed = value;\x0a            this.destination.next(value);\x0a        }\x0a        else {\x0a            return this._tryNext(value);\x0a        }\x0a    };\x0a    ScanSubscriber.prototype._tryNext = function (value) {\x0a        var index = this.index++;\x0a        var result;\x0a        try {\x0a            result = this.accumulator(this.seed, value, index);\x0a        }\x0a        catch (err) {\x0a            this.destination.error(err);\x0a        }\x0a        this.seed = result;\x0a        this.destination.next(result);\x0a    };\x0a    return ScanSubscriber;\x0a}(__WEBPACK_IMPORTED_MODULE_0__Subscriber__[\x22a\x22 /* Subscriber */]));\x0a//# sourceMappingURL=scan.js.map \x0a\x0a\x0a/***/ }),\x0a\x0a/***/ \x22../../../../rxjs/_esm5/operators/share.js\x22:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (immutable) */ __webpack_exports__[\x22a\x22] = share;\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__multicast__ = __webpack_require__(\x22../../../../rxjs/_esm5/operators/multicast.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__refCount__ = __webpack_require__(\x22../../../../rxjs/_esm5/operators/refCount.js\x22);\x0a/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Subject__ = __webpack_require__(\x22../../../../rxjs/_esm5/Subject.js\x22);\x0a/** PURE_IMPORTS_START ._multicast,._refCount,.._Subject PURE_IMPORTS_END */\x0a\x0a\x0a\x0afunction shareSubjectFactory() {\x0a    return new __WEBPACK_IMPORTED_MODULE_2__Subject__[\x22a\x22 /* Subject */]();\x0a}\x0a/**\x0a * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\x0a * Subscriber this Observable will be subscribed and emitting data. When all subscribers have uns'}